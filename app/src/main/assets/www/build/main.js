webpackJsonp([46],{

/***/ 147:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AnnonceAddAnnulerPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__annonces_annonces__ = __webpack_require__(18);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



/**
 * Generated class for the AnnonceAddAnnulerPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AnnonceAddAnnulerPage = /** @class */ (function () {
    function AnnonceAddAnnulerPage(navCtrl, navParams, viewCtrl, platform) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.viewCtrl = viewCtrl;
        this.platform = platform;
        this.user = {};
        this.source = "";
        this.user = navParams.get('user');
        this.source = navParams.get('source');
        this.platform.registerBackButtonAction(function () {
            _this.dismiss();
        });
    }
    AnnonceAddAnnulerPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AnnonceAddAnnulerPage');
    };
    AnnonceAddAnnulerPage.prototype.dismiss = function () {
        this.viewCtrl.dismiss({ etat: "non" });
    };
    AnnonceAddAnnulerPage.prototype.annuler = function () {
        if (this.source == "update") {
            this.viewCtrl.dismiss({ etat: "update" });
        }
        else {
            // let home = AnnoncesPage;
            // this.navCtrl.setRoot(home, 
            //   {user: this.user}, 
            //   {animate: true});
            this.viewCtrl.dismiss({ etat: "annonces" });
        }
    };
    AnnonceAddAnnulerPage.prototype.publier = function () {
        var home = __WEBPACK_IMPORTED_MODULE_2__annonces_annonces__["a" /* AnnoncesPage */];
        this.navCtrl.setRoot(home, { user: this.user }, { animate: true });
    };
    AnnonceAddAnnulerPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-annonce-add-annuler',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/annonce-add-annuler/annonce-add-annuler.html"*/'<ion-content class="container">\n\n    <ion-grid class="ctn-rec">\n      <ion-row class="flex-row">\n        <ion-col>\n          <ion-row>\n            <ion-col>\n              <ion-label class="ws-norm title-rec">\n                <img class="danger-icon" src="../../assets/icon/error-ff0000.svg" />\n              </ion-label>\n            </ion-col>\n          </ion-row>\n          <ion-row>\n            <ion-col>\n              <ion-label class="ws-norm">\n                Êtes-vous sûr de vouloir quitter l\'annonce ?\n              </ion-label>\n            </ion-col>\n          </ion-row>\n          <ion-row>\n            <ion-col size="6">\n              <button ion-button round class="btn-download" (click)="annuler();">OUI</button>\n            </ion-col>\n            <ion-col size="6">\n              <button ion-button round class="btn-blue-gradient" (click)="dismiss();">NON</button>\n            </ion-col>\n          </ion-row>\n        </ion-col>\n      </ion-row>\n  \n    </ion-grid>\n  \n  </ion-content>\n  '/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/annonce-add-annuler/annonce-add-annuler.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */]])
    ], AnnonceAddAnnulerPage);
    return AnnonceAddAnnulerPage;
}());

//# sourceMappingURL=annonce-add-annuler.js.map

/***/ }),

/***/ 148:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PopupcertPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_toast__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__photopopup_photopopup__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_storage__ = __webpack_require__(15);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};







/**
 * Generated class for the PopupcertPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PopupcertPage = /** @class */ (function () {
    function PopupcertPage(navCtrl, navParams, viewCtrl, modalCtrl, alertCtrl, globals, http, toast, storage) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.viewCtrl = viewCtrl;
        this.modalCtrl = modalCtrl;
        this.alertCtrl = alertCtrl;
        this.globals = globals;
        this.http = http;
        this.toast = toast;
        this.storage = storage;
        this.user = {};
        this.load = 0;
        this.cert_text = null;
        this.user = navParams.get('user');
        this.getCertTextFromStorage();
    }
    PopupcertPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad PopupcertPage');
    };
    PopupcertPage.prototype.getCertTextFromStorage = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                this.storage.get("cert_text")
                    .then(function (certtext) {
                    console.log("Cert text in the popup certificate : ");
                    console.log(certtext);
                    _this.cert_text = certtext;
                }, function (error) {
                    console.log("Error getting local cert text");
                });
                return [2 /*return*/];
            });
        });
    };
    PopupcertPage.prototype.dismiss = function () {
        var data = { 'foo': 'bar' };
        this.viewCtrl.dismiss(data);
    };
    PopupcertPage.prototype.prendrePhoto = function () {
        var _this = this;
        var takePic = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_5__photopopup_photopopup__["a" /* PhotopopupPage */], {
            source: 2,
            user: this.user,
            title: "Envoyer"
        });
        takePic.onDidDismiss(function (data) {
            //this.viewCtrl.dismiss();
            if (data != null) {
                _this.load = 1;
                _this.uploadCertPhotoB64(data);
            }
            else {
                _this.toast.show("Pas de photo prise !", "3000", "bottom")
                    .subscribe(function (t) { return console.log(JSON.stringify(t)); });
            }
            // this.viewCtrl.dismiss();
        });
        takePic.present();
    };
    PopupcertPage.prototype.uploadCertPhoto = function (img) {
        var _this = this;
        //certificate
        this.http.uploadFile(this.globals.variables.urls.certificate, {
            "user_id": "" + (this.user.id_User != null ? this.user.id_User : this.user.id)
        }, {}, img.data.nativeURL, 'file')
            .then(function (data) {
            _this.load = 0;
            var res = JSON.parse(data.data);
            if (res.status == "OK") {
                var alert_1 = _this.alertCtrl.create({
                    title: 'Information !',
                    message: 'Votre photo a été téléchargée',
                    buttons: ['Ok']
                });
                alert_1.present();
                _this.viewCtrl.dismiss({
                    etat: "uploaded"
                });
            }
            console.log(JSON.stringify(data.data));
        }, function (error) {
            var alert = _this.alertCtrl.create({
                title: 'Information !',
                message: 'Une erreur c\'est produite lors de la téléchargement',
                buttons: ['Ok']
            });
            alert.present();
            _this.viewCtrl.dismiss({
                etat: "error"
            });
            console.log(JSON.stringify(error));
        });
    };
    PopupcertPage.prototype.uploadCertPhotoB64 = function (img) {
        var _this = this;
        //certificate
        this.http.post(this.globals.variables.urls.certificate, {
            "user_id": "" + (this.user.id_User != null ? this.user.id_User : this.user.id),
        }, {})
            .then(function (data) {
            _this.http.post(_this.globals.variables.urls.addImageCertificateB64, {
                "user_id": "" + (_this.user.id_User != null ? _this.user.id_User : _this.user.id),
                "image": img.data.nativeURL,
                "source": data.data.source
            }, {})
                .then(function (data) {
                _this.load = 0;
                var res = JSON.parse(data.data);
                if (res.status == "OK") {
                    var alert_2 = _this.alertCtrl.create({
                        title: 'Information !',
                        message: 'Votre photo a été téléchargée',
                        buttons: ['Ok']
                    });
                    alert_2.present();
                    _this.viewCtrl.dismiss({
                        etat: "uploaded"
                    });
                }
                console.log(JSON.stringify(data.data));
            }, function (error) {
                _this.load = 0;
                var alert = _this.alertCtrl.create({
                    title: 'Information !',
                    message: 'Une erreur c\'est produite lors de la téléchargement',
                    buttons: ['Ok']
                });
                alert.present();
                _this.viewCtrl.dismiss({
                    etat: "error"
                });
                console.log(JSON.stringify(error));
            });
        }, function (error) {
            _this.load = 0;
            console.log();
            var alert = _this.alertCtrl.create({
                title: 'Information !',
                message: 'Une erreur c\'est produite, \n Veuillez réessayer à votre prochaine connexion SVP !',
                buttons: ['Ok']
            });
            alert.present();
            _this.viewCtrl.dismiss({
                etat: "error"
            });
        });
    };
    PopupcertPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-popupcert',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/popupcert/popupcert.html"*/'<ion-content class="container">\n\n  <ion-row ion-fixed class="load-ctn" id="load" *ngIf="load == 1">\n    <ion-spinner class="loading-custom" name="crescent" color="vert_logo"></ion-spinner>\n  </ion-row>\n\n  <ion-row class="top-margin"></ion-row>\n\n  <ion-row class="gc-ctn">\n\n    <div>\n      <img class="cert" src="assets/icon/pictos-certification.png">\n    </div>\n    <div>\n      <ion-label *ngIf="cert_text != null" class="gc-label" [innerHtml]="cert_text">\n\n      </ion-label>\n      <ion-label *ngIf="cert_text == null" class="gc-label">\n        <strong>Nous procédons à quelques améliorations pour le\n          moment. Aidez nous à tester l\'application !</strong><br/>Professionnel ou étudiant,\n        faites vérifier et certifier votre profil afin de rassurer les autres utilisateurs sur la\n        fiabilité de vos interventions.<br/>Scannez votre carte étudiante ou un document attestant de\n        votre profession.\n      </ion-label>\n    </div>\n    <div>\n      <button ion-button round class="btn-blue-gradient" (click)="prendrePhoto();">\n        Prendre une photo\n        <span style="color: rgba(0,0,0,0.0);">CC</span>\n        <ion-icon class="camera">\n          <img class="img-cam" src="../../assets/icon/photo-camera-fin-white.svg">\n        </ion-icon>\n      </button>\n    </div>\n    <div (click)="dismiss();">\n      <ion-label class="just-fine">\n        Non merci\n      </ion-label>\n    </div>\n\n  </ion-row>\n\n</ion-content>'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/popupcert/popupcert.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_2__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_toast__["a" /* Toast */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_storage__["b" /* Storage */]])
    ], PopupcertPage);
    return PopupcertPage;
}());

//# sourceMappingURL=popupcert.js.map

/***/ }),

/***/ 149:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Createacc1Page; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__createacc2_createacc2__ = __webpack_require__(150);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_http__ = __webpack_require__(6);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the Createacc1Page page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var Createacc1Page = /** @class */ (function () {
    function Createacc1Page(navCtrl, navParams, alertCtrl, globals, http) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.alertCtrl = alertCtrl;
        this.globals = globals;
        this.http = http;
        this.load = 0;
        this.pseudo = '';
    }
    Createacc1Page.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad Createacc1Page');
    };
    Createacc1Page.prototype.precedent = function () {
        this.navCtrl.pop();
    };
    Createacc1Page.prototype.nextStep = function (form) {
        var _this = this;
        this.load = 1;
        console.log(JSON.stringify(form.value));
        //console.log(JSON.stringify(form));
        if (this.pseudo.length > 30) {
            this.load = 0;
            var alert_1 = this.alertCtrl.create({
                title: 'Information',
                subTitle: 'Votre pseudo ne peut excéder 30 caractères.',
                buttons: ['Ok']
            });
            alert_1.present();
        }
        else if (this.pseudo.length <= 0) {
            this.load = 0;
            var alert_2 = this.alertCtrl.create({
                title: 'Information',
                subTitle: 'Saisissez votre pseudo.',
                buttons: ['Ok']
            });
            alert_2.present();
        }
        else {
            this.http.post(this.globals.variables.urls.checkPseudoURL, form.value, {})
                .then(function (data) {
                _this.load = 0;
                var res = JSON.parse(data.data);
                console.log(res);
                console.log(res.status);
                if (res.status == 'ok') {
                    var cacc2 = __WEBPACK_IMPORTED_MODULE_2__createacc2_createacc2__["a" /* Createacc2Page */];
                    _this.navCtrl.push(cacc2, {
                        pseudo: _this.pseudo
                    });
                }
                else {
                    var alert_3 = _this.alertCtrl.create({
                        title: 'Information',
                        subTitle: 'Attention, ce pseudo existe déjà.',
                        buttons: ['Ok']
                    });
                    alert_3.present();
                }
                console.log(JSON.stringify(data.data));
            }, function (error) {
                _this.load = 0;
                var alert = _this.alertCtrl.create({
                    title: 'Information',
                    subTitle: 'Erreur de connexion au serveur.',
                    buttons: ['Ok']
                });
                alert.present();
                console.log(JSON.stringify(error));
            });
        }
    };
    Createacc1Page.prototype.tipPseudo = function () {
        console.log(this.pseudo);
    };
    Createacc1Page = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-createacc1',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/createacc1/createacc1.html"*/'<ion-content>\n\n  <div ion-fixed class="load-ctn" id="load" *ngIf="load == 1">\n    <img class="load-img" src="../../assets/icon/Spinner-load.svg" />\n  </div>\n\n  <ion-grid class=" container">\n\n    <ion-row class="header">\n      <ion-col class="col-3" (click)="precedent();">\n        <img class="back-icon" src="../../assets/icon/back-white.svg">\n      </ion-col>\n      <ion-col class="col-3">\n        <ion-label class="header-ttl">Inscription</ion-label>\n      </ion-col>\n      <ion-col class="col-3">\n\n      </ion-col>\n    </ion-row>\n\n    <ion-row class="form-ctn">\n\n      <ion-col>\n        \n        <ion-row>\n          <ion-avatar class="cacc-avatar">\n            <img src="../../assets/icon/users.svg">\n          </ion-avatar>\n        </ion-row>\n\n        <ion-row class="wc-ctn">\n          <ion-label class="color-white wc">Cr&#233;er un compte</ion-label>\n        </ion-row>\n\n        <ion-row class="label-ctn">\n          <ion-label class="bottom-label">Choisissez votre pseudo</ion-label>\n        </ion-row>\n\n        <form #form="ngForm" (ngSubmit)="nextStep(form);">\n          <ion-row class="bb-input">\n            <ion-input type="text" id="pseudo" name="pseudo" [(ngModel)]="pseudo" (input)="tipPseudo();"></ion-input>\n          </ion-row>\n\n          <ion-row>\n            <button ion-button round class="btn-blue-gradient">Continuer</button>\n          </ion-row>\n        </form>\n\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/createacc1/createacc1.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_3__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_http__["a" /* HTTP */]])
    ], Createacc1Page);
    return Createacc1Page;
}());

//# sourceMappingURL=createacc1.js.map

/***/ }),

/***/ 150:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Createacc2Page; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__createacc3_createacc3__ = __webpack_require__(151);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



/**
 * Generated class for the Createacc2Page page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var Createacc2Page = /** @class */ (function () {
    function Createacc2Page(navCtrl, navParams, alertCtrl, viewCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.alertCtrl = alertCtrl;
        this.viewCtrl = viewCtrl;
        this.classJob = 'ok-job';
        this.jobs = [
            'Chirurgien dentiste',
            'Etudiant en odontologie',
            'Formateur en odontologie',
            'Assistante dentaire',
            'Autres professions médicales',
            'Autres (Précisez)'
        ];
        this.job = '';
        this.source = "";
        this.pseudo = navParams.get('pseudo');
        console.log(this.pseudo);
        this.source = navParams.get('source');
    }
    Createacc2Page.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad Createacc2Page');
    };
    Createacc2Page.prototype.selectProfession = function (idBtn, idIcon) {
        for (var i = 0; i < 6; i++) {
            document.getElementById('btn' + i).style.fontWeight = '100';
            document.getElementById('icon_btn_' + i).style.display = 'none';
        }
        document.getElementById(idIcon).style.display = 'inline';
        document.getElementById(idBtn).style.fontWeight = 'bold';
        this.job = this.jobs[parseInt(idBtn.charAt(3))];
        if (idBtn == 'btn5') {
            this.classJob = 'other-job';
            this.job = this.otherJob;
            this.myInput.setFocus();
            document.getElementById('myInput').style.marginTop = '0px';
        }
        else {
            this.classJob = 'ok-job';
            document.getElementById('myInput').style.marginTop = '-30px';
        }
        console.log(this.job);
    };
    Createacc2Page.prototype.otherJobText = function () {
        this.job = this.otherJob;
        console.log(this.job);
    };
    Createacc2Page.prototype.precedent = function () {
        if (this.source == "up") {
            this.viewCtrl.dismiss({
                job: this.job
            });
        }
        else
            this.navCtrl.pop();
    };
    Createacc2Page.prototype.nextStep = function () {
        if (this.source == "up") {
            this.viewCtrl.dismiss({
                job: this.job
            });
        }
        else if (this.job != null && this.job != '') {
            console.log(this.job);
            var caccn = __WEBPACK_IMPORTED_MODULE_2__createacc3_createacc3__["a" /* Createacc3Page */];
            this.navCtrl.push(caccn, {
                pseudo: this.pseudo,
                job: this.job
            });
        }
        else {
            var alert_1 = this.alertCtrl.create({
                title: 'Information',
                subTitle: 'Choisissez votre profession.',
                buttons: ['Ok']
            });
            alert_1.present();
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('myInput'),
        __metadata("design:type", Object)
    ], Createacc2Page.prototype, "myInput", void 0);
    Createacc2Page = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-createacc2',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/createacc2/createacc2.html"*/'<ion-content>\n\n  <ion-grid class="container">\n\n    <ion-row class="header">\n      <ion-col class="col-3" (click)="precedent();">\n        <img class="back-icon" src="../../assets/icon/back-white.svg">\n      </ion-col>\n      <ion-col class="col-3">\n        <ion-label class="header-ttl">Inscription</ion-label>\n      </ion-col>\n      <ion-col class="col-3">\n\n      </ion-col>\n    </ion-row>\n\n    <ion-row class="form-ctn">\n      <ion-col>\n        <ion-row>\n          <ion-avatar class="cacc-avatar">\n            <img src="../../assets/icon/tooth.svg">\n          </ion-avatar>\n        </ion-row>\n\n        <ion-row class="wc-ctn">\n          <ion-label class="color-white wc">Qui &#234;tes vous ?</ion-label>\n        </ion-row>\n\n        <ion-row *ngFor="let job of jobs; let i = index" class="btn-ctn-left">\n          <ion-col>\n            <ion-row>\n              <button id="btn{{i}}" ion-button class="btn-blue-gradient" (click)="selectProfession(\'btn\'+i,\'icon_btn_\'+i);">\n                {{job}}\n                <ion-icon id="icon_btn_{{i}}" class="icon-checked" color="gris">\n                  <img class="check-icon" src="../../assets/imgs/da_image/Group.png" />\n                </ion-icon>\n              </button>\n            </ion-row>\n            <ion-row>\n              <ion-input #myInput *ngIf="i == 5" type="text" class="{{classJob}}" id="myInput" placeholder="Votre profession"\n                [(ngModel)]="otherJob" name="otherJob" (input)="otherJobText();"></ion-input>\n            </ion-row>\n          </ion-col>\n\n        </ion-row>\n\n        <ion-row>\n          <button ion-button round class="btn-blue-gradient-round" (click)="nextStep();">Continuer</button>\n        </ion-row>\n\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/createacc2/createacc2.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */]])
    ], Createacc2Page);
    return Createacc2Page;
}());

//# sourceMappingURL=createacc2.js.map

/***/ }),

/***/ 151:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Createacc3Page; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_geolocation__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__createacc4_createacc4__ = __webpack_require__(152);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_sim__ = __webpack_require__(121);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_toPromise__ = __webpack_require__(328);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_toPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_toPromise__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var Createacc3Page = /** @class */ (function () {
    function Createacc3Page(navCtrl, navParams, geolocation, alertCtrl, platform, http, globals, toastCtrl, sim) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.geolocation = geolocation;
        this.alertCtrl = alertCtrl;
        this.platform = platform;
        this.http = http;
        this.globals = globals;
        this.toastCtrl = toastCtrl;
        this.sim = sim;
        this.currentPrediction = [];
        this.zone = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"]({ enableLongStackTrace: true });
        this.address = '';
        this.pseudo = '';
        this.job = '';
        this.simInfo = {};
        this.sideAddress = {};
        this.gmLocation = { lat: 0, lng: 0 };
        this.intPos = 0;
        this.intPosClick = 0;
        this.checklat = null;
        this.disconnectedToast = null;
        this.pseudo = navParams.get('pseudo');
        this.job = navParams.get('job');
        console.log(this.pseudo);
        console.log(this.job);
        this.watchPosition();
        this.GoogleAutocomplete = new google.maps.places.AutocompleteService();
        this.autocomplete = { input: '' };
        this.autocompleteItems = [];
        this.sim.hasReadPermission().then(function (info) {
            if (info == false) {
                _this.sim.requestReadPermission().then(function () {
                    console.log('Permission granted');
                    _this.sim.getSimInfo().then(function (info) {
                        console.log('Sim info: ');
                        console.log(JSON.stringify(info));
                        _this.simInfo = info;
                    }, function (err) { return console.log('Unable to get sim info: ', err); });
                }, function () { return console.log('Permission denied'); });
            }
            else {
                _this.sim.getSimInfo().then(function (info) {
                    console.log('Sim info: ');
                    console.log(JSON.stringify(info));
                    _this.simInfo = info;
                }, function (err) { return console.log('Unable to get sim info: ', err); });
            }
            console.log('Has permission: ');
            console.log(JSON.stringify(info));
        }, function (error) {
            console.log("Hasn't permission");
            console.log(JSON.stringify(error));
        });
    }
    Createacc3Page.prototype.ionViewDidLoad = function () {
        this.onLocateUser();
        this.requestAutoComplete();
        console.log('ionViewDidLoad Createacc3Page');
    };
    Createacc3Page.prototype.onLocateUser = function () {
        var _this = this;
        this.intPos = setInterval(function () {
            _this.geolocation.getCurrentPosition()
                .then(function (location) {
                console.log('position gotten: long:', location.coords.longitude, ' lat:', location.coords.latitude);
                _this.checklat = location.coords.latitude;
                _this.location = location;
                _this.gmLocation.lat = location.coords.latitude;
                _this.gmLocation.lng = location.coords.longitude;
                if (_this.checklat !== null) {
                    var pos = _this.gmLocation.lat + ',' + _this.gmLocation.lng;
                    _this.http.get('https://maps.googleapis.com/maps/api/place/autocomplete/json?input=a&key=' + _this.globals.variables.API_KEY + '&location=' + pos + '&radius=100', {}, {})
                        .then(function (data) {
                        console.log("**************Result from autocomplete**************");
                        console.log(JSON.stringify(data.data));
                        var predicts = JSON.parse(data.data).predictions;
                        _this.sideAddress = predicts[0];
                    }, function (error) {
                        console.log("Error from autocomplete");
                        console.log(JSON.stringify(error));
                    });
                    clearInterval(_this.intPos);
                }
            })
                .catch(function (error) {
                console.log('Error getting location', error);
            });
        }, 3000);
    };
    Createacc3Page.prototype.getCurentPosition = function () {
        console.log("get Coords");
        this.geolocation.getCurrentPosition().then(function (resp) {
            console.log("Coords");
            console.log(JSON.stringify(resp));
            // resp.coords.latitude
            // resp.coords.longitude
        }).catch(function (error) {
            console.log('Error getting location', error);
        });
    };
    Createacc3Page.prototype.watchPosition = function () {
        var watch = this.geolocation.watchPosition();
        watch.subscribe(function (data) {
            console.log("Watching Position createaccount");
            console.log(JSON.stringify(data));
        });
    };
    Createacc3Page.prototype.setSideAddress = function () {
        var _this = this;
        if (this.sideAddress.description != null) {
            this.address = JSON.stringify(this.sideAddress);
            this.autocomplete.input = this.sideAddress.description;
            this.autocompleteItems = [];
            clearInterval(this.intPosClick);
        }
        else {
            this.toastCtrl.create({
                message: 'En attente du GPS',
                duration: 5000,
                position: 'bottom'
            }).present();
            this.intPosClick = setInterval(function () {
                if (_this.sideAddress.description != null) {
                    _this.address = JSON.stringify(_this.sideAddress);
                    _this.autocomplete.input = _this.sideAddress.description;
                    _this.autocompleteItems = [];
                    clearInterval(_this.intPosClick);
                }
                else {
                    _this.toastCtrl.create({
                        message: 'En attente du GPS',
                        duration: 5000,
                        position: 'bottom'
                    }).present();
                }
            }, 5000);
        }
    };
    Createacc3Page.prototype.requestAutoComplete = function () {
        var _this = this;
        console.log("Check GPS");
        GPSLocation.getCurrentPosition(function (position) {
            console.log("Resultat du GPS");
            console.log(JSON.stringify(position));
            var pos = parseFloat(parseFloat(position.coords.latitude).toFixed(6)) +
                ',' + parseFloat(parseFloat(position.coords.longitude).toFixed(6));
            //https://maps.googleapis.com/maps/api/place/autocomplete/output?parameters
            _this.http.get('https://maps.googleapis.com/maps/api/place/autocomplete/json?input=a&key=' + _this.globals.variables.API_KEY + '&location=' + pos + '&radius=100', {}, {})
                .then(function (data) {
                var predicts = JSON.parse(data.data).predictions;
                _this.sideAddress = predicts[0];
            }, function (error) {
                console.log("Error from autocomplete");
                console.log(JSON.stringify(error));
            });
        }, function (error) {
            console.log("Erroeur du GPS");
            console.log(JSON.stringify(error));
            var alert = _this.alertCtrl.create({
                title: 'Information',
                subTitle: 'Activer votre GPS, SVP.',
                buttons: ['Ok']
            });
            alert.present();
        });
    };
    Createacc3Page.prototype.updateSearchResults = function () {
        var _this = this;
        console.log("Typing");
        clearInterval(this.intPosClick);
        if (this.autocomplete.input == '') {
            this.autocompleteItems = [];
            return;
        }
        this.GoogleAutocomplete.getPlacePredictions({ input: this.autocomplete.input }, function (predictions, status) {
            if (predictions != null) {
                _this.autocompleteItems = [];
                _this.zone.run(function () {
                    predictions.forEach(function (prediction) {
                        _this.autocompleteItems.push(prediction);
                    });
                });
            }
            console.log(_this.autocompleteItems);
        });
    };
    Createacc3Page.prototype.getCurentPrediction = function () {
        if (navigator.geolocation) {
            console.log("Navigator support Geolocation");
            navigator.geolocation.getCurrentPosition(function (position) {
                var pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };
                console.log("Current lat and long");
                console.log(JSON.stringify(pos));
            }, function (error) {
                console.log("Error");
                console.log(JSON.stringify(error));
            });
        }
        else {
            console.log("Navigator can not support Geolocation");
        }
    };
    Createacc3Page.prototype.selectSearchResult = function (item) {
        console.log(JSON.stringify(item));
        this.address = JSON.stringify(item);
        this.autocomplete.input = item.description;
        this.autocompleteItems = [];
    };
    Createacc3Page.prototype.precedent = function () {
        this.navCtrl.pop();
    };
    Createacc3Page.prototype.nextStep = function () {
        clearInterval(this.intPosClick);
        if (this.address != null && this.address != '') {
            var caccn = __WEBPACK_IMPORTED_MODULE_3__createacc4_createacc4__["a" /* Createacc4Page */];
            this.navCtrl.push(caccn, {
                pseudo: this.pseudo,
                job: this.job,
                address: this.address
            });
        }
        else {
            var alert_1 = this.alertCtrl.create({
                title: 'Information',
                subTitle: 'Indiquez votre adresse.',
                buttons: ['Ok']
            });
            alert_1.present();
        }
    };
    Createacc3Page = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-createacc3',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/createacc3/createacc3.html"*/'<ion-content>\n\n  <ion-grid class="container">\n\n    <ion-row class="header">\n      <ion-col class="col-3" (click)="precedent();">\n        <img class="back-icon" src="../../assets/icon/back-white.svg">\n      </ion-col>\n      <ion-col class="col-3">\n        <ion-label class="header-ttl">Inscription</ion-label>\n      </ion-col>\n      <ion-col class="col-3">\n\n      </ion-col>\n    </ion-row>\n\n    <ion-row class="form-ctn">\n      <ion-col>\n        <ion-row>\n          <ion-avatar class="cacc-avatar">\n            <img src="../../assets/icon/map-location.svg">\n          </ion-avatar>\n        </ion-row>\n\n        <ion-row class="wc-ctn">\n          <ion-label class="color-white wc">\n            Indiquez la localisation <span><br>de votre cabinet</span>\n          </ion-label>\n        </ion-row>\n\n        <ion-row class="label-ctn">\n          <ion-label class="bottom-label">Localisation</ion-label>\n        </ion-row>\n\n        <ion-row>\n\n          <ion-input type="text" class="bb-input" [(ngModel)]="autocomplete.input" (input)="updateSearchResults()"></ion-input>\n\n          <img class="map-marker" src="../../assets/icon/marker6.png" (click)="setSideAddress();">\n\n        </ion-row>\n\n        <ion-list [hidden]="autocompleteItems.length == 0" class="places">\n          <ion-item *ngFor="let item of autocompleteItems" tappable (click)="selectSearchResult(item)">\n            {{ item.description }}\n          </ion-item>\n        </ion-list>\n\n        <ion-row>\n          <button ion-button round class="btn-blue-gradient-round" (click)="nextStep();">Continuer</button>\n        </ion-row>\n\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/createacc3/createacc3.html"*/,
        })
        //https://ionicthemes.com/tutorials/about/ionic-2-google-maps-google-places-geolocation
        ,
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_geolocation__["a" /* Geolocation */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_5__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["s" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_native_sim__["a" /* Sim */]])
    ], Createacc3Page);
    return Createacc3Page;
}());

//# sourceMappingURL=createacc3.js.map

/***/ }),

/***/ 152:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Createacc4Page; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__generalcnd_generalcnd__ = __webpack_require__(69);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_globals_globals__ = __webpack_require__(7);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the Createacc4Page page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var Createacc4Page = /** @class */ (function () {
    function Createacc4Page(navCtrl, navParams, alertCtrl, http, globals) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.alertCtrl = alertCtrl;
        this.http = http;
        this.globals = globals;
        this.mail = '';
        this.password = '';
        this.confirm_password = '';
        this.pseudo = '';
        this.job = '';
        this.address = '';
        this.validPasswd = 0;
        this.validConfrimPasswd = 0;
        this.validMail = 0;
        this.pseudo = navParams.get('pseudo');
        this.job = navParams.get('job');
        this.address = navParams.get('address');
    }
    Createacc4Page.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad Createacc4Page');
    };
    Createacc4Page.prototype.precedent = function () {
        this.navCtrl.pop();
    };
    Createacc4Page.prototype.displayGC = function () {
        var _this = this;
        if (!(/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(this.mail))) {
            console.log("Mail invalid.");
            var alert_1 = this.alertCtrl.create({
                title: 'Information',
                subTitle: 'Votre e-mail est invalide.',
                buttons: ['Ok']
            });
            alert_1.present();
        }
        else if (this.password.length < 8) {
            console.log("Password invalid.");
            var alert_2 = this.alertCtrl.create({
                title: 'Information',
                subTitle: 'Votre mot de passe doit contenir au minimum 8 caractères.',
                buttons: ['Ok']
            });
            alert_2.present();
        }
        else if (this.password != this.confirm_password) {
            console.log("Mot de passe non identique.");
            var alert_3 = this.alertCtrl.create({
                title: 'Information',
                subTitle: 'Mot de passe non identique.',
                buttons: ['Ok']
            });
            alert_3.present();
        }
        if (/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(this.mail) &&
            this.password.length >= 8 && this.password == this.confirm_password) {
            this.http.post(this.globals.variables.urls.checkMailURL, { "mail": this.mail }, {})
                .then(function (data) {
                var res = JSON.parse(data.data);
                console.log(res);
                console.log(res.status);
                if (res.status == 'ok') {
                    var gc = __WEBPACK_IMPORTED_MODULE_2__generalcnd_generalcnd__["a" /* GeneralcndPage */];
                    _this.navCtrl.push(gc, {
                        pseudo: _this.pseudo,
                        job: _this.job,
                        mail: _this.mail,
                        password: _this.password,
                        confirm_password: _this.confirm_password,
                        address: _this.address
                    });
                }
                else if (res.status == 'non-ok') {
                    var alert_4 = _this.alertCtrl.create({
                        title: 'Information',
                        subTitle: 'Cet email possède déjà un compte.',
                        buttons: ['Ok']
                    });
                    alert_4.present();
                }
                console.log(JSON.stringify(data.data));
            }, function (error) {
                // this.load = 0;
                var alert = _this.alertCtrl.create({
                    title: 'Information',
                    subTitle: 'Erreur de connexion au serveur.',
                    buttons: ['Ok']
                });
                alert.present();
                console.log(JSON.stringify(error));
            });
        }
        else {
            console.log("Mail invalid.");
        }
    };
    Createacc4Page.prototype.emailTyping = function () {
        if (/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(this.mail)) {
            console.log("Mail valid.");
            this.validMail = 1;
        }
        else {
            console.log("Mail invalid.");
            this.validMail = 0;
        }
    };
    Createacc4Page.prototype.passwdTyping = function () {
        if (this.password.length >= 8) {
            console.log("Password valid.");
            this.validPasswd = 1;
        }
        else {
            console.log("Password invalid.");
            this.validPasswd = 0;
        }
    };
    Createacc4Page.prototype.confirmPasswdTyping = function () {
        if (this.password.length >= 8 && this.password == this.confirm_password) {
            console.log("Password valid.");
            this.validConfrimPasswd = 1;
        }
        else {
            console.log("Password invalid.");
            this.validConfrimPasswd = 0;
        }
    };
    Createacc4Page = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-createacc4',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/createacc4/createacc4.html"*/'<ion-content>\n\n  <ion-grid class="container">\n\n    <ion-row class="header">\n      <ion-col class="col-3" (click)="precedent();">\n        <img class="back-icon" src="../../assets/icon/back-white.svg">\n      </ion-col>\n      <ion-col class="col-3">\n        <ion-label class="header-ttl">Inscription</ion-label>\n      </ion-col>\n      <ion-col class="col-3">\n\n      </ion-col>\n    </ion-row>\n\n    <ion-row class="form-ctn">\n      <ion-col>\n\n        <ion-row>\n          <ion-avatar class="cacc-avatar">\n            <img src="../../assets/icon/email.svg">\n          </ion-avatar>\n        </ion-row>\n\n        <ion-row class="wc-ctn">\n          <ion-label class="color-white wc">\n            <span>Saisissez votre e-mail</span>\n            <span><br>et votre mot de passe</span>\n          </ion-label>\n        </ion-row>\n\n        <ion-row class="label-ctn">\n          <ion-label class="bottom-label">E-mail</ion-label>\n        </ion-row>\n\n        <ion-row class="bb-input">\n          <ion-input type="email" (input)="emailTyping();" [(ngModel)]="mail" name="mail"></ion-input>\n          <ion-icon *ngIf="validMail == 1" class="ion-md-checkmark icon-checked" color="vertchecked"></ion-icon>\n        </ion-row>\n\n        <ion-row class="label-ctn-bottom">\n          <ion-label class="bottom-label">Mot de passe</ion-label>\n        </ion-row>\n\n        <ion-row class="bb-input-bottom">\n          <ion-input type="password" (input)="passwdTyping();" [(ngModel)]="password" name="password"></ion-input>\n          <ion-icon *ngIf="validPasswd == 1" class="ion-md-checkmark icon-checked" color="vertchecked"></ion-icon>\n        </ion-row>\n\n        <ion-row class="label-ctn-bottom-2">\n          <ion-label class="bottom-label">Confirmer le mot de passe</ion-label>\n        </ion-row>\n\n        <ion-row class="bb-input-bottom">\n          <ion-input type="password" (input)="confirmPasswdTyping();" [(ngModel)]="confirm_password" name="confirm_password"></ion-input>\n          <ion-icon *ngIf="validConfrimPasswd == 1" class="ion-md-checkmark icon-checked" color="vertchecked"></ion-icon>\n        </ion-row>\n\n        <ion-row class="btn-ctn">\n          <button ion-button round class="btn-blue-gradient" (click)="displayGC();">Continuer</button>\n        </ion-row>\n\n      </ion-col>\n    </ion-row>\n\n  </ion-grid>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/createacc4/createacc4.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_4__providers_globals_globals__["a" /* GlobalsProvider */]])
    ], Createacc4Page);
    return Createacc4Page;
}());

//# sourceMappingURL=createacc4.js.map

/***/ }),

/***/ 153:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ConnexionPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_home__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__recoverpasswd_recoverpasswd__ = __webpack_require__(154);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_file__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_keyboard__ = __webpack_require__(219);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ionic_storage__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ionic_native_android_permissions__ = __webpack_require__(77);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










/**
 * Generated class for the ConnexionPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ConnexionPage = /** @class */ (function () {
    function ConnexionPage(navCtrl, navParams, http, globals, alertCtrl, events, file, keyboard, storage, androidPermissions) {
        //this.keyboard.show();
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.globals = globals;
        this.alertCtrl = alertCtrl;
        this.events = events;
        this.file = file;
        this.keyboard = keyboard;
        this.storage = storage;
        this.androidPermissions = androidPermissions;
        this.mail = '';
        this.password = '';
        this.isBtnConnect = false;
        console.log(this.file.dataDirectory);
    }
    ConnexionPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ConnexionPage');
        this.checkReadWritePermissions();
    };
    ConnexionPage.prototype.savePubs = function () {
        var _this = this;
        var pubFinal = [];
        this.http.post(this.globals.variables.urls.getListPub + "?offset=0&limit=1", {}, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log("Nombre Pubs: " + res.length);
            if (res.length > 0) {
                for (var r = 0; r < res.length; r++) {
                    res[r].type = 'ad';
                    var char70 = "";
                    char70 = res[r].description + "...";
                    res[r].char70 = char70;
                    pubFinal.push(res[r]);
                }
                _this.storage.set('pubs', JSON.stringify(pubFinal));
            }
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    ConnexionPage.prototype.savePartages = function (user_id) {
        var _this = this;
        var partageFinal = [];
        this.storage.set('partages', "");
        this.http.post(this.globals.variables.urls.listFaQ + '?offset=0&category=&user_id=' + user_id + '&limit=5', {}, {})
            .then(function (data) {
            console.log();
            var res = JSON.parse(data.data);
            console.log("Nombre Partages: " + res.length);
            if (res.length > 0) {
                for (var r = 0; r < res.length; r++) {
                    res[r].type = 'faq';
                    var char70 = "";
                    char70 = res[r].description + "...";
                    res[r].char70 = char70;
                    res[r].instore = 1;
                    partageFinal.push(res[r]);
                }
                console.log("***********PARTAGEFINAL******************");
                console.log(JSON.stringify(partageFinal));
                _this.storage.set('partages', JSON.stringify(partageFinal));
            }
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    ConnexionPage.prototype.saveSession = function (user) {
        var _this = this;
        this.storage.set('user', user)
            .then(function (data) {
            var home = __WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */];
            _this.navCtrl.setRoot(home, {
                user: _this.user
            }, {
                animate: true,
                animation: 'ios-transition',
                direction: 'forward',
                duration: 500
            });
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    ConnexionPage.prototype.testConnectedUser = function (user) {
        var _this = this;
        this.file.checkDir(this.file.dataDirectory, 'user/')
            .then(function (data) {
            console.log("User directory found.");
            console.log(JSON.stringify(data));
            _this.file.checkFile(_this.file.dataDirectory + "user/", "user.json")
                .then(function (data) {
                _this.file.writeFile(_this.file.dataDirectory + "user/", "user.json", JSON.stringify(user), { replace: true })
                    .then(function (data) {
                    var home = __WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */];
                    _this.navCtrl.setRoot(home, {
                        user: _this.user
                    }, {
                        animate: true,
                        animation: 'ios-transition',
                        direction: 'forward',
                        duration: 500
                    });
                }, function (error) {
                    console.log("User connected but not saved");
                });
            }, function (error) {
                _this.file.writeFile(_this.file.dataDirectory + "user/", "user.json", JSON.stringify(user), { replace: true })
                    .then(function (data) {
                    var home = __WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */];
                    _this.navCtrl.setRoot(home, {
                        user: _this.user
                    }, {
                        animate: true,
                        animation: 'ios-transition',
                        direction: 'forward',
                        duration: 500
                    });
                }, function (error) {
                    console.log("Can not create file user");
                });
            });
        }, function (error) {
            console.log(JSON.stringify(error));
            _this.file.createDir(_this.file.dataDirectory, "user/", true)
                .then(function (data) {
                _this.file.writeFile(_this.file.dataDirectory + "user/", "user.json", JSON.stringify(user), { replace: true })
                    .then(function (data) {
                    var home = __WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */];
                    _this.navCtrl.setRoot(home, {
                        user: _this.user
                    }, {
                        animate: true,
                        animation: 'ios-transition',
                        direction: 'forward',
                        duration: 500
                    });
                }, function (error) {
                    console.log("Can not create file user");
                });
            }, function (error) {
                console.log("Can not create user directory");
            });
        });
    };
    ConnexionPage.prototype.checkReadWritePermissions = function () {
        var _this = this;
        this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.FOREGROUND_SERVICE)
            .then(function (result) {
            if (!result.hasPermission) {
                _this.androidPermissions.requestPermission(_this.androidPermissions.PERMISSION.FOREGROUND_SERVICE)
                    .then(function (resultRequest) {
                    console.log(JSON.stringify(resultRequest));
                }, function (errorRequest) {
                    console.log(JSON.stringify(errorRequest));
                });
            }
        }, function (error) {
            console.log("Error checking foreground service permission");
            _this.androidPermissions.requestPermission(_this.androidPermissions.PERMISSION.FOREGROUND_SERVICE)
                .then(function (resultRequest) {
                console.log(JSON.stringify(resultRequest));
            }, function (errorRequest) {
                console.log(JSON.stringify(errorRequest));
            });
        });
        this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.READ_EXTERNAL_STORAGE)
            .then(function (result) {
            if (!result.hasPermission) {
                _this.androidPermissions.requestPermission(_this.androidPermissions.PERMISSION.READ_EXTERNAL_STORAGE);
            }
        }, function (error) {
            _this.androidPermissions.requestPermission(_this.androidPermissions.PERMISSION.READ_EXTERNAL_STORAGE);
        });
        this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.WRITE_EXTERNAL_STORAGE)
            .then(function (result) {
            if (!result.hasPermission) {
                _this.androidPermissions.requestPermission(_this.androidPermissions.PERMISSION.WRITE_EXTERNAL_STORAGE);
            }
        }, function (error) {
            console.log("Error write pernission !");
            _this.androidPermissions.requestPermission(_this.androidPermissions.PERMISSION.WRITE_EXTERNAL_STORAGE);
        });
    };
    ConnexionPage.prototype.connect = function () {
        var _this = this;
        this.isBtnConnect = true;
        if (!(/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(this.mail))) {
            this.isBtnConnect = false;
            var alert_1 = this.alertCtrl.create({
                title: 'Information',
                subTitle: 'Votre e-mail est invalide.',
                buttons: ['Ok']
            });
            alert_1.present();
            this.isBtnConnect = false;
        }
        else if (this.password.length < 8) {
            this.isBtnConnect = false;
            var alert_2 = this.alertCtrl.create({
                title: 'Information',
                subTitle: 'Votre mot de passe doit contenir au minimum 8 caractères.',
                buttons: ['Ok']
            });
            alert_2.present();
            this.isBtnConnect = false;
        }
        if (/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(this.mail) &&
            this.password.length >= 8) {
            this.http.post(this.globals.variables.urls.loginURL, {
                "mail": this.mail,
                "password": this.password
            }, {})
                .then(function (data) {
                var res = JSON.parse(data.data);
                if (res.etat_connexion == 'connexion-ok') {
                    _this.user = res.info_utilisateur;
                    // this.savePartages(this.user.id_User);
                    _this.savePubs();
                    var avatar = _this.user.avatar != null ? _this.user.avatar : _this.user.photo;
                    var profil_name_1 = "profil_" + (new Date().getTime()) + ".jpeg";
                    _this.http.downloadFile(avatar, {}, {}, _this.file.dataDirectory + profil_name_1)
                        .then(function (data) {
                        _this.file.readAsDataURL(_this.file.externalDataDirectory, profil_name_1)
                            .then(function (data) {
                            _this.user.avatarB64 = data;
                            _this.saveSession(_this.user);
                        }, function (error) {
                            console.log("Error reading profil from download");
                            _this.saveSession(_this.user);
                        });
                    }, function (error) {
                        console.log("Error saving profil from download");
                        _this.saveSession(_this.user);
                    });
                }
                else if (res.etat_connexion == 'non-ok') {
                    _this.isBtnConnect = false;
                    var alert_3 = _this.alertCtrl.create({
                        title: 'Information',
                        subTitle: 'Votre email ou mot de passe est incorrect.',
                        buttons: ['Ok']
                    });
                    alert_3.present();
                }
            }, function (error) {
                _this.isBtnConnect = false;
                console.log(JSON.stringify(error));
                var alert = _this.alertCtrl.create({
                    title: 'Information',
                    subTitle: 'Problème de connexion internet.',
                    buttons: ['Ok']
                });
                alert.present();
            });
        }
    };
    ConnexionPage.prototype.changeMail = function (event) {
        var value = event.target.value;
    };
    ConnexionPage.prototype.forgetPasswd = function () {
        var recov = __WEBPACK_IMPORTED_MODULE_3__recoverpasswd_recoverpasswd__["a" /* RecoverpasswdPage */];
        this.navCtrl.push(recov);
    };
    ConnexionPage.prototype.showKeyboard = function () {
        this.keyboard.show();
    };
    ConnexionPage.prototype.precedent = function () {
        this.navCtrl.pop();
    };
    ConnexionPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-connexion',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/connexion/connexion.html"*/'<ion-content>\n\n  <div class="container">\n\n    <ion-row class="header">\n      <ion-col class="col-3" (click)="precedent();">\n        <img class="back-icon" src="../../assets/icon/back-white.svg">\n      </ion-col>\n      <ion-col class="col-3">\n        <ion-label class="header-ttl">Connexion</ion-label>\n      </ion-col>\n      <ion-col class="col-3">\n\n      </ion-col>\n    </ion-row>\n\n    <ion-row>\n      <ion-avatar class="cacc-avatar">\n        <img src="../../assets/icon/key.svg">\n      </ion-avatar>\n    </ion-row>\n\n    <ion-row class="wc-ctn">\n      <ion-label class="color-white wc">Me connecter</ion-label>\n    </ion-row>\n\n    <ion-row class="separator"></ion-row>\n\n    <div class="overlay">\n      <form #form class="form-conn">\n\n        \n\n        <ion-row>\n          <ion-label class="lab">E-mail</ion-label>\n        </ion-row>\n        <ion-row class="input-ctn">\n          <ion-input type="email" [(ngModel)]="mail" name="mail" (input)="changeMail($event);" maxlength="254"></ion-input>\n        </ion-row>\n        <!-- (input)="changeMail($event);" -->\n\n        <ion-row>\n          <ion-label class="lab">Mot de passe</ion-label>\n        </ion-row>\n        <ion-row class="input-ctn">\n          <ion-input type="password" [(ngModel)]="password" name="password"></ion-input>\n        </ion-row>\n\n        <ion-row class="txt-to-right" (click)="forgetPasswd();">\n          <ion-label class="btn-light">\n            Mot de passe oubli&#233; ?\n          </ion-label>\n        </ion-row>\n\n        <ion-row>\n          <button ion-button round class="btn-blue-gradient" (click)="connect();" [disabled]="isBtnConnect">\n            Connexion\n          </button>\n        </ion-row>\n      </form>\n\n\n    </div>\n\n  </div>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/connexion/connexion.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_5__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["f" /* Events */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_native_file__["a" /* File */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_native_keyboard__["a" /* Keyboard */],
            __WEBPACK_IMPORTED_MODULE_8__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_9__ionic_native_android_permissions__["a" /* AndroidPermissions */]])
    ], ConnexionPage);
    return ConnexionPage;
}());

//# sourceMappingURL=connexion.js.map

/***/ }),

/***/ 154:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RecoverpasswdPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_globals_globals__ = __webpack_require__(7);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the RecoverpasswdPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var RecoverpasswdPage = /** @class */ (function () {
    function RecoverpasswdPage(navCtrl, navParams, alertCtrl, http, toastCtrl, globals) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.alertCtrl = alertCtrl;
        this.http = http;
        this.toastCtrl = toastCtrl;
        this.globals = globals;
        this.mail = "";
    }
    RecoverpasswdPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad RecoverpasswdPage');
    };
    RecoverpasswdPage.prototype.retour = function () {
        this.navCtrl.pop();
    };
    RecoverpasswdPage.prototype.recover = function () {
        var _this = this;
        if (!(/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(this.mail))) {
            console.log("Mail invalid.");
            var alert_1 = this.alertCtrl.create({
                title: 'Information',
                subTitle: 'Votre e-mail est invalide.',
                buttons: ['Ok']
            });
            alert_1.present();
        }
        else {
            //lostPasswd
            this.http.post(this.globals.variables.urls.lostPasswd + "?mail=" + this.mail, {
                "mail": this.mail
            }, {})
                .then(function (data) {
                var res = JSON.parse(data.data);
                console.log(JSON.stringify(data.data));
                if (res.status == 'ok') {
                    _this.toastCtrl.create({
                        message: "Un mail vous a été envoyé",
                        position: "bottom",
                        duration: 5000
                    }).present();
                }
                else {
                    _this.toastCtrl.create({
                        message: "Verifier bien que votre adresse mail est correcte !",
                        position: "bottom",
                        duration: 5000
                    }).present();
                }
                _this.navCtrl.pop();
            }, function (error) {
                _this.toastCtrl.create({
                    message: "Erreur de connexion au serveur",
                    position: "bottom",
                    duration: 5000
                }).present();
                _this.navCtrl.pop();
            });
        }
    };
    RecoverpasswdPage.prototype.emailTyping = function () {
        if (/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(this.mail)) {
            console.log("Mail valid.");
        }
        else {
            console.log("Mail invalid.");
        }
    };
    RecoverpasswdPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-recoverpasswd',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/recoverpasswd/recoverpasswd.html"*/'<ion-content>\n\n  <ion-grid class="container">\n\n    <ion-row class="header">\n      <ion-col class="col-3" (click)="retour();">\n        <img class="back-icon" src="../../assets/icon/back-white.svg">\n      </ion-col>\n      <ion-col class="col-3">\n        <ion-label class="header-ttl">Mot de passe oubli&#233;</ion-label>\n      </ion-col>\n      <ion-col class="col-3">\n\n      </ion-col>\n    </ion-row>\n\n    <div class="overlay">\n      <ion-row class="info-ctn">\n        <ion-label class="info">Saisissez votre e-mail et recevez votre mot de passe par e-mail</ion-label>\n      </ion-row>\n\n      <ion-row>\n        <ion-col>\n          <form #form class="form">\n\n            <ion-row>\n              <ion-label class="lab-e-mail">Votre e-mail</ion-label>\n            </ion-row>\n            <ion-row class="e-mail-ctn">\n              <ion-input type="email" [(ngModel)]="mail" name="email" (input)="emailTyping();" maxlength="254" class="e-mail"></ion-input>\n            </ion-row>\n\n\n            <ion-row>\n              <button ion-button round class="btn-blue-gradient" (click)="recover();">\n                Continuer\n              </button>\n            </ion-row>\n\n          </form>\n\n        </ion-col>\n      </ion-row>\n    </div>\n\n  </ion-grid>\n\n\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/recoverpasswd/recoverpasswd.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["s" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_3__providers_globals_globals__["a" /* GlobalsProvider */]])
    ], RecoverpasswdPage);
    return RecoverpasswdPage;
}());

//# sourceMappingURL=recoverpasswd.js.map

/***/ }),

/***/ 155:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Faqadd4annulerPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_home__ = __webpack_require__(20);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



/**
 * Generated class for the Faqadd4annulerPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var Faqadd4annulerPage = /** @class */ (function () {
    function Faqadd4annulerPage(navCtrl, navParams, viewCtrl, platform) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.viewCtrl = viewCtrl;
        this.platform = platform;
        this.user = {};
        this.source = "";
        this.user = navParams.get('user');
        this.source = navParams.get('source');
        this.platform.registerBackButtonAction(function () {
            viewCtrl.dismiss({
                cancel: false
            });
        });
    }
    Faqadd4annulerPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad Faqadd4annulerPage');
    };
    Faqadd4annulerPage.prototype.ionViewWillEnter = function () {
        var _this = this;
        this.platform.registerBackButtonAction(function () {
            _this.viewCtrl.dismiss({
                cancel: false
            });
        });
    };
    Faqadd4annulerPage.prototype.dismiss = function () {
        this.viewCtrl.dismiss({
            cancel: false
        });
    };
    Faqadd4annulerPage.prototype.annuler = function () {
        this.viewCtrl.dismiss({
            cancel: true
        });
    };
    Faqadd4annulerPage.prototype.publier = function () {
        var home = __WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */];
        this.navCtrl.setRoot(home, {
            user: this.user
        }, {
            animate: true
        });
    };
    Faqadd4annulerPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-faqadd4annuler',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/faqadd4annuler/faqadd4annuler.html"*/'<ion-content class="container">\n\n  <ion-grid class="ctn-rec">\n    <ion-row class="flex-row">\n      <ion-col>\n        <ion-row>\n          <ion-col>\n            <img class="danger-icon" src="../../assets/icon/error-ff0000.svg" />\n          </ion-col>\n        </ion-row>\n        <ion-row>\n          <ion-col>\n            <ion-label class="ws-norm">\n              Êtes-vous sûr de vouloir quitter la publication ?\n            </ion-label>\n          </ion-col>\n        </ion-row>\n        <ion-row>\n          <ion-col size="6">\n            <button ion-button round class="btn-download" (click)="annuler();">OUI</button>\n          </ion-col>\n          <ion-col size="6">\n            <button ion-button round class="btn-blue-gradient" (click)="dismiss();">NON</button>\n          </ion-col>\n        </ion-row>\n      </ion-col>\n    </ion-row>\n\n  </ion-grid>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/faqadd4annuler/faqadd4annuler.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */]])
    ], Faqadd4annulerPage);
    return Faqadd4annulerPage;
}());

//# sourceMappingURL=faqadd4annuler.js.map

/***/ }),

/***/ 156:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AnnonceAdd1Page; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_file__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__annonce_add2_annonce_add2__ = __webpack_require__(55);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_photo_library__ = __webpack_require__(124);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




// import { Camera, CameraOptions } from '@ionic-native/camera';

/**
 * Generated class for the AnnonceAdd1Page page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AnnonceAdd1Page = /** @class */ (function () {
    function AnnonceAdd1Page(navCtrl, navParams, file, viewCtrl, 
        // private camera: Camera,
        photoLibrary, platform, modalCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.file = file;
        this.viewCtrl = viewCtrl;
        this.photoLibrary = photoLibrary;
        this.platform = platform;
        this.modalCtrl = modalCtrl;
        this.source = 1;
        this.load = 0;
        this.listImage = [];
        this.selectedImg = null;
        this.listCat = [];
        this.sourcePage = '';
        this.phoneLibPhotos = [];
        this.range = 1;
        this.user = navParams.get('user');
        this.listCat = navParams.get('listCat');
        this.source = navParams.get('source') != null ? navParams.get('source') : 1;
        this.sourcePage = navParams.get('sourcePage');
        platform.registerBackButtonAction(function () {
            navCtrl.pop();
        });
    }
    AnnonceAdd1Page.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AnnonceAdd1Page');
        this.showGalery();
    };
    AnnonceAdd1Page.prototype.selectImage = function (img) {
        this.selectedImg = img;
    };
    AnnonceAdd1Page.prototype.getImagesGalerie = function (baseURL, dirToList) {
        var _this = this;
        this.file.listDir(baseURL, dirToList)
            .then(function (listing) {
            var idImg = 0;
            listing.forEach(function (value) {
                //console.log(JSON.stringify(value));
                var fileExt = value.name.substring(value.name.lastIndexOf('.') + 1, value.name.length) || value.name;
                //console.log("Extension :::::::::::::::: " + fileExt);
                if (value.isFile && (fileExt == "png" || fileExt == "jpg" || fileExt == "jpeg" || fileExt == "gif")) {
                    //console.log("Getting image data base64");
                    _this.file.readAsDataURL(baseURL + dirToList, value.name)
                        .then(function (url) {
                        var img = {
                            id: idImg,
                            url: url,
                            data: value
                        };
                        _this.listImage.push(img);
                        idImg++;
                        if (_this.selectedImg == null)
                            _this.selectedImg = _this.listImage[0];
                        //console.log(url);
                    })
                        .catch(function (error) {
                        console.log(JSON.stringify(error));
                    });
                }
                else if (value.isDirectory && value.name != 'cache') {
                    _this.getImagesGalerie(baseURL + dirToList + '/', value.name);
                }
            });
        })
            .catch(function (ex) {
            console.log('error');
            console.log(JSON.stringify(ex));
        });
    };
    AnnonceAdd1Page.prototype.fermer = function () {
        this.navCtrl.pop();
    };
    AnnonceAdd1Page.prototype.fermerDismiss = function () {
        this.viewCtrl.dismiss();
    };
    AnnonceAdd1Page.prototype.nextStep = function () {
        var _this = this;
        var modalAd2 = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_3__annonce_add2_annonce_add2__["a" /* AnnonceAdd2Page */], {
            img: this.selectedImg,
            user: this.user,
            listCat: this.listCat,
            sourcePage: this.sourcePage
        });
        modalAd2.onDidDismiss(function (data) {
            _this.viewCtrl.dismiss(data);
        });
        modalAd2.present();
    };
    AnnonceAdd1Page.prototype.dismiss = function () {
        this.viewCtrl.dismiss(this.selectedImg);
    };
    // public takePicture() {
    //   let baseURL = this.file.externalRootDirectory;
    //   const options: CameraOptions = {
    //     quality: 100,
    //     destinationType: this.camera.DestinationType.FILE_URI,
    //     encodingType: this.camera.EncodingType.PNG,
    //     mediaType: this.camera.MediaType.PICTURE,
    //     targetWidth: 900,
    //     targetHeight: 600,
    //     allowEdit: false
    //   }
    //   this.camera.getPicture(options).then((imageData) => {
    //     // imageData is either a base64 encoded string or a file URI
    //     // If it's base64 (DATA_URL):
    //     console.log("Base64 image data tacked as picture");
    //     console.log(imageData);
    //     console.log('FilePath', imageData);
    //     let fileName = imageData.substr(imageData.lastIndexOf('/') + 1);
    //     let fileExtension = fileName.substr(fileName.lastIndexOf('.') + 1);
    //     let filePath = imageData.substr(0, imageData.lastIndexOf('/') + 1);
    //     console.log(fileName);
    //     console.log(fileExtension);
    //     console.log(filePath);
    //     //this.takedPic = 'data:image/jpeg;base64,' + filePathResized;
    //     this.file.copyFile(filePath, fileName, baseURL + "Pictures", fileName)
    //       .then(data => {
    //         console.log("Copy finished");
    //         console.log(JSON.stringify(data));
    //         this.file.readAsDataURL(baseURL + 'Pictures', data.name)
    //           .then(url => {
    //             let img = {
    //               id: (this.listImage.length + 1),
    //               url: url,
    //               data: data
    //             };
    //             // this.listImage.push(img);
    //             this.selectedImg = img;
    //             //console.log(url);
    //           })
    //           .catch(error => {
    //             console.log(JSON.stringify(error));
    //           });
    //       },
    //         error => {
    //           console.log("Error when copying file");
    //           console.log(JSON.stringify(error));
    //         });
    //   },
    //     (err) => {
    //       console.log("Error on camera");
    //       console.log(JSON.stringify(err));
    //     });
    // }
    // public getFromCamera() {
    //   this.load = 1;
    //   let baseURL = this.file.externalRootDirectory;
    //   const options: CameraOptions = {
    //     quality: 100,
    //     destinationType: this.camera.DestinationType.FILE_URI,
    //     encodingType: this.camera.EncodingType.PNG,
    //     mediaType: this.camera.MediaType.PICTURE,
    //     // targetWidth: 900,
    //     // targetHeight: 600,
    //     sourceType: this.camera.PictureSourceType.PHOTOLIBRARY,
    //     allowEdit: false
    //   }
    //   this.camera.getPicture(options).then((imageData) => {
    //     // imageData is either a base64 encoded string or a file URI
    //     // If it's base64 (DATA_URL):
    //     console.log("Base64 image data tacked as picture");
    //     console.log(imageData.substr(0, imageData.lastIndexOf('?')));
    //     let fullPath = imageData.substr(0, imageData.lastIndexOf('?'))
    //     console.log('FilePath', fullPath);
    //     let fileName = fullPath.substr(fullPath.lastIndexOf('/') + 1);
    //     let fileExtension = fileName.substr(fileName.lastIndexOf('.') + 1);
    //     let filePath = fullPath.substr(0, fullPath.lastIndexOf('/') + 1);
    //     console.log(fileName);
    //     console.log(fileExtension);
    //     console.log(filePath);
    //     this.file.readAsDataURL(filePath, fileName)
    //       .then(url => {
    //         this.load = 0;
    //         let img = {
    //           id: (this.listImage.length + 1),
    //           url: url,
    //           data: { nativeURL: fullPath }
    //         };
    //         // this.listImage.push(img);
    //         this.selectedImg = img;
    //         //console.log(url);
    //       })
    //       .catch(error => {
    //         this.load = 0;
    //         console.log(JSON.stringify(error));
    //       });
    //   },
    //     (err) => {
    //       this.load = 0;
    //       console.log("Error on camera");
    //       console.log(JSON.stringify(err));
    //     });
    // }
    AnnonceAdd1Page.prototype.showGalery = function () {
        var _this = this;
        this.photoLibrary.requestAuthorization().then(function () {
            _this.photoLibrary.getLibrary().subscribe({
                next: function (library) {
                    _this.phoneLibPhotos = library;
                    var _loop_1 = function (i) {
                        var url = 'file://' + _this.phoneLibPhotos[i].id.substring(_this.phoneLibPhotos[i].id.lastIndexOf(';') + 1, _this.phoneLibPhotos[i].id.length);
                        var dirEntry = url.substring(0, url.lastIndexOf('/'));
                        var fileName = url.substring(url.lastIndexOf('/') + 1, url.length);
                        _this.file.readAsDataURL(dirEntry, fileName)
                            .then(function (urlBase64) {
                            var img = {
                                id: _this.phoneLibPhotos[i].id,
                                url: urlBase64,
                                nativeURL: url,
                                data: {
                                    nativeURL: url
                                }
                            };
                            _this.listImage.push(img);
                            if (_this.selectedImg == null)
                                _this.selectedImg = _this.listImage[0];
                            if (i == 11) {
                                _this.range += 1;
                                _this.load = 0;
                            }
                            //console.log(url);
                        })
                            .catch(function (error) {
                            _this.load = 0;
                            console.log("Can not read file");
                            console.log(JSON.stringify(error));
                        });
                    };
                    //this.listImage = library;
                    for (var i = 0; i < 12; i++) {
                        _loop_1(i);
                    }
                },
                error: function (err) { console.log('could not get photos'); },
                complete: function () { console.log('done getting photos'); }
            });
        })
            .catch(function (err) { return console.log('permissions weren\'t granted'); });
    };
    AnnonceAdd1Page.prototype.doInfinite = function (infiniteScroll) {
        var _this = this;
        if (this.range * 12 >= this.phoneLibPhotos.length) {
            infiniteScroll.complete();
            return;
        }
        var limit = this.range * 24 < this.phoneLibPhotos.length ? this.range * 24 : this.phoneLibPhotos.length;
        var _loop_2 = function (i) {
            var url = 'file://' + this_1.phoneLibPhotos[i].id.substring(this_1.phoneLibPhotos[i].id.lastIndexOf(';') + 1, this_1.phoneLibPhotos[i].id.length);
            var dirEntry = url.substring(0, url.lastIndexOf('/'));
            var fileName = url.substring(url.lastIndexOf('/') + 1, url.length);
            console.log("=========================================");
            console.log(dirEntry);
            console.log(fileName);
            this_1.file.readAsDataURL(dirEntry, fileName)
                .then(function (urlBase64) {
                var img = {
                    id: _this.phoneLibPhotos[i].id,
                    url: urlBase64,
                    nativeURL: url,
                    data: {
                        nativeURL: url
                    }
                };
                _this.listImage.push(img);
                if (_this.selectedImg == null)
                    _this.selectedImg = _this.listImage[0];
                if (i == limit - 1) {
                    _this.range += 1;
                    infiniteScroll.complete();
                }
            })
                .catch(function (error) {
                console.log(JSON.stringify(error));
            });
        };
        var this_1 = this;
        for (var i = this.range * 12; i < limit; i++) {
            _loop_2(i);
        }
    };
    AnnonceAdd1Page = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-annonce-add1',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/annonce-add1/annonce-add1.html"*/'<ion-content>\n\n  <div ion-fixed class="load-ctn" id="load" *ngIf="load == 1">\n    <img class="load-img" src="../../assets/icon/Spinner-load.svg" />\n  </div>\n\n  <ion-grid class="container">\n\n    <ion-row class="header">\n      <ion-col (click)="fermer();">\n        <img class="back-icon" src="../../assets/icon/cancel.svg" />\n      </ion-col>\n      <ion-col>\n        <span *ngIf="source == 1" class="gc" (click)="nextStep();">\n          <span class="fw-faq">Continuer</span>\n          <img class="fw-icon" src="../../assets/icon/right-arrow-blue.svg" />\n        </span>\n\n        <span *ngIf="source == 2" class="gc" (click)="dismiss();">\n          <span class="fw-faq">Continuer</span>\n          <img class="fw-icon" src="../../assets/icon/right-arrow-blue.svg" />\n        </span>\n      </ion-col>\n\n    </ion-row>\n\n    <ion-row *ngIf="selectedImg != null" class="ctn-selected-img">\n      <img src="{{selectedImg.url}}" class="img-sd" />\n    </ion-row>\n\n    <ion-row class="img-ctn">\n      <img *ngFor="let img of listImage" src="{{img.url}}" class="img-to" (click)="selectImage(img);" />\n    </ion-row>\n\n  </ion-grid>\n\n  <ion-infinite-scroll (ionInfinite)="doInfinite($event)">\n    <ion-infinite-scroll-content></ion-infinite-scroll-content>\n  </ion-infinite-scroll>\n\n  <ion-row *ngIf="selectedImg == null" ion-fixed class="instrPhoto">\n    <ion-label class="textToWrap">\n      <span class="textToWrap">Utilisez votre caméra ou galerie si vous voullez ajouter une image,\n        en cliquant sur l\'un des deux boutons en dessous.<br></span>\n      <span class="textToWrap"><br><br>Si non vous pouvez cliquer sur continuer immediatement.</span>\n    </ion-label>\n  </ion-row>\n\n  <ion-row ion-fixed class="tab-faq">\n    <ion-col class="to-right" (click)="getFromCamera()">\n      <ion-label>Galerie</ion-label>\n    </ion-col>\n    <ion-col class="to-left" (click)="takePicture();">\n      <ion-label>Photo</ion-label>\n    </ion-col>\n  </ion-row>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/annonce-add1/annonce-add1.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_file__["a" /* File */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_photo_library__["a" /* PhotoLibrary */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */]])
    ], AnnonceAdd1Page);
    return AnnonceAdd1Page;
}());

//# sourceMappingURL=annonce-add1.js.map

/***/ }),

/***/ 157:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AnnonceBoostPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the AnnonceBoostPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AnnonceBoostPage = /** @class */ (function () {
    function AnnonceBoostPage(navCtrl, navParams, viewCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.viewCtrl = viewCtrl;
        this.selectedBoost = null;
        this.listBoost = [];
        this.user = {};
    }
    AnnonceBoostPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AnnonceBoostPage');
    };
    AnnonceBoostPage.prototype.dismiss = function () {
        this.viewCtrl.dismiss();
    };
    AnnonceBoostPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-annonce-boost',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/annonce-boost/annonce-boost.html"*/'<ion-content class="pr">\n\n  <div class="container">\n    <div class="toDismiss"></div>\n    <div class="toCenter">\n      <div class="textToRead">Nos annonces sont gratuites en ce moment, alors profitez en !</div>\n      <div class="btnNext" (click)="dismiss()">Continuer</div>\n    </div>\n  </div>\n\n  <!-- <div class="container">\n\n    <ion-grid>\n\n      <ion-row class="top-gc">\n        <ion-col (click)="retour();">\n          <img class="back-icon" src="../../assets/icon/back-white.svg">\n          <ion-label class="gc-left">\n            Retour\n          </ion-label>\n        </ion-col>\n        <ion-col (click)="continue();">\n          <img class="forward-icon" src="../../assets/icon/next-white.svg">\n          <ion-label class="gc-right">\n            Continuer\n          </ion-label>\n        </ion-col>\n\n      </ion-row>\n\n      <ion-row>\n        <ion-label class="desc-boost">\n          Donnez plus de visibilité à votre post!\n        </ion-label>\n      </ion-row>\n\n      <ion-row class="btn-blue-gradient" *ngFor="let ab of listBoost" (click)="selectBoost(ab)">\n        <ion-col class="tarif" col-2>\n          <ion-label>\n            {{ab.prix}} €\n          </ion-label>\n        </ion-col>\n        <ion-col class="desc-abon">\n          <ion-label>\n            {{ab.title}}\n          </ion-label>\n        </ion-col>\n        <ion-col class="ctn-icon-left" col-2>\n          <ion-label *ngIf="selectedBoost != null && selectedBoost.id == ab.id">\n            <ion-icon id="icon_btn_0" class="icon-checked" color="gris">\n              <img class="check-icon" src="../../assets/imgs/da_image/Group.png" />\n            </ion-icon>\n          </ion-label>\n        </ion-col>\n      </ion-row>\n\n      <ion-row>\n        <button ion-button round class="btn-blue-gradient-round" (click)="annuler();">Annuler</button>\n      </ion-row>\n\n    </ion-grid>\n\n  </div> -->\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/annonce-boost/annonce-boost.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */]])
    ], AnnonceBoostPage);
    return AnnonceBoostPage;
}());

//# sourceMappingURL=annonce-boost.js.map

/***/ }),

/***/ 158:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UpdateprofilPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_file__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__faqfilter_faqfilter__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__photopopup_photopopup__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__cropper2_cropper2__ = __webpack_require__(222);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ionic_storage__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ionic_native_toast__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ionic_native_crop__ = __webpack_require__(223);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










// import { ImageResizer, ImageResizerOptions } from '@ionic-native/image-resizer';

var UpdateprofilPage = /** @class */ (function () {
    function UpdateprofilPage(navCtrl, navParams, viewCtrl, modalCtrl, http, globals, file, alertCtrl, platform, storage, toast, 
        // private imageResizer: ImageResizer,
        crop) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.viewCtrl = viewCtrl;
        this.modalCtrl = modalCtrl;
        this.http = http;
        this.globals = globals;
        this.file = file;
        this.alertCtrl = alertCtrl;
        this.platform = platform;
        this.storage = storage;
        this.toast = toast;
        this.crop = crop;
        this.load = 0;
        this.autocomplete = { inpur: '' };
        this.autocompleteItems = [];
        this.zone = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"]({ enableLongStackTrace: true });
        this.full_ad_address = "";
        this.ad_address = "";
        this.job = "";
        this.pseudo = "";
        this.mail = "";
        this.phone = "";
        this.newpassowrd = "";
        this.confirmpw = "";
        this.source = "";
        this.user = {};
        this.isDisabled = true;
        this.validMail = 0;
        this.validPasswd = 0;
        this.avatar = null;
        this.selectBefore = null;
        this.jobs = [
            { id: 1, slug: '', name: 'Chirurgien dentiste' },
            { id: 2, slug: '', name: 'Etudiant en odontologie' },
            { id: 3, slug: '', name: 'Formateur en odontologie' },
            { id: 4, slug: '', name: 'Assistante dentaire' },
            { id: 5, slug: '', name: 'Autres professions médicales' },
            { id: 6, slug: '', name: 'Autres (Précisez)' }
        ];
        this.GoogleAutocomplete = new google.maps.places.AutocompleteService();
        this.source = navParams.get('source');
        this.user = navParams.get('user');
        console.log("*****************USER******************");
        console.log(JSON.stringify(this.user));
        this.mail = this.user.user_email ? this.user.user_email : this.user.mail;
        this.phone = this.user.phone;
        this.job = this.user.job;
        this.pseudo = this.user.pseudo;
        this.ad_address = this.user.address;
        this.full_ad_address = this.user.full_address;
        this.autocomplete.input = this.user.address;
        platform.registerBackButtonAction(function () {
            viewCtrl.dismiss({
                status: "no_update"
            });
        });
    }
    UpdateprofilPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad UpdateprofilPage');
        this.mail = this.user.user_email;
    };
    UpdateprofilPage.prototype.setAvatar = function () {
        var _this = this;
        this.load = 1;
        var newphoto = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_7__cropper2_cropper2__["a" /* Cropper2Page */], {
            source: "profil",
            user: this.user
        });
        newphoto.onDidDismiss(function (data) {
            _this.platform.registerBackButtonAction(function () {
                _this.viewCtrl.dismiss({
                    status: "no_update"
                });
            });
            if (data != null && data.url != null) {
                _this.avatar = data;
                _this.http.post(_this.globals.variables.urls.editProfilURLB64, {
                    "user_id": "" + (_this.user.id_User != null ? _this.user.id_User : _this.user.id),
                    "image": data.data.nativeURL,
                    "source": data.data.source
                }, {}
                // ,
                // newImage.substring(0, newImage.lastIndexOf('?')),
                // 'file-avatar'
                )
                    .then(function (data) {
                    _this.load = 0;
                    var upUser = JSON.parse(data.data).info_utilisateur;
                    upUser.mail = upUser.user_email != null ? upUser.user_email : upUser.mail;
                    _this.user.avatar = upUser.avatar;
                    var avatar = _this.user.avatar != null ? _this.user.avatar : _this.user.photo;
                    _this.http.downloadFile(avatar, {}, {}, _this.file.dataDirectory + "profil.jpeg")
                        .then(function (data) {
                        console.log("Resultat du save profil");
                        console.log(JSON.stringify(data));
                        _this.file.readAsDataURL(_this.file.dataDirectory, "profil.jpeg")
                            .then(function (data) {
                            _this.user.avatarB64 = data;
                            _this.saveSession(_this.user);
                        });
                        _this.user = upUser;
                        console.log("Res edit profil");
                        console.log(JSON.stringify(data));
                        console.log("Res edit profil");
                        // this.viewCtrl.dismiss(this.selectedImg);
                        _this.toast.show("Votre profil est à jour", '3000', 'bottom').subscribe(function (toast) {
                            console.log(JSON.stringify(toast));
                        });
                    }, function (error) {
                        console.log("Error saving profil from download");
                        console.log(JSON.stringify(error));
                    });
                    // this.saveSession(upUser)
                }, function (error) {
                    _this.load = 0;
                    console.log("Error uploading");
                    console.error(JSON.stringify(error));
                    // this.viewCtrl.dismiss();
                    var alert = _this.alertCtrl.create({
                        title: 'Information !',
                        subTitle: 'Erreur de téléchargement de l\'image.',
                        buttons: ['Ok']
                    });
                    alert.present();
                });
            }
            else {
                _this.load = 0;
            }
        });
        newphoto.present();
    };
    UpdateprofilPage.prototype.changeAvatar = function () {
        var _this = this;
        this.load = 1;
        var newphoto = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_6__photopopup_photopopup__["a" /* PhotopopupPage */], {
            source: "profil",
            user: this.user
        });
        newphoto.onDidDismiss(function (data) {
            _this.platform.registerBackButtonAction(function () {
                _this.viewCtrl.dismiss({
                    status: "no_update"
                });
            });
            if (data != null && data.url != null) {
                _this.avatar = data;
                _this.http.post(_this.globals.variables.urls.editProfilURLB64, {
                    "user_id": "" + (_this.user.id_User != null ? _this.user.id_User : _this.user.id),
                    "image": data.data.nativeURL,
                    "source": data.data.source
                }, {}
                // ,
                // newImage.substring(0, newImage.lastIndexOf('?')),
                // 'file-avatar'
                )
                    .then(function (data) {
                    _this.load = 0;
                    var upUser = JSON.parse(data.data).info_utilisateur;
                    upUser.mail = upUser.user_email != null ? upUser.user_email : upUser.mail;
                    _this.user.avatar = upUser.avatar;
                    _this.http.downloadFile(_this.user.avatar, {}, {}, _this.file.externalDataDirectory + (new Date().getTime() + ".jpeg"))
                        .then(function (data) {
                        console.log("**************File avatar downloaded******************");
                        console.log(JSON.stringify(data));
                        _this.crop.crop(data.nativeURL, { quality: 50, targetWidth: 512, targetHeight: 512 })
                            .then(function (newImage) {
                            console.log('new image path is: ' + newImage);
                            _this.http.uploadFile(_this.globals.variables.urls.editProfilURL, {
                                "user_id": "" + (_this.user.id_User != null ? _this.user.id_User : _this.user.id)
                            }, {}, newImage.substring(0, newImage.lastIndexOf('?')), 'file-avatar')
                                .then(function (data) {
                                _this.load = 0;
                                var upUser = JSON.parse(data.data).info_utilisateur;
                                upUser.mail = upUser.user_email != null ? upUser.user_email : upUser.mail;
                                _this.user.avatar = upUser.avatar;
                                var avatar = _this.user.avatar != null ? _this.user.avatar : _this.user.photo;
                                _this.http.downloadFile(avatar, {}, {}, _this.file.dataDirectory + "profil.jpeg")
                                    .then(function (data) {
                                    console.log("Resultat du save profil");
                                    console.log(JSON.stringify(data));
                                    _this.file.readAsDataURL(_this.file.dataDirectory, "profil.jpeg")
                                        .then(function (data) {
                                        _this.user.avatarB64 = data;
                                        _this.saveSession(_this.user);
                                    });
                                    _this.user = upUser;
                                    console.log("Res edit profil");
                                    console.log(JSON.stringify(data));
                                    console.log("Res edit profil");
                                    // this.viewCtrl.dismiss(this.selectedImg);
                                    _this.toast.show("Votre profil est à jour", '3000', 'bottom').subscribe(function (toast) {
                                        console.log(JSON.stringify(toast));
                                    });
                                }, function (error) {
                                    console.log("Error saving profil from download");
                                    console.log(JSON.stringify(error));
                                });
                                // this.saveSession(upUser)
                            }, function (error) {
                                _this.load = 0;
                                console.log("Error uploading");
                                console.error(JSON.stringify(error));
                                // this.viewCtrl.dismiss();
                                var alert = _this.alertCtrl.create({
                                    title: 'Information !',
                                    subTitle: 'Erreur de téléchargement de l\'image.',
                                    buttons: ['Ok']
                                });
                                alert.present();
                            });
                        }, function (error) {
                            _this.load = 0;
                            console.error('Error cropping image');
                            console.log(JSON.stringify(error));
                        });
                    }, function (error) {
                        console.log("Error downloading");
                        console.log(JSON.stringify(error));
                    });
                    _this.saveSession(upUser);
                    _this.user = upUser;
                    console.log("Res edit profil");
                    console.log(JSON.stringify(data));
                    console.log("Res edit profil");
                    // this.viewCtrl.dismiss(this.selectedImg);
                    _this.toast.show("Votre profil est à jour", '3000', 'bottom').subscribe(function (toast) {
                        console.log(JSON.stringify(toast));
                    });
                }, function (error) {
                    _this.load = 0;
                    console.log("Error uploading");
                    console.log(JSON.stringify(error));
                    // this.viewCtrl.dismiss();
                    var alert = _this.alertCtrl.create({
                        title: 'Information !',
                        subTitle: 'Délai d\'attente de la demande dépassé.',
                        buttons: ['Ok']
                    });
                    alert.present();
                });
                /// Get croping
                // this.user.avatar = data.url;
                // let strImage = atob(data.base64)
                // this.file.writeFile(this.file.externalDataDirectory, (new Date().getTime()) + ".jpeg", strImage)
                //     .then(
                //         fileEntry => {
                //             console.log("File writen")
                //             console.log(JSON.stringify(fileEntry))
                //             const nativeURL = fileEntry.nativeURL
                //             this.crop.crop(nativeURL, { quality: 50, targetWidth: 512, targetHeight: 512 })
                //                 .then(
                //                     newImage => {
                //                         console.log('new image path is: ' + newImage)
                //                         this.http.uploadFile(this.globals.variables.urls.editProfilURL,
                //                             {
                //                                 "user_id": "" + (this.user.id_User != null ? this.user.id_User : this.user.id)
                //                             },
                //                             {},
                //                             newImage.substring(0, newImage.lastIndexOf('?')),
                //                             'file-avatar')
                //                             .then(
                //                                 data => {
                //                                     this.load = 0
                //                                     let upUser = JSON.parse(data.data).info_utilisateur
                //                                     upUser.mail = upUser.user_email != null ? upUser.user_email : upUser.mail
                //                                     this.user.avatar = upUser.avatar;
                //                                     this.saveSession(upUser)
                //                                     this.user = upUser
                //                                     console.log("Res edit profil");
                //                                     console.log(JSON.stringify(data));
                //                                     console.log("Res edit profil");
                //                                     // this.viewCtrl.dismiss(this.selectedImg);
                //                                     this.toast.show("Votre profil est à jour", '3000', 'bottom').subscribe(
                //                                         toast => {
                //                                             console.log(JSON.stringify(toast));
                //                                         }
                //                                     );
                //                                 },
                //                                 error => {
                //                                     this.load = 0
                //                                     console.log("Error uploading")
                //                                     console.log(JSON.stringify(error));
                //                                     // this.viewCtrl.dismiss();
                //                                     let alert = this.alertCtrl.create({
                //                                         title: 'Information !',
                //                                         subTitle: 'Erreur de téléchargement de l\'image.',
                //                                         buttons: ['Ok']
                //                                     });
                //                                     alert.present();
                //                                 }
                //                             );
                //                     },
                //                     error => {
                //                         this.load = 0
                //                         console.error('Error cropping image')
                //                         console.log(JSON.stringify(error))
                //                     }
                //                 );
                //         }
                //     )
                //     .catch(
                //         error => {
                //             console.log("Error writing file from base 64")
                //             console.log(JSON.stringify(error))
                //         }
                //     )
                // let options = {
                //     uri: data.data.nativeURL,
                //     folderName: 'Protonet',
                //     quality: 20,
                //     width: 512,
                //     height: 512
                // } as ImageResizerOptions;
                // this.imageResizer
                //     .resize(options)
                //     .then((filePath: string) => {
                //         console.log('FilePath:::::', filePath)
                //     })
                //     .catch(e => console.log(e));
                // console.log("IMG_URL : " + data.data.nativeURL)
                // console.log('' + data.filePath + data.fileName + " ::: " + data.nativeURL)
            }
            else {
                _this.load = 0;
            }
        });
        newphoto.present();
    };
    UpdateprofilPage.prototype.changeJob = function () {
        var _this = this;
        var filtre = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_5__faqfilter_faqfilter__["a" /* FaqfilterPage */], {
            theme: this.jobs,
            //   listTyp: this.listType,
            user: this.user,
            title: "Profession",
            selectBefore: this.selectBefore,
            source: "profil_job"
        });
        filtre.onDidDismiss(function (data) {
            if (data.job != null && data.job.id != '') {
                _this.selectBefore = data.job;
                _this.job = data.job.name;
            }
        });
        filtre.present();
    };
    UpdateprofilPage.prototype.annulerClick = function () {
        this.viewCtrl.dismiss({
            status: "no_update"
        });
    };
    UpdateprofilPage.prototype.saveChange = function () {
        this.load = 1;
        this.updateChange();
    };
    UpdateprofilPage.prototype.updateChange = function () {
        var _this = this;
        var job = this.job != this.user.job ? this.job : '...';
        var addr = this.ad_address != this.user.address ? this.ad_address : '...';
        var full_addr = this.full_ad_address != this.user.full_address ? this.full_ad_address : '...';
        var newpw = this.newpassowrd != '' ? this.newpassowrd : '...';
        var conf_newpw = this.confirmpw != '' ? this.confirmpw : '...';
        var phone = this.phone != this.user.phone ? this.phone : '...';
        var email = this.mail != this.user.mail ? this.mail : '...';
        var pseudo = this.pseudo != this.user.pseudo ? this.pseudo : '...';
        if (job != '...' || addr != '...' || full_addr != '...' || newpw != '...' || phone != '...' || email != '...' || pseudo != '...') {
            //
            if (email != '...' && !(/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(email))) {
                var alert_1 = this.alertCtrl.create({
                    title: 'Information',
                    subTitle: 'Votre e-mail est invalide.',
                    buttons: ['Ok']
                });
                alert_1.present();
                this.load = 0;
            }
            else if (phone != '...' && phone.length < 10) {
                this.load = 0;
                var alert_2 = this.alertCtrl.create({
                    title: 'Information',
                    subTitle: 'Votre numéro de téléphone doit contenir au minimum 10 caractères.',
                    buttons: ['Ok']
                });
                alert_2.present();
            }
            else if (newpw != '...' && newpw.length < 8) {
                this.load = 0;
                var alert_3 = this.alertCtrl.create({
                    title: 'Information',
                    subTitle: 'Votre mot de passe doit contenir au minimum 8 caractères.',
                    buttons: ['Ok']
                });
                alert_3.present();
            }
            else if (newpw != '...' && newpw != conf_newpw) {
                this.load = 0;
                var alert_4 = this.alertCtrl.create({
                    title: 'Information',
                    subTitle: 'Mot de passe non identique.',
                    buttons: ['Ok']
                });
                alert_4.present();
            }
            else if (pseudo != '...') {
                this.http.post(this.globals.variables.urls.checkPseudoURL, {
                    "pseudo": pseudo
                }, {})
                    .then(function (data) {
                    _this.load = 0;
                    console.log("Resultat du check pseudo");
                    console.log(JSON.stringify(data.data));
                    if (email != '') {
                        _this.http.post(_this.globals.variables.urls.checkMailURL, { "mail": email }, {})
                            .then(function (data) {
                            _this.load = 0;
                            var res = JSON.parse(data.data);
                            console.log("Resultat du check mail");
                            console.log(JSON.stringify(data.data));
                            if (res.status == 'ok') {
                                _this.validateChange({
                                    job: job,
                                    addr: addr,
                                    full_addr: full_addr,
                                    newpw: newpw,
                                    conf_newpw: conf_newpw,
                                    phone: phone,
                                    email: email,
                                    pseudo: pseudo
                                });
                            }
                            else {
                                //Cet email possède déjà un compte.
                                var alert_5 = _this.alertCtrl.create({
                                    title: 'Information',
                                    subTitle: 'Cet email possède déjà un compte.',
                                    buttons: ['Ok']
                                });
                                alert_5.present();
                            }
                        }, function (error) {
                            _this.load = 0;
                            console.log("Erreur du check mail");
                            console.log(JSON.stringify(error));
                            var alert = _this.alertCtrl.create({
                                title: 'Information',
                                subTitle: 'Erreur lors du verification du mail.',
                                buttons: ['Ok']
                            });
                            alert.present();
                        });
                    }
                    else {
                        _this.validateChange({
                            job: job,
                            addr: addr,
                            full_addr: full_addr,
                            newpw: newpw,
                            conf_newpw: conf_newpw,
                            phone: phone,
                            email: email,
                            pseudo: pseudo
                        });
                    }
                }, function (error) {
                    _this.load = 0;
                    console.log("Erreur du check pseudo");
                    console.log(JSON.stringify(error));
                    var alert = _this.alertCtrl.create({
                        title: 'Information',
                        subTitle: 'Erreur lors du verification du pseudo.',
                        buttons: ['Ok']
                    });
                    alert.present();
                });
            }
            else if (email != '...' && /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(email)) {
                this.http.post(this.globals.variables.urls.checkMailURL, { "mail": email }, {})
                    .then(function (data) {
                    _this.load = 0;
                    var res = JSON.parse(data.data);
                    console.log("Resultat du check mail");
                    console.log(JSON.stringify(data.data));
                    if (res.status == 'ok') {
                        _this.validateChange({
                            job: job,
                            addr: addr,
                            full_addr: full_addr,
                            newpw: newpw,
                            conf_newpw: conf_newpw,
                            phone: phone,
                            email: email,
                            pseudo: pseudo
                        });
                    }
                    else {
                        //Cet email possède déjà un compte.
                        var alert_6 = _this.alertCtrl.create({
                            title: 'Information',
                            subTitle: 'Cet email possède déjà un compte.',
                            buttons: ['Ok']
                        });
                        alert_6.present();
                    }
                }, function (error) {
                    _this.load = 0;
                    console.log("Erreur du check mail");
                    console.log(JSON.stringify(error));
                    var alert = _this.alertCtrl.create({
                        title: 'Information',
                        subTitle: 'Erreur lors du verification du mail.',
                        buttons: ['Ok']
                    });
                    alert.present();
                });
            }
            else if (job != '...' || addr != '...' || phone != '...' || newpw != '...') {
                this.validateChange({
                    job: job,
                    addr: addr,
                    full_addr: full_addr,
                    newpw: newpw,
                    conf_newpw: conf_newpw,
                    phone: phone,
                    email: email,
                    pseudo: pseudo
                });
            }
            else if (pseudo == '...' && email == '...') {
                this.load = 0;
                console.log("E-mail et pseudo ne changera pas");
            }
        }
        else {
            this.load = 0;
            this.viewCtrl.dismiss({
                status: 'no_update',
            });
        }
    };
    UpdateprofilPage.prototype.saveSession = function (user) {
        this.storage.set('user', user)
            .then(function (data) {
            console.log(JSON.stringify(data));
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    UpdateprofilPage.prototype.validateChange = function (change) {
        // this.http.downloadFile(this.user.avatar,
        //     {},
        //     {},
        //     this.file.dataDirectory + "/avatar.png")
        //     .then(data => {
        //         console.log("URL ============== URL");
        //         console.log(JSON.stringify(data));
        //         console.log("URL ============== URL");
        //         this.load = 0;
        //         let url = data;
        //         console.log("Goning to upload");
        var _this = this;
        this.http.post(this.globals.variables.urls.editProfilURL, {
            "user_id": "" + (this.user.id_User != null ? this.user.id_User : this.user.id),
            "job": (change.job != '...' ? change.job : ''),
            "address": (change.addr != '...' ? change.addr : ''),
            "full_address": (change.full_addr != '...' ? change.full_addr : ''),
            "new_password": (change.newpw != '...' ? change.newpw : ''),
            "confirmation_password": (change.conf_newpw != '...' ? change.conf_newpw : ''),
            "phone": (change.phone != '...' ? change.phone : ''),
            "email": (change.email != '...' ? change.email : ''),
            "pseudo": (change.pseudo != '...' ? change.pseudo : '')
        }, {})
            .then(function (data) {
            _this.load = 0;
            console.log("Getting upload result");
            var res = JSON.parse(data.data);
            if (res.etat_edition == 'profile-a-jour') {
                var upUser = res.info_utilisateur;
                upUser.mail = upUser.user_email != null ? upUser.user_email : upUser.mail;
                upUser.user_email = upUser.user_email != null ? upUser.user_email : upUser.mail;
                _this.saveSession(upUser);
                _this.user = res.info_utilisateur;
                _this.viewCtrl.dismiss({
                    status: 'upToDate',
                    user: res.info_utilisateur
                });
            }
            else {
                _this.viewCtrl.dismiss({
                    status: 'error'
                });
            }
            console.log("Res edit profil");
            console.log(JSON.stringify(data));
            console.log("Res edit profil");
        }, function (error) {
            _this.load = 0;
            console.log("Error uploading");
            console.log(JSON.stringify(error));
            _this.viewCtrl.dismiss({
                status: 'error'
            });
        });
        // },
        //     error => {
        //         this.load = 0;
        //         this.viewCtrl.dismiss({
        //             status: 'error'
        //         });
        //         console.log("Error downloading");
        //         console.log(JSON.stringify(error));
        //     });
    };
    UpdateprofilPage.prototype.updateSearchResults = function () {
        var _this = this;
        console.log("Typing");
        if (this.autocomplete.input == '') {
            this.autocompleteItems = [];
            return;
        }
        this.GoogleAutocomplete.getPlacePredictions({ input: this.autocomplete.input }, function (predictions, status) {
            if (predictions != null) {
                _this.autocompleteItems = [];
                _this.zone.run(function () {
                    predictions.forEach(function (prediction) {
                        _this.autocompleteItems.push(prediction);
                    });
                });
            }
            console.log(_this.autocompleteItems);
        });
    };
    UpdateprofilPage.prototype.selectSearchResult = function (item) {
        console.log(JSON.stringify(item));
        this.full_ad_address = JSON.stringify(item);
        this.ad_address = item.description;
        this.autocomplete.input = item.description;
        this.autocompleteItems = [];
    };
    UpdateprofilPage.prototype.emailTyping = function () {
        if (/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(this.mail)) {
            console.log("Mail valid.");
            this.validMail = 1;
        }
        else {
            console.log("Mail invalid.");
            this.validMail = 0;
        }
    };
    UpdateprofilPage.prototype.passwdTyping = function () {
        if (this.newpassowrd.length >= 8) {
            console.log("Password valid.");
            this.validPasswd = 1;
        }
        else {
            console.log("Password invalid.");
            this.validPasswd = 0;
        }
    };
    UpdateprofilPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-updateprofil',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/updateprofil/updateprofil.html"*/'<ion-content>\n\n  <div ion-fixed class="load-ctn" id="load" *ngIf="load == 1">\n    <img class="load-img" src="../../assets/icon/Spinner-load.svg" />\n  </div>\n\n  <ion-grid class="container">\n\n    <ion-row class="header">\n\n      <ion-col class="col-cancel" (click)="annulerClick();">\n        <ion-label class="annuler">\n          <img class="back-gc" src="../../assets/icon/back-117bcf.svg" />\n          <span class="back-faq">Annuler</span>\n        </ion-label>\n      </ion-col>\n\n    </ion-row>\n\n    <ion-row class="sep"></ion-row>\n\n    <ion-row class="ctn-faq-det">\n      <ion-col>\n        <ion-row class="img-ctn">\n          <ion-col>\n\n            <ion-row class="profil-pic" (click)="setAvatar()">\n              <!-- <input type="file" class="ng-hide" accept="image/*"> -->\n              <ion-label class="profil-pic-txt"> + Changer votre photo de profil</ion-label>\n            </ion-row>\n\n            <ion-row no-lines class="input-pub">\n              <ion-input [(ngModel)]="pseudo" name="pseudo" placeholder="Pseudo"></ion-input>\n            </ion-row>\n\n            <ion-row no-lines class="input-pub">\n              <ion-input type="email" [(ngModel)]="mail" name="mail" placeholder="E-mail"></ion-input>\n            </ion-row>\n\n            <ion-row no-lines class="input-pub">\n              <ion-input [(ngModel)]="phone" name="phone" placeholder="Téléphone"></ion-input>\n            </ion-row>\n\n            <ion-row no-lines class="theme" (click)="changeJob();">\n              <ion-label class="theme-txt">{{job != null && job != \'\' ? job : \'Profession\'}}</ion-label>\n              <img *ngIf="selectedCat != null" class="check-icon" src="../../assets/imgs/da_image/Group.png" />\n            </ion-row>\n\n            <!-- <ion-row no-lines class="input-pub">\n                <ion-input placeholder="Lieu"></ion-input>\n              </ion-row> -->\n\n            <ion-row no-lines class="input-pub">\n\n              <ion-input type="text" class="bb-input" [(ngModel)]="autocomplete.input" (input)="updateSearchResults()">\n              </ion-input>\n\n\n              <img class="map-marker" src="../../assets/icon/marker6.png">\n\n            </ion-row>\n\n            <ion-list [hidden]="autocompleteItems.length == 0" class="places">\n              <ion-item *ngFor="let item of autocompleteItems" tappable (click)="selectSearchResult(item)">\n                {{ item.description }}\n              </ion-item>\n            </ion-list>\n\n            <ion-row no-lines class="input-pub">\n              <ion-input type="password" [(ngModel)]="newpassowrd" name="newpassowrd"\n                placeholder="Nouveau mot de passe"></ion-input>\n            </ion-row>\n\n            <ion-row no-lines class="input-pub">\n              <ion-input type="password" [(ngModel)]="confirmpw" name="confirmpw"\n                placeholder="Confirmer le mot de passe"></ion-input>\n            </ion-row>\n\n            <ion-row class="to-right">\n              <button ion-button round class="btn-gradient-round" (click)="saveChange();">Enregistrer compte et mot de\n                passe</button>\n            </ion-row>\n\n          </ion-col>\n        </ion-row>\n\n      </ion-col>\n    </ion-row>\n\n  </ion-grid>\n\n</ion-content>'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/updateprofil/updateprofil.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_3__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_file__["a" /* File */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_8__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_9__ionic_native_toast__["a" /* Toast */],
            __WEBPACK_IMPORTED_MODULE_10__ionic_native_crop__["a" /* Crop */]])
    ], UpdateprofilPage);
    return UpdateprofilPage;
}());

//# sourceMappingURL=updateprofil.js.map

/***/ }),

/***/ 159:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FormationPopupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the FormationPopupPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var FormationPopupPage = /** @class */ (function () {
    function FormationPopupPage(navCtrl, navParams, viewCtrl, platform) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.viewCtrl = viewCtrl;
        this.platform = platform;
        platform.registerBackButtonAction(function () {
            _this.nonClick();
        });
    }
    FormationPopupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad FormationPopupPage');
    };
    FormationPopupPage.prototype.ouiClick = function () {
        this.viewCtrl.dismiss({
            state: 'oui'
        });
    };
    FormationPopupPage.prototype.nonClick = function () {
        this.viewCtrl.dismiss({
            state: 'non'
        });
    };
    FormationPopupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-formation-popup',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/formation-popup/formation-popup.html"*/'<ion-content class="container">\n\n  <ion-grid class="ctn-rec">\n    <ion-row class="flex-row">\n      <ion-col>\n        <ion-row>\n          <ion-col>\n            <ion-label class="ws-norm">\n              Poster une formation\n            </ion-label>\n          </ion-col>\n        </ion-row>\n        <ion-row>\n          <ion-col>\n            <ion-label class="ws-norm-grey">\n              Pour poster une formation, contacter l\'Administrateur de l\'App.\n            </ion-label>\n          </ion-col>\n        </ion-row>\n        <ion-row>\n          <ion-col size="6" (click)="nonClick();">\n            <button ion-button round class="btn-download">NON</button>\n          </ion-col>\n          <ion-col size="6" (click)="ouiClick();">\n            <button ion-button round class="btn-blue-gradient">OUI</button>\n          </ion-col>\n        </ion-row>\n      </ion-col>\n    </ion-row>\n\n  </ion-grid>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/formation-popup/formation-popup.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */]])
    ], FormationPopupPage);
    return FormationPopupPage;
}());

//# sourceMappingURL=formation-popup.js.map

/***/ }),

/***/ 160:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FormationaddPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_toast__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__faqfilter_faqfilter__ = __webpack_require__(37);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the FormationaddPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var FormationaddPage = /** @class */ (function () {
    function FormationaddPage(navCtrl, navParams, http, globals, alertCtrl, toast, modalCtrl, platform) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.globals = globals;
        this.alertCtrl = alertCtrl;
        this.toast = toast;
        this.modalCtrl = modalCtrl;
        this.platform = platform;
        this.mail_object = 'Proposition de formation';
        this.mail_content = '';
        this.centre_de_formation = '';
        this.lien = '';
        this.phone = '';
        this.address = '';
        this.user = {};
        this.load = 0;
        this.selectedType = {};
        this.selectedDisple = {};
        this.listTypes = [];
        this.listDisciples = [];
        this.autocompleteItems = [];
        this.zone = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"]({ enableLongStackTrace: true });
        this.user = navParams.get('user');
        this.getListTypes();
        this.getListDisciples();
        platform.registerBackButtonAction(function () {
            navCtrl.pop();
        });
    }
    FormationaddPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad FormationaddPage');
    };
    FormationaddPage.prototype.retour = function () {
        this.navCtrl.pop();
    };
    FormationaddPage.prototype.selectSearchResult = function (item) {
        console.log(JSON.stringify(item));
        this.address = item.description;
    };
    FormationaddPage.prototype.updateSearchResults = function () {
        var _this = this;
        console.log("Typing");
        if (this.address == '') {
            this.autocompleteItems = [];
            return;
        }
        this.GoogleAutocomplete.getPlacePredictions({ input: this.address }, function (predictions, status) {
            if (predictions != null) {
                _this.autocompleteItems = [];
                _this.zone.run(function () {
                    predictions.forEach(function (prediction) {
                        _this.autocompleteItems.push(prediction);
                    });
                });
            }
            console.log(_this.autocompleteItems);
        });
    };
    FormationaddPage.prototype.send = function () {
        var _this = this;
        this.load = 1;
        if (this.mail_content != '' && this.mail_object != '') {
            var formation = "<br>E-mail d'utilisateur : " + this.user.mail + "<br>" +
                "ID d'utilisateur : " + (this.user.id_User != null ? this.user.id_User : this.user.id) + "<br>" +
                "Objet du mail : " + this.mail_object + "<br>" +
                "Centre de la formation : " + this.centre_de_formation + "<br>" +
                "Type : " + this.selectedType.name + "<br>" +
                "Discipline : " + this.selectedDisple.name + "<br>" +
                "Contenu du mail : " + this.mail_content + "<br>" +
                "Lien : " + this.lien + "<br>" +
                "Téléphone : " + this.phone + "<br>";
            this.http.post(this.globals.variables.urls.reqAddForm, {
                "user_id": this.user.id_User != null ? this.user.id_User : this.user.id,
                "frm": formation,
                "centre": "" + this.centre_de_formation,
                "address": this.address
            }, {})
                .then(function (data) {
                _this.load = 0;
                var res = JSON.parse(data.data);
                if (res.status == 'demande-ok') {
                    _this.toast.show("Votre demande a été envoyée !", '3000', 'bottom')
                        .subscribe(function (toast) {
                        console.log(toast);
                    });
                }
                else {
                    _this.toast.show("Une erreur c'est produit lors de l'envoi de votre demande !", '3000', 'center')
                        .subscribe(function (toast) {
                        console.log(toast);
                    });
                }
                console.log(JSON.stringify(data.data));
                _this.navCtrl.pop();
            }, function (error) {
                _this.load = 0;
                _this.toast.show("Une erreur c'est produit lors de l'envoi de votre demande !", '3000', 'center')
                    .subscribe(function (toast) {
                    console.log(toast);
                });
                console.log(JSON.stringify(error));
                _this.navCtrl.pop();
            });
        }
        else {
            this.load = 0;
            var alert_1 = this.alertCtrl.create({
                title: 'Information',
                subTitle: 'Le contenu ne peut pas être vide',
                buttons: ['Ok']
            });
            alert_1.present();
        }
    };
    FormationaddPage.prototype.ChooseType = function () {
        var _this = this;
        var filter = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_5__faqfilter_faqfilter__["a" /* FaqfilterPage */], {
            user: this.user,
            theme: this.listTypes,
            title: "Types de formation",
            selectBefore: this.selectedType
        });
        filter.onDidDismiss(function (data) {
            if (data.id != '' && data.id != 'retour' && data.id != 'all') {
                _this.selectedType = data;
                console.log("Selected theme :");
                console.log(JSON.stringify(_this.selectedType));
            }
            else {
                //this.selectedTheme = {};
            }
        });
        filter.present();
    };
    FormationaddPage.prototype.ChooseDisple = function () {
        var _this = this;
        var filter = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_5__faqfilter_faqfilter__["a" /* FaqfilterPage */], {
            user: this.user,
            theme: this.listDisciples,
            title: "Catégories",
            selectBefore: this.selectedDisple
        });
        filter.onDidDismiss(function (data) {
            if (data.id != '' && data.id != 'retour' && data.id != 'all') {
                _this.selectedDisple = data;
                console.log("Selected theme :");
                console.log(JSON.stringify(_this.selectedDisple));
            }
            else {
                //this.selectedTheme = {};
            }
        });
        filter.present();
    };
    FormationaddPage.prototype.getListTypes = function () {
        var _this = this;
        //document.getElementById('load').style.display = 'inline';
        this.http.post(this.globals.variables.urls.listTypesFormat, {}, {})
            .then(function (data) {
            _this.listTypes = JSON.parse(data.data);
            _this.load = 0;
        }, function (error) {
            _this.load = 0;
            console.log(JSON.stringify(error));
        });
    };
    FormationaddPage.prototype.getListDisciples = function () {
        var _this = this;
        //document.getElementById('load').style.display = 'inline';
        this.http.post(this.globals.variables.urls.listFormatiosCat, {}, {})
            .then(function (data) {
            _this.listDisciples = JSON.parse(data.data);
            _this.load = 0;
        }, function (error) {
            _this.load = 0;
            console.log(JSON.stringify(error));
        });
    };
    FormationaddPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-formationadd',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/formationadd/formationadd.html"*/'<ion-content class="container">\n\n  <div ion-fixed class="load-ctn" id="load" *ngIf="load == 1">\n    <img class="load-img" src="../../assets/icon/Spinner-load.svg" />\n  </div>\n\n  <ion-row ion-fixed class="header">\n    <ion-col (click)="retour();">\n      <div>\n        <span class="back-lab">\n          <img class="back-icon" src="../../assets/icon/back-117bcf.svg">\n          <span class="back-text">Retour</span>\n        </span>\n      </div>\n\n    </ion-col>\n  </ion-row>\n\n  <div class="to100height">\n\n    <ion-row class="form-ctn">\n      <ion-col>\n\n        <ion-row *ngIf="selectedType.id == null || selectedType.id == \'\'" class="img-ctn" (click)="ChooseType()">\n          <ion-label class="theme-txt">Types</ion-label>\n        </ion-row>\n\n        <ion-row *ngIf="selectedType.id != null && selectedType.id != \'\'" class="img-ctn" (click)="ChooseType()">\n          <ion-label class="theme-txt">{{selectedType.name}}</ion-label>\n          <img class="check-icon" src="../../assets/imgs/da_image/Group.png" />\n        </ion-row>\n\n        <ion-row *ngIf="selectedDisple.id == null || selectedDisple.id == \'\'" class="img-ctn" (click)="ChooseDisple()">\n          <ion-label class="theme-txt">Catégories</ion-label>\n        </ion-row>\n\n        <ion-row *ngIf="selectedDisple.id != null && selectedDisple.id != \'\'" class="img-ctn" (click)="ChooseDisple()">\n          <ion-label class="theme-txt">{{selectedDisple.name}}</ion-label>\n          <img class="check-icon" src="../../assets/imgs/da_image/Group.png" />\n        </ion-row>\n\n        <ion-row>\n          <ion-input class="centre-form" [(ngModel)]="centre_de_formation" placeholder="Centre de formation"></ion-input>\n        </ion-row>\n\n        <ion-row>\n          <ion-input class="centre-form" [(ngModel)]="address" placeholder="Lieu de formation" (input)="updateSearchResults()"></ion-input>\n        </ion-row>\n\n        <ion-list [hidden]="autocompleteItems.length == 0" class="places">\n          <ion-item *ngFor="let item of autocompleteItems" tappable (click)="selectSearchResult(item)">\n            {{ item.description }}\n          </ion-item>\n        </ion-list>\n\n        <ion-row>\n          <ion-input class="centre-form" [(ngModel)]="lien" placeholder="Lien"></ion-input>\n        </ion-row>\n        \n        <ion-row>\n          <ion-input class="centre-form" [(ngModel)]="phone" placeholder="Téléphone"></ion-input>\n        </ion-row>\n\n        <ion-row>\n          <span class="object-lab">\n            Objet\n          </span>\n          <ion-input class="mail-object" [(ngModel)]="mail_object"></ion-input>\n        </ion-row>\n\n        <ion-row>\n          <ion-textarea class="mail-content" [(ngModel)]="mail_content" placeholder="Contenu de votre formation"></ion-textarea>\n        </ion-row>\n\n        <ion-row class="btn-bottom-ctn">\n          <button ion-button round class="btn-gradient-round" (click)="send();">Envoyer</button>\n        </ion-row>\n      </ion-col>\n    </ion-row>\n  </div>\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/formationadd/formationadd.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_3__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_toast__["a" /* Toast */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */]])
    ], FormationaddPage);
    return FormationaddPage;
}());

//# sourceMappingURL=formationadd.js.map

/***/ }),

/***/ 161:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MentlPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the MentlPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var MentlPage = /** @class */ (function () {
    function MentlPage(navCtrl, navParams, viewCtrl, platform) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.viewCtrl = viewCtrl;
        this.platform = platform;
        platform.registerBackButtonAction(function () {
            viewCtrl.dismiss();
        });
    }
    MentlPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad MentlPage');
    };
    MentlPage.prototype.precedent = function () {
        this.viewCtrl.dismiss({
            state: "oui"
        });
    };
    MentlPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-mentl',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/mentl/mentl.html"*/'<ion-content>\n\n  <div ion-fixed class="load-ctn" id="load" *ngIf="load == 1">\n    <img class="load-img" src="../../assets/icon/Spinner-load.svg" />\n  </div>\n\n  <ion-row ion-fixed class="top-gc">\n    <ion-col>\n      <img class="back-icon" (click)="precedent();" src="../../assets/icon/back-117bcf.svg">\n    </ion-col>\n\n    <ion-col>\n      <ion-label class="gc">\n        MENTIONS LEGALES\n      </ion-label>\n    </ion-col>\n\n    <ion-col></ion-col>\n  </ion-row>\n\n  <ion-grid class="container">\n\n    <ion-row class="gc-ctn">\n\n      <ion-col>\n        <ion-row>\n          <div class="gc-label">\n            Merci de lire avec attention les différentes modalités d’utilisation du présent site avant d’y parcourir\n            ses pages. En vous connectant sur cette application, vous acceptez sans réserves les présentes modalités.\n            Aussi, conformément à l’article n°6 de la Loi n°2004-575 du 21 Juin 2004 pour la confiance dans l’économie\n            numérique, les responsables du présent application mobile sont :\n            <br>\n            <br>\n            Editeur du Site :\n            <br>\n            <br>\n            Dentart\n            Numéro de SIRET : 83860293600018\n            Responsable editorial : CB\n            25 RUE DE MONTMORENCY GROSLAY 95410\n            Téléphone :+33698885848\n            Email : contact@dentart.fr\n            Site Web : www.dentart.fr\n            Hébergement :\n            <br>\n            <br>\n            Hébergeur : OVH\n            2 rue Kellermann – 59100 Roubaix – France\n            Site Web : www.ovh.com\n            Développement :\n            <br>\n            <br>\n            Foxiweb\n            Adresse : 4 avenue berthelot PONTOISE 95300\n            Site Web : www.foxiweb.fr\n            Conditions d’utilisation :\n            <br>\n            <br>\n            cette application est proposé en différents langages web (HTML, HTML5, Javascript, CSS, etc…) pour un\n            meilleur confort d’utilisation et un graphisme plus agréable, nous vous recommandons de recourir à des\n            navigateurs modernes comme Internet explorer, Safari, Firefox, Google Chrome, etc…\n            <br>\n            <br>\n            Dentart met en œuvre tous les moyens dont elle dispose, pour assurer une information fiable et une mise à\n            jour fiable de ses sites internet. Toutefois, des erreurs ou omissions peuvent survenir. L’internaute devra\n            donc s’assurer de l’exactitude des informations auprès de , et signaler toutes modifications du site qu’il\n            jugerait utile. n’est en aucun cas responsable de l’utilisation faite de ces informations, et de tout\n            préjudice direct ou indirect pouvant en découler.\n            <br>\n            <br>\n            Cookies : L\'application peut-être amené à vous demander l’acceptation des cookies pour des besoins de\n            statistiques et d’affichage. Un cookies est une information déposée sur votre disque dur par le serveur du\n            site que vous visitez. Il contient plusieurs données qui sont stockées sur votre ordinateur dans un simple\n            fichier texte auquel un serveur accède pour lire et enregistrer des informations . Certaines parties de\n            cette application ne peuvent être fonctionnelles sans l’acceptation de cookies.\n            <br>\n            <br>\n            Liens hypertextes : Les sites internet de peuvent offrir des liens vers d’autres sites internet ou d’autres\n            ressources disponibles sur Internet. Dentart ne dispose d’aucun moyen pour contrôler les sites en connexion\n            avec ses sites internet. ne répond pas de la disponibilité de tels sites et sources externes, ni ne la\n            garantit. Elle ne peut être tenue pour responsable de tout dommage, de quelque nature que ce soit,\n            résultant du contenu de ces sites ou sources externes, et notamment des informations, produits ou services\n            qu’ils proposent, ou de tout usage qui peut être fait de ces éléments. Les risques liés à cette utilisation\n            incombent pleinement à l’internaute, qui doit se conformer à leurs conditions d’utilisation.\n            <br>\n            <br>\n            Les utilisateurs, les abonnés et les visiteurs des sites internet de ne peuvent mettre en place un\n            hyperlien en direction de cette application sans l’autorisation expresse et préalable de Dentart.\n            <br>\n            <br>\n            Dans l’hypothèse où un utilisateur ou visiteur souhaiterait mettre en place un hyperlien en direction d’un\n            des sites internet de Dentart, il lui appartiendra d’adresser un email accessible sur le site afin de\n            formuler sa demande de mise en place d’un hyperlien. Dentart se réserve le droit d’accepter ou de refuser\n            un hyperlien sans avoir à en justifier sa décision.\n            Services fournis :\n            <br>\n            <br>\n            L’ensemble des activités de la société ainsi que ses informations sont présentés sur notre application.\n            <br>\n            <br>\n            Dentart s’efforce de fournir sur l\'application des informations aussi précises que possible. les\n            renseignements figurant sur l\'application ne sont pas exhaustifs et les photos non contractuelles. Ils sont\n            donnés sous réserve de modifications ayant été apportées depuis leur mise en ligne. Par ailleurs, tous les\n            informations indiquées sur l\'application sont données à titre indicatif, et sont susceptibles de changer ou\n            d’évoluer sans préavis.\n            <br>\n            <br>\n            Limitation contractuelles sur les données :\n            <br>\n            <br>\n            Les informations contenues sur cette application sont aussi précises que possible et le site remis à jour à\n            différentes périodes de l’année, mais peut toutefois contenir des inexactitudes ou des omissions. Si vous\n            constatez une lacune, erreur ou ce qui parait être un dysfonctionnement, merci de bien vouloir le signaler\n            par email, à l’adresse contact@dentart.fr, en décrivant le problème de la manière la plus précise possible\n            (page posant problème, type d’ordinateur et de navigateur utilisé, …).\n            <br>\n            <br>\n            Tout contenu téléchargé se fait aux risques et périls de l’utilisateur et sous sa seule responsabilité. En\n            conséquence, ne saurait être tenu responsable d’un quelconque dommage subi par l’ordinateur de\n            l’utilisateur ou d’une quelconque perte de données consécutives au téléchargement. De plus, l’utilisateur\n            du site s’engage à accéder au site en utilisant un matériel récent, ne contenant pas de virus et avec un\n            navigateur de dernière génération mis-à-jour\n            <br>\n            <br>\n            Les liens hypertextes mis en place dans le cadre du présent site internet en direction d’autres ressources\n            présentes sur le réseau Internet ne sauraient engager la responsabilité de Dentart.\n            Propriété intellectuelle :\n            <br><br>\n            Tout le contenu du présent sur l\'application, incluant, de façon non limitative, les graphismes, images,\n            textes, vidéos, animations, sons, logos, gifs et icônes ainsi que leur mise en forme sont la propriété\n            exclusive de la société à l’exception des marques, logos ou contenus appartenant à d’autres sociétés\n            partenaires ou auteurs.\n            <br><br>\n            Toute reproduction, distribution, modification, adaptation, retransmission ou publication, même partielle,\n            de ces différents éléments est strictement interdite sans l’accord exprès par écrit de Dentart. Cette\n            représentation ou reproduction, par quelque procédé que ce soit, constitue une contrefaçon sanctionnée par\n            les articles L.335-2 et suivants du Code de la propriété intellectuelle. Le non-respect de cette\n            interdiction constitue une contrefaçon pouvant engager la responsabilité civile et pénale du contrefacteur.\n            En outre, les propriétaires des Contenus copiés pourraient intenter une action en justice à votre encontre.\n            Déclaration à la CNIL :\n            <br><br>\n            Conformément à la loi 78-17 du 6 janvier 1978 (modifiée par la loi 2004-801 du 6 août 2004 relative à la\n            protection des personnes physiques à l’égard des traitements de données à caractère personnel) relative à\n            l’informatique, aux fichiers et aux libertés, cette application n’a pas fait l’objet d’une déclaration\n            auprès de la Commission nationale de l’informatique et des libertés (www.cnil.fr).\n            Litiges :\n            <br><br>\n            Les présentes conditions de l\'application sont régies par les lois françaises et toute contestation ou\n            litiges qui pourraient naître de l’interprétation ou de l’exécution de celles-ci seront de la compétence\n            exclusive des tribunaux dont dépend le siège social de la société. La langue de référence, pour le\n            règlement de contentieux éventuels, est le français.\n            Données personnelles :\n            <br><br>\n            De manière générale, vous n’êtes pas tenu de nous communiquer vos données personnelles lorsque vous visitez\n            notre application mobile.\n            <br><br>\n            Cependant, ce principe comporte certaines exceptions. En effet, pour certains services proposés par notre\n            site, vous pouvez être amenés à nous communiquer certaines données telles que : votre nom, votre fonction,\n            le nom de votre société, votre adresse électronique, et votre numéro de téléphone. Tel est le cas lorsque\n            vous remplissez le formulaire qui vous est proposé en ligne, dans la rubrique « contact ». Dans tous les\n            cas, vous pouvez refuser de fournir vos données personnelles. Dans ce cas, vous ne pourrez pas utiliser les\n            services du site, notamment celui de solliciter des renseignements sur notre société, ou de recevoir les\n            lettres d’information.\n            <br><br>\n            Enfin, nous pouvons collecter de manière automatique certaines informations vous concernant lors d’une\n            simple navigation sur notre site Internet, notamment : des informations concernant l’utilisation de notre\n            site, comme les zones que vous visitez et les services auxquels vous accédez, votre adresse IP, le type de\n            votre navigateur, vos temps d’accès. De telles informations sont utilisées exclusivement à des fins de\n            statistiques internes, de manière à améliorer la qualité des services qui vous sont proposés. Les bases de\n            données sont protégées par les dispositions de la loi du 1er juillet 1998 transposant la directive 96/9 du\n            11 mars 1996 relative à la protection juridique des bases de données.\n            <br><br>\n          </div>\n        </ion-row>\n\n      </ion-col>\n\n\n    </ion-row>\n\n    <!-- <ion-row>\n      <button ion-button round class="btn-blue-gradient" (click)="precedent();">Accepter</button>\n    </ion-row> -->\n\n  </ion-grid>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/mentl/mentl.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */]])
    ], MentlPage);
    return MentlPage;
}());

//# sourceMappingURL=mentl.js.map

/***/ }),

/***/ 162:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LogoutpopupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the LogoutpopupPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var LogoutpopupPage = /** @class */ (function () {
    function LogoutpopupPage(navCtrl, navParams, viewCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.viewCtrl = viewCtrl;
    }
    LogoutpopupPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad LogoutpopupPage');
    };
    LogoutpopupPage.prototype.ouiClick = function () {
        this.viewCtrl.dismiss({
            state: 'oui'
        });
    };
    LogoutpopupPage.prototype.nonClick = function () {
        this.viewCtrl.dismiss({
            state: 'non'
        });
    };
    LogoutpopupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-logoutpopup',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/logoutpopup/logoutpopup.html"*/'<ion-content class="container">\n\n  <ion-grid class="ctn-rec">\n    <ion-row class="flex-row">\n      <ion-col>\n        <ion-row>\n          <ion-col>\n            <img class="alert-icon" src="../../assets/icon/warning-red.svg" />\n            <img class="close-icon" src="../../assets/icon/letter-x.svg" (click)="nonClick();" />\n          </ion-col>\n        </ion-row>\n        <ion-row>\n          <ion-col>\n            <ion-label class="ws-norm-grey">\n              Vous êtes sur le point de quitter l’application ?\n            </ion-label>\n            <div class="cfrm-text">Voulez-vous vraiment quitter ?</div>\n          </ion-col>\n        </ion-row>\n        <ion-row>\n          <ion-col size="6" (click)="ouiClick();">\n            <button ion-button round class="btn-blue-gradient">OUI</button>\n          </ion-col>\n          <ion-col size="6" (click)="nonClick();">\n            <button ion-button round class="btn-download">NON</button>\n          </ion-col>\n        </ion-row>\n      </ion-col>\n    </ion-row>\n\n  </ion-grid>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/logoutpopup/logoutpopup.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */]])
    ], LogoutpopupPage);
    return LogoutpopupPage;
}());

//# sourceMappingURL=logoutpopup.js.map

/***/ }),

/***/ 163:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ContactPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_call_number__ = __webpack_require__(76);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



/**
 * Generated class for the ContactPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ContactPage = /** @class */ (function () {
    function ContactPage(navCtrl, navParams, viewCtrl, callNumber) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.viewCtrl = viewCtrl;
        this.callNumber = callNumber;
        this.ourPhone = "+33698885848";
    }
    ContactPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ContactPage');
    };
    ContactPage.prototype.callAdmin = function () {
        this.callNumber.callNumber(this.ourPhone, true);
    };
    ContactPage.prototype.okClick = function () {
        this.viewCtrl.dismiss();
    };
    ContactPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-contact',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/contact/contact.html"*/'<ion-content class="transp">\n\n  <ion-row ion-fixed class="fixed-ctn">\n    <div class="to-center">\n      <div class="icon-ctn">\n          <img class="contact-icon" src="../../assets/icon/contacts-book-outline.svg" />\n      </div>\n      <div class="pop-up-title">\n        \n        <div class="text-ttl"> Information !</div>\n      </div>\n      <div class="text-as-addr">contact@dentart.fr</div>\n      <div class="text-as-addr" (click)="callAdmin()">+33698885848</div>\n      <div class="ok-btn-ctn">\n        <div class="okbtn" (click)="okClick()">Ok</div>\n      </div>\n    </div>\n  </ion-row>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/contact/contact.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_call_number__["a" /* CallNumber */]])
    ], ContactPage);
    return ContactPage;
}());

//# sourceMappingURL=contact.js.map

/***/ }),

/***/ 164:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AuthloadingPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_home__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_storage__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__dentart_dentart__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_local_notifications__ = __webpack_require__(65);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ionic_native_background_mode__ = __webpack_require__(125);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ionic_native_push__ = __webpack_require__(81);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};










var AuthloadingPage = /** @class */ (function () {
    function AuthloadingPage(navCtrl, navParams, storage, events, http, globals, localNotifications, backgroundMode, push, platform) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.storage = storage;
        this.events = events;
        this.http = http;
        this.globals = globals;
        this.localNotifications = localNotifications;
        this.backgroundMode = backgroundMode;
        this.push = push;
        this.platform = platform;
        this.user = null;
        this.load = 0;
        // user: any = {}
        this.listForms = [];
        this.listNewNotifs = [];
        this.listOldNotifs = [];
        this.notifOffset = 0;
        this.notifNewPostOffset = 0;
        this.getNotifInterval = null;
    }
    AuthloadingPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AuthloadingPage');
        this.getSession();
        this.getCertText();
    };
    AuthloadingPage.prototype.getCertText = function () {
        var _this = this;
        this.platform.ready().then(function (ready) {
            _this.http.get(_this.globals.variables.urls.getCertText, {}, {})
                .then(function (data) {
                console.log("Certificate text :");
                // console.log(JSON.stringify(data.data))
                console.log(data.data);
                console.log(JSON.parse(data.data).text_after_cnx);
                _this.storage.set("cert_text", JSON.parse(data.data).text_after_cnx)
                    .then(function (data) {
                    console.log("Cert text saved to storage : ");
                    console.log(JSON.stringify(data));
                }, function (error) {
                    console.log("Error set cert text to storage : ");
                    console.log(JSON.stringify(error));
                });
            }, function (error) {
                console.log("Error getting certText : ");
                console.log(JSON.stringify(error));
            });
        }, function (error) {
            console.log("Platform error");
        });
    };
    AuthloadingPage.prototype.getSession = function () {
        var _this = this;
        this.storage.get('user')
            .then(function (data) {
            console.log("Got user");
            console.log(JSON.stringify(data));
            _this.user = data;
            if (_this.user != null) {
                var user_id = (_this.user.id_User != null ? _this.user.id_User : _this.user.id);
                _this.events.publish('user:logedIn', _this.user);
                console.log(JSON.stringify(JSON.parse(_this.user.full_adresse).place_id));
                console.log("User id :" + user_id);
                var home = __WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */];
                _this.navCtrl.setRoot(home, {
                    user: _this.user
                }, {
                    animate: true,
                    animation: 'ios-transition',
                    direction: 'forward',
                    duration: 500
                });
                _this.updateUserInfo(user_id);
                _this.backgroundMode.enable();
            }
            else {
                _this.backgroundMode.disable();
                _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_4__dentart_dentart__["a" /* DentartPage */], {}, {
                    animate: true,
                    animation: 'ios-transition',
                    direction: 'forward',
                    duration: 500
                });
            }
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    AuthloadingPage.prototype.getListNotifications = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var user_id;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        //listFormations
                        this.load = 1;
                        user_id = (this.user.id_User != null ? this.user.id_User : this.user.id);
                        return [4 /*yield*/, this.http.get(this.globals.variables.urls.getNotifications, {
                                "user_id": "" + user_id,
                                "limit": "20",
                                "offset": "" + this.notifOffset
                            }, {})
                                .then(function (data) {
                                var res = JSON.parse(data.data);
                                var notifs = [];
                                if (res.length <= 0) {
                                    _this.load = 0;
                                }
                                else {
                                    var _loop_1 = function (f) {
                                        _this.http.get(_this.globals.variables.urls.getUserInfo, {
                                            "user_id": res[f].user_id
                                        }, {})
                                            .then(function (data) {
                                            var com_author = JSON.parse(data.data).info_utilisateur;
                                            console.log("Com_User_Author");
                                            console.log(JSON.stringify(com_author));
                                            res[f].com_author = com_author;
                                            if (res[f].state == 0) {
                                                var notif = {
                                                    id: res[f].id,
                                                    text: res[f].message,
                                                    sound: 'assets/beep/beep.mp3',
                                                    vibrate: true,
                                                    data: res[f],
                                                    foreground: true
                                                };
                                                notifs.push(notif);
                                                _this.localNotifications.schedule(notifs);
                                                _this.listNewNotifs.push(res[f]);
                                                _this.updateNotifState(res[f], "3");
                                                console.log("List des formations");
                                            }
                                            else {
                                                _this.listOldNotifs.push(res[f]);
                                            }
                                            _this.listForms.push(res[f]);
                                            // if (res[f].state == 0) {
                                            //   this.localNotifications.schedule(notifs);
                                            // }
                                            // this.updateNotifState(res[f], "3")
                                            if (f == res.length - 1) {
                                                _this.load = 0;
                                            }
                                        });
                                    };
                                    for (var f = 0; f < res.length; f++) {
                                        _loop_1(f);
                                    }
                                    _this.notifOffset += 1;
                                }
                            }, function (error) {
                                console.log(JSON.stringify(error));
                                _this.load = 0;
                            })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    AuthloadingPage.prototype.getListNotificationsNewPost = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: 
                    // this.http.get(this.globals.variables.urls.getNotificationsNewPost,
                    return [4 /*yield*/, this.http.get(this.globals.variables.urls.getNotificationsNewPost, {
                            "user_id": "" + (this.user.id_User != null ? this.user.id_User : this.user.id),
                            "limit": "20",
                            "offset": "" + this.notifNewPostOffset
                        }, {})
                            .then(function (data) {
                            var res = JSON.parse(data.data);
                            console.log("Resultat list notif new post");
                            console.log(JSON.stringify(res));
                            var notifs = [];
                            if (res.length <= 0) {
                                _this.load = 0;
                            }
                            else {
                                var _loop_2 = function (f) {
                                    _this.http.get(_this.globals.variables.urls.getUserInfo, {
                                        "user_id": res[f].user_id
                                    }, {})
                                        .then(function (data) {
                                        var com_author = JSON.parse(data.data).info_utilisateur;
                                        console.log("Com_User_Author");
                                        console.log(JSON.stringify(com_author));
                                        res[f].com_author = com_author;
                                        if (res[f].state == 0) {
                                            var notif = {
                                                id: res[f].id,
                                                text: res[f].message,
                                                sound: 'assets/beep/beep.mp3',
                                                vibrate: true,
                                                data: res[f],
                                                foreground: true
                                            };
                                            notifs.push(notif);
                                            // this.localNotifications.schedule(notifs);
                                            console.log("List des notifs");
                                            _this.listNewNotifs.push(res[f]);
                                            _this.localNotifications.schedule(notifs);
                                            _this.updateNotifState(res[f], "3");
                                        }
                                        else {
                                            _this.listOldNotifs.push(res[f]);
                                        }
                                        _this.listForms.push(res[f]);
                                        // if (res[f].state == 0)
                                        // this.updateNotifState(res[f], "3")
                                        if (f == res.length - 1) {
                                            _this.load = 0;
                                        }
                                    });
                                };
                                for (var f = 0; f < res.length; f++) {
                                    _loop_2(f);
                                }
                                _this.notifNewPostOffset += 1;
                            }
                        }, function (error) {
                            console.log(JSON.stringify(error));
                            _this.load = 0;
                        })];
                    case 1:
                        // this.http.get(this.globals.variables.urls.getNotificationsNewPost,
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    AuthloadingPage.prototype.getListNewNotifications = function () {
        var _this = this;
        //listFormations
        this.http.get(this.globals.variables.urls.getNotifications, {
            "user_id": "" + (this.user.id_User != null ? this.user.id_User : this.user.id),
            "limit": "10"
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log("List des nouveau notifications");
            var notifs = [];
            var _loop_3 = function (g) {
                for (var k = 0; k < _this.listForms.length; k++) {
                    if (res[g].notif_id == _this.listForms[k].notif_id) {
                        break;
                    }
                    else if (res[g].notif_id != _this.listForms[k].notif_id && k == (_this.listForms.length - 1)) {
                        _this.listForms.splice(0, 0, res[g]);
                        _this.http.get(_this.globals.variables.urls.getUserInfo, {
                            "user_id": res[g].user_id
                        }, {})
                            .then(function (data) {
                            var com_author = JSON.parse(data.data).info_utilisateur;
                            console.log("Com_User_Author");
                            console.log(JSON.stringify(com_author));
                            res[g].com_author = com_author;
                            var notif = {
                                id: res[g].id,
                                text: res[g].message,
                                sound: 'assets/beep/beep.mp3',
                                vibrate: true,
                                data: res[g],
                                foreground: true
                            };
                            notifs.push(notif);
                            _this.localNotifications.schedule(notifs);
                            _this.listForms.push(res[g]);
                            if (res[g].state == 0)
                                _this.updateNotifState(res[g], "3");
                        });
                    }
                }
            };
            for (var g = 0; g < res.length; g++) {
                _loop_3(g);
            }
            // this.localNotifications.schedule(notifs);
            // setTimeout(() => {
            //   this.getListNewNotifications()
            // }, 5000);
        }, function (error) {
            console.log(JSON.stringify(error));
            //this.load = 0;
        });
    };
    AuthloadingPage.prototype.updateNotifState = function (notif, state) {
        this.http.get(this.globals.variables.urls.updateNotifState, {
            "notification_id": notif.notif_id,
            "state": state
        }, {})
            .then(function (data) {
            // notif.state = state;
            console.log("State of notif updated");
        }, function (error) {
            console.log("Error updating notif state");
        });
    };
    AuthloadingPage.prototype.updateUserInfo = function (user_id) {
        var _this = this;
        this.http.get(this.globals.variables.urls.getUserInfo, {
            "user_id": "" + user_id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log("User info to update");
            console.log(JSON.stringify(res));
            _this.saveSession(res.info_utilisateur);
        }, function (error) {
            console.log("Error updating user info");
            console.log(JSON.stringify(error));
            _this.saveSession(_this.user);
        });
    };
    AuthloadingPage.prototype.saveSession = function (user1) {
        user1.avatarB64 = this.user.avatarB64;
        this.storage.set('user', user1)
            .then(function (data) {
            //
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    AuthloadingPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-authloading',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/authloading/authloading.html"*/'<ion-content>\n\n  <div class="container">\n    <ion-spinner class="loading-custom" name="crescent" color="vert_logo"></ion-spinner>\n  </div>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/authloading/authloading.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["f" /* Events */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_6__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_native_local_notifications__["a" /* LocalNotifications */],
            __WEBPACK_IMPORTED_MODULE_8__ionic_native_background_mode__["a" /* BackgroundMode */],
            __WEBPACK_IMPORTED_MODULE_9__ionic_native_push__["a" /* Push */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */]])
    ], AuthloadingPage);
    return AuthloadingPage;
}());

//# sourceMappingURL=authloading.js.map

/***/ }),

/***/ 174:
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncatched exception popping up in devtools
	return Promise.resolve().then(function() {
		throw new Error("Cannot find module '" + req + "'.");
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = 174;

/***/ }),

/***/ 18:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AnnoncesPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__annonce_details_annonce_details__ = __webpack_require__(46);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__home_home__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__menu_menu__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__dentart_dentart__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__annonce_cat_annonce_cat__ = __webpack_require__(90);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__formations_formations__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__a_savoir_a_savoir__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__uprofil_uprofil__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__notifications_notifications__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__ionic_native_toast__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__ionic_native_geolocation__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__ionic_native_diagnostic__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__mesannonces_mesannonces__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__ionic_storage__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__annonce_add2_annonce_add2__ = __webpack_require__(55);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__ionic_native_social_sharing__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__sharemodal_sharemodal__ = __webpack_require__(38);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};





















var AnnoncesPage = /** @class */ (function () {
    function AnnoncesPage(navCtrl, navParams, modalCtrl, http, globals, events, toast, alertCtrl, geolocation, diagnostic, platform, storage, socialSharing, receiveVar) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.modalCtrl = modalCtrl;
        this.http = http;
        this.globals = globals;
        this.events = events;
        this.toast = toast;
        this.alertCtrl = alertCtrl;
        this.geolocation = geolocation;
        this.diagnostic = diagnostic;
        this.platform = platform;
        this.storage = storage;
        this.socialSharing = socialSharing;
        this.receiveVar = receiveVar;
        this.load = 1;
        this.inwait = 0;
        this.paging = 0;
        this.displayedPopoverID = "";
        this.user = {};
        this.user_id = -1;
        this.listCat = [];
        this.listAds = [];
        this.listAdsSorted = [];
        this.selectedCat = {};
        this.selectedTri = {};
        this.userPos = {};
        this.pertinence = 0;
        this.proximite = 0;
        this.markers = [];
        this.typeDate = "DESC";
        this.refDate = {
            id: 10,
            slug: "datedesc",
            name: "Date décroissante"
        };
        this.nbProxAds = 0;
        this.isReloading = false;
        this.isInfiteScroll = false;
        this.nAdd = {};
        this.user = navParams.get('user');
        this.user_id = this.user.id_User != null ? this.user.id_User : this.user.id;
        this.getUserPoint();
        console.log(JSON.stringify(this.user));
        this.getListCat(null);
        platform.registerBackButtonAction(function () {
            _this.goBack();
        });
        this.receiveVar.subscribe('added', function (data) {
            console.log("**************** RECEIVE VAR ***************");
            _this.inwait = 0;
            if (data !== null) {
                _this.listAdsSorted.splice(0, 0, data);
            }
        });
        this.receiveVar.subscribe('notadded', function (data) {
            _this.inwait = 0;
        });
        this.receiveVar.subscribe('toremove', function (data) {
            _this.inwait = 0;
        });
    }
    AnnoncesPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        this.diagnostic.isGpsLocationAvailable()
            .then(function (data) {
            console.log("GPS is available...=====");
            console.log(JSON.stringify(data));
            if (data == false) {
                _this.diagnostic.requestLocationAuthorization()
                    .then(function (resp) {
                    console.log("Demande d'auth GPS response");
                    console.log(JSON.stringify(resp));
                    if (resp == "GRANTED") {
                        _this.getUserPosition();
                        _this.watchMyPosition();
                    }
                })
                    .catch(function (error) {
                    console.log("Erreur de demande d'auth GPS");
                });
            }
            else {
                _this.getUserPosition();
                _this.watchMyPosition();
            }
        })
            .catch(function (error) {
            console.log(JSON.stringify(error));
            _this.toast.show("Vous n'avez pas de GPS", "2000", "bottom")
                .subscribe(function (t) {
                console.log(JSON.stringify(t));
            });
        });
        console.log('ionViewDidLoad AnnoncesPage');
        // this.loadMap();
        this.getListAds(null, false);
        this.countProxAd();
    };
    AnnoncesPage.prototype.ionViewWillEnter = function () {
        var _this = this;
        this.platform.registerBackButtonAction(function () {
            _this.navCtrl.pop();
        });
    };
    AnnoncesPage.prototype.ionViewDidEnter = function () {
        var _this = this;
        this.platform.registerBackButtonAction(function () {
            _this.navCtrl.pop();
        });
    };
    AnnoncesPage.prototype.rad = function (x) {
        return x * Math.PI / 180;
    };
    ;
    AnnoncesPage.prototype.getDistance = function (p1, p2) {
        var R = 6378137; // Earth’s mean radius in meter
        var dLat = this.rad(p2.lat - p1.lat);
        var dLong = this.rad(p2.lng - p1.lng);
        var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
            Math.cos(this.rad(p1.lat)) * Math.cos(this.rad(p2.lat)) *
                Math.sin(dLong / 2) * Math.sin(dLong / 2);
        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
        var d = R * c;
        return d; // returns the distance in meter
    };
    ;
    AnnoncesPage.prototype.getUserPoint = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        console.log(this.user.address);
                        return [4 /*yield*/, this.http.get('https://maps.googleapis.com/maps/api/geocode/json?address=' + this.user.address + '&key=' + this.globals.variables.API_KEY, {}, {})
                                .then(function (data) {
                                console.log("User point retrived");
                                console.log(data.data);
                                var resy = JSON.parse(data.data).results[0];
                                _this.user.pointGeocode = resy != null ? resy.geometry.location : { lat: 0, lng: 0 };
                                console.log(JSON.stringify(_this.user.pointGeocode));
                            })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    AnnoncesPage.prototype.goBack = function () {
        this.navCtrl.pop();
    };
    AnnoncesPage.prototype.openMenu = function () {
        var _this = this;
        var menu = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_6__menu_menu__["a" /* MenuPage */], {
            user: this.user
        }, {
            enterAnimation: 'modal-translate-up-enter',
            leaveAnimation: 'modal-translate-up-leave'
        });
        menu.onDidDismiss(function (page) {
            _this.platform.registerBackButtonAction(function () {
                _this.navCtrl.pop();
            });
            if (page.title == "Partages") {
                var homePage = __WEBPACK_IMPORTED_MODULE_5__home_home__["a" /* HomePage */];
                _this.navCtrl.setRoot(homePage, {
                    user: _this.user
                }, {
                    animate: false
                });
            }
            else if (page.title == "profil") {
                var adPage = __WEBPACK_IMPORTED_MODULE_11__uprofil_uprofil__["a" /* UprofilPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "UprofilPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "UprofilPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(adPage, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "Annonces") {
                //
            }
            else if (page.title == "Formations") {
                var actuPage = __WEBPACK_IMPORTED_MODULE_9__formations_formations__["a" /* FormationsPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "FormationsPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "FormationsPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(actuPage, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "News") {
                var actuPage = __WEBPACK_IMPORTED_MODULE_10__a_savoir_a_savoir__["a" /* ASavoirPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "ASavoirPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "ASavoirPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(actuPage, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "Mes alertes") {
                var notif = __WEBPACK_IMPORTED_MODULE_12__notifications_notifications__["a" /* NotificationsPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "NotificationsPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "NotificationsPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(notif, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == 'mesannonces') {
                var notif = __WEBPACK_IMPORTED_MODULE_16__mesannonces_mesannonces__["a" /* MesannoncesPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "MesannoncesPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "MesannoncesPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(notif, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "deconnexion") {
                _this.events.publish('user:logedOut', _this.user);
                _this.load = 1;
                _this.storage.set('partages', null);
                _this.storage.set('user', null)
                    .then(function (data) {
                    // console.log(JSON.stringify(data));
                    _this.storage.clear();
                    setTimeout(function () {
                        _this.load = 0;
                        _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_7__dentart_dentart__["a" /* DentartPage */], {}, {
                            animate: true
                        });
                    }, 500);
                }, function (error) {
                    console.log(JSON.stringify(error));
                });
            }
        });
        menu.present();
    };
    AnnoncesPage.prototype.filter = function () {
        var _this = this;
        var filter = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_8__annonce_cat_annonce_cat__["a" /* AnnonceCatPage */], {
            user: this.user,
            listCat: this.listCat,
            title: "Filtres",
            selectBefore: this.selectedCat
        });
        filter.onDidDismiss(function (data) {
            _this.platform.registerBackButtonAction(function () {
                _this.navCtrl.pop();
            });
            if (data != null) {
                _this.load = 1;
                _this.selectedCat = data;
                if (_this.selectedCat.id == "retour") {
                }
                else if (_this.selectedCat.id == "") {
                    _this.listAds = [];
                    _this.listAdsSorted = [];
                    _this.paging = 0;
                    _this.getListAds(null, false);
                }
                else {
                    _this.selectedCat = data;
                    _this.listAds = [];
                    _this.listAdsSorted = [];
                    _this.paging = 0;
                    _this.getListAds(null, false);
                }
            }
        });
        filter.present();
    };
    AnnoncesPage.prototype.trier = function () {
        var _this = this;
        if (this.refDate.slug == "datedesc") {
            this.refDate = {
                id: 10,
                slug: "dateasc",
                name: "Date croissante"
            };
            this.typeDate = "ASC";
        }
        else {
            this.refDate = {
                id: 10,
                slug: "datedesc",
                name: "Date décroissante"
            };
            this.typeDate = "DESC";
        }
        var filter = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_8__annonce_cat_annonce_cat__["a" /* AnnonceCatPage */], {
            user: this.user,
            listCat: [
                {
                    id: 9,
                    slug: "dateasc",
                    name: "Date croissante"
                },
                {
                    id: 10,
                    slug: "datedesc",
                    name: "Date décroissante"
                },
                {
                    id: 11,
                    slug: "proximité",
                    name: "Proximité"
                },
                {
                    id: 12,
                    slug: "pertinences",
                    name: "Pertinences"
                }
            ],
            title: "Trier",
            selectBefore: this.selectedTri
        });
        filter.onDidDismiss(function (data) {
            _this.platform.registerBackButtonAction(function () {
                _this.goBack();
            });
            _this.load = 1;
            if (data != null) {
                _this.selectedTri = data;
                console.log("Selected tri :");
                // console.log(JSON.stringify(data));
                if (_this.selectedTri.id == "retour") {
                }
                else if (_this.selectedTri.id == "") {
                    _this.proximite = 0;
                    _this.pertinence = 0;
                    _this.listAds = [];
                    _this.listAdsSorted = [];
                    _this.paging = 0;
                    _this.getListAds(null, false);
                }
                else {
                    _this.selectedTri = data;
                    _this.sortFaQByTrier();
                }
            }
        });
        filter.present();
    };
    AnnoncesPage.prototype.sortFaQByTrier = function () {
        if (this.selectedTri.id != null) {
            if (this.selectedTri.id == 9) {
                this.proximite = 0;
                this.pertinence = 0;
                this.listAds = [];
                this.listAdsSorted = [];
                this.paging = 0;
                this.typeDate = "ASC";
                this.load = 1;
                this.getListAds(null, false);
            }
            if (this.selectedTri.id == 10) {
                this.proximite = 0;
                this.pertinence = 0;
                this.listAds = [];
                this.listAdsSorted = [];
                this.paging = 0;
                this.typeDate = "DESC";
                this.load = 1;
                this.getListAds(null, false);
            }
            if (this.selectedTri.id == 11) {
                this.listAds = [];
                this.listAdsSorted = [];
                this.proximite = 1;
                this.pertinence = 0;
                this.paging = 0;
                this.load = 1;
                this.getListAdsByGeolocation(null, false);
                // this.setAsProximited()//ADDED_01_07_2019
            }
            if (this.selectedTri.id == 12) {
                this.listAds = [];
                this.listAdsSorted = [];
                this.pertinence = 1;
                this.proximite = 0;
                this.paging = 0;
                this.load = 1;
                this.getListAds(null, false);
            }
        }
        else {
            this.listAdsSorted = this.listAds;
        }
    };
    AnnoncesPage.prototype.sortFaQByFilter = function () {
        var _this = this;
        this.listAdsSorted = this.listAds.filter(function (ad) {
            if (ad.cat.id == _this.selectedCat.id) {
                return ad;
            }
        });
    };
    AnnoncesPage.prototype.newAnnonce = function () {
        var _this = this;
        var modalAd1 = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_18__annonce_add2_annonce_add2__["a" /* AnnonceAdd2Page */], {
            user: this.user,
            listCat: this.listCat,
            img: null
        });
        modalAd1.onDidDismiss(function (data) {
            _this.paging = 0;
            if (data !== null && data.plch !== null) {
                _this.load = 0;
                _this.inwait = 1;
                // console.log("**************** LIST annonce***************");
                // console.log(JSON.stringify(data));
                // let d = new Date();
                // let ds = ("0" + d.getDate()).slice(-2) + "/" + ("0" + (d.getMonth() + 1)).slice(-2) + "/" +
                //   d.getFullYear() + " " + ("0" + d.getHours()).slice(-2) + ":" + ("0" + d.getMinutes()).slice(-2)/* + ":" + ("0" + d.getSeconds()).slice(-2)*/;
                // this.nAdd = {
                //   "id": "99999999999999999999999",
                //   "url": "",
                //   "date": ds,
                //   "title": data.plch.ad_title,
                //   "description": data.plch.ad_description,
                //   "no_html_description": data.plch.ad_description,
                //   "author_id": data.plch.user_id,
                //   "author_infos": data.plch.author_infos,
                //   "category": data.plch.selectedCat,
                //   "price": data.plch.price,
                //   "phone": data.plch.phone,
                //   "address": data.plch.ad_address,
                //   "full_address": data.plch.full_ad_address,
                //   "lat": "",
                //   "lng": "",
                //   "reported": "",
                //   "ad_image_1": (data.plch.isset_img > 0) ? data.plch.ad_imgs[0].data.nativeURL : null,
                //   "ad_image_2": null,
                //   "ad_image_3": null,
                //   "ad_image_4": null,
                //   "abonnement": 0,
                //   "inc_view": 0,
                //   "link": "",
                //   "user_favorite": 0,
                //   "user_shared": 0,
                //   "user_report": 0,
                //   "user_like": 0,
                //   "favorite_count": "0",
                //   "share_count": "0",
                //   "date_fr": ds,
                //   "images_count": (data.plch.isset_img > 0) ? data.plch.isset_img : 0,
                //   "char70": data.plch.ad_description,
                //   "temp" : 1
                // };
                // this.listAdsSorted.splice(0, 0, this.nAdd);
                // this.nAdd = {};
                // console.log("**************** LIST annonce***************");
                // console.log(JSON.stringify(this.nAdd));
            }
            else {
                _this.listAdsSorted = [];
                _this.load = 1;
                _this.getListAds(null, false);
            }
        });
        modalAd1.present();
    };
    AnnoncesPage.prototype.refreshAds = function (refresherEvent) {
        var _this = this;
        refresherEvent.complete();
        this.load = 1;
        this.isReloading = true;
        this.inwait = 0;
        var listnerInfinite = null;
        listnerInfinite = setInterval(function () {
            console.log("listen the scroller");
            if (_this.isInfiteScroll) { }
            else {
                clearInterval(listnerInfinite);
                _this.listAds = [];
                _this.listAdsSorted = [];
                _this.paging = 0;
                // if (refresherEvent != null) {
                //   refresherEvent.complete()
                // }
                if (_this.proximite == 1) {
                    _this.getListAdsByGeolocation(null, true);
                }
                else {
                    _this.getListAds(null, true);
                }
            }
        }, 1000);
    };
    AnnoncesPage.prototype.getListCat = function (refresherEvent) {
        var _this = this;
        this.http.post(this.globals.variables.urls.listAnnonceCat, {}, {})
            .then(function (data) {
            _this.listCat = JSON.parse(data.data);
            _this.load = 0;
            // console.log(JSON.stringify(this.listCat));
        }, function (error) {
            _this.load = 0;
            console.log(JSON.stringify(error));
        });
    };
    AnnoncesPage.prototype.getListAds = function (infiniteScroll, isRefresh) {
        var _this = this;
        console.log("Getting Ads lists.");
        var user_id = this.user.id_User != null ? this.user.id_User : this.user.id;
        this.http.post(this.globals.variables.urls.listAnnonce + "?offset=" + this.paging + "&category=" + this.selectedCat.id + "&pertinence=" +
            this.pertinence + "&date=" + this.typeDate + "&user_id=" + user_id + "&limit=7", {}, {})
            .then(function (data) { return __awaiter(_this, void 0, void 0, function () {
            var _this = this;
            var res, r, date_fr, char70;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        res = JSON.parse(data.data);
                        if (!(res.length <= 0)) return [3 /*break*/, 1];
                        this.load = 0;
                        if (infiniteScroll != null) {
                            console.log('Async operation has ended');
                            infiniteScroll.complete();
                            this.isInfiteScroll = false;
                        }
                        return [3 /*break*/, 7];
                    case 1:
                        r = 0;
                        _a.label = 2;
                    case 2:
                        if (!(r < res.length)) return [3 /*break*/, 6];
                        if (!(!isRefresh && this.isReloading)) return [3 /*break*/, 3];
                        if (infiniteScroll != null) {
                            infiniteScroll.complete();
                        }
                        this.isInfiteScroll = false;
                        return [3 /*break*/, 6];
                    case 3:
                        if (!((isRefresh && this.isReloading) || (!isRefresh && !this.isReloading))) return [3 /*break*/, 5];
                        date_fr = res[r].date.charAt(8) + res[r].date.charAt(9) + "/" + res[r].date.charAt(5) + res[r].date.charAt(6) +
                            "/" + res[r].date.charAt(0) + res[r].date.charAt(1) + res[r].date.charAt(2) +
                            res[r].date.charAt(3) + " " + res[r].date.charAt(11) + res[r].date.charAt(12) + ":" +
                            res[r].date.charAt(14) + res[r].date.charAt(15);
                        res[r].date_fr = date_fr;
                        res[r].images_count = 0;
                        if (res[r].ad_image_1 != '' && res[r].ad_image_1 != null)
                            res[r].images_count += 1;
                        if (res[r].ad_image_2 != '' && res[r].ad_image_2 != null)
                            res[r].images_count += 1;
                        if (res[r].ad_image_3 != '' && res[r].ad_image_3 != null)
                            res[r].images_count += 1;
                        if (res[r].ad_image_4 != '' && res[r].ad_image_4 != null)
                            res[r].images_count += 1;
                        char70 = "";
                        if (res[r].description.length > 200) {
                            char70 = "" + res[r].description.substr(0, 199) + "...";
                        }
                        else {
                            char70 = res[r].description;
                        }
                        // console.log("Distance between user and formation ::::::: /// ====")
                        // console.log(res[r].distance)
                        res[r].char70 = char70;
                        //ADDED_01_07_2019
                        // let distFromUser = this.getDistance(this.user.pointGeocode, { lat: res[r].lat, lng: res[r].lng })
                        // res[r].distFromUser = distFromUser
                        // console.log("Distance between user and formation ::::::: /// ====")
                        // console.log(res[r].lat)
                        // console.log(res[r].distFromUser)
                        return [4 /*yield*/, this.listAdsSorted.push(res[r])];
                    case 4:
                        //ADDED_01_07_2019
                        // let distFromUser = this.getDistance(this.user.pointGeocode, { lat: res[r].lat, lng: res[r].lng })
                        // res[r].distFromUser = distFromUser
                        // console.log("Distance between user and formation ::::::: /// ====")
                        // console.log(res[r].lat)
                        // console.log(res[r].distFromUser)
                        _a.sent();
                        //FIN_ADDED_01_07_2019
                        if (r == (res.length - 1)) {
                            if (this.isReloading) {
                                this.isReloading = false;
                            }
                            setTimeout(function () {
                                _this.load = 0;
                            }, 1000);
                        }
                        _a.label = 5;
                    case 5:
                        r++;
                        return [3 /*break*/, 2];
                    case 6:
                        //ADDED_01_07_2019
                        // if (this.proximite == 1) {
                        //   this.setAsProximited()
                        // }
                        //FIN_ADDED_01_07_2019
                        if (infiniteScroll != null) {
                            console.log('Async operation has ended');
                            infiniteScroll.complete();
                            this.isInfiteScroll = false;
                        }
                        console.log("Getting user info (ad Author)");
                        _a.label = 7;
                    case 7: return [2 /*return*/];
                }
            });
        }); }, function (error) {
            _this.load = 0;
            console.log(JSON.stringify(error));
        });
    };
    AnnoncesPage.prototype.getListAdsByGeolocation = function (infiniteScroll, isRefresh) {
        var _this = this;
        console.log("Getting Ads lists by geolocation.");
        console.log(JSON.parse(this.user.full_adresse).place_id);
        var user_place_id = JSON.parse(this.user.full_adresse).place_id;
        var user_id = this.user.id_User != null ? this.user.id_User : this.user.id;
        this.http.post(this.globals.variables.urls.listAdByGeolocate + "?offset=" + this.paging +
            "&place_id" + user_place_id + "&user_id=" + user_id + "&limit=20", {
            "place_id": user_place_id,
            "offset": this.paging,
            "limit": "20"
        }, {})
            .then(function (data) { return __awaiter(_this, void 0, void 0, function () {
            var _this = this;
            var res, r, date_fr, char70;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        res = JSON.parse(data.data);
                        if (!(res.length <= 0)) return [3 /*break*/, 1];
                        this.load = 0;
                        if (infiniteScroll != null) {
                            console.log('Async operation has ended');
                            infiniteScroll.complete();
                            this.isInfiteScroll = false;
                        }
                        return [3 /*break*/, 7];
                    case 1:
                        r = 0;
                        _a.label = 2;
                    case 2:
                        if (!(r < res.length)) return [3 /*break*/, 6];
                        if (!(!isRefresh && this.isReloading)) return [3 /*break*/, 3];
                        if (infiniteScroll != null) {
                            infiniteScroll.complete();
                        }
                        this.isInfiteScroll = false;
                        return [3 /*break*/, 6];
                    case 3:
                        if (!((isRefresh && this.isReloading) || (!isRefresh && !this.isReloading))) return [3 /*break*/, 5];
                        date_fr = res[r].date.charAt(8) + res[r].date.charAt(9) + "/" + res[r].date.charAt(5) + res[r].date.charAt(6) +
                            "/" + res[r].date.charAt(0) + res[r].date.charAt(1) + res[r].date.charAt(2) + res[r].date.charAt(3);
                        res[r].date_fr = date_fr;
                        res[r].images_count = 0;
                        if (res[r].ad_image_1 != '' && res[r].ad_image_1 != null)
                            res[r].images_count += 1;
                        if (res[r].ad_image_2 != '' && res[r].ad_image_2 != null)
                            res[r].images_count += 1;
                        if (res[r].ad_image_3 != '' && res[r].ad_image_3 != null)
                            res[r].images_count += 1;
                        if (res[r].ad_image_4 != '' && res[r].ad_image_4 != null)
                            res[r].images_count += 1;
                        char70 = "";
                        if (res[r].description.length > 200) {
                            char70 = "" + res[r].description.substr(0, 199) + "...";
                        }
                        else {
                            char70 = res[r].description;
                        }
                        res[r].char70 = char70;
                        // let distFromUser = this.getDistance(this.user.pointGeocode, { lat: res[r].lat, lng: res[r].lng })
                        // res[r].distFromUser = distFromUser
                        console.log("Distance between user and formation ::::::: /// ====");
                        console.log(res[r].address);
                        console.log(res[r].distance);
                        // console.log(res[r].distFromUser)
                        return [4 /*yield*/, this.listAdsSorted.push(res[r])];
                    case 4:
                        // console.log(res[r].distFromUser)
                        _a.sent();
                        if (r == (res.length - 1)) {
                            if (this.isReloading) {
                                this.isReloading = false;
                            }
                            setTimeout(function () {
                                _this.load = 0;
                            }, 1000);
                        }
                        _a.label = 5;
                    case 5:
                        r++;
                        return [3 /*break*/, 2];
                    case 6:
                        this.listAdsSorted.sort(function (p1, p2) {
                            return p1.distance - p2.distance;
                        });
                        if (infiniteScroll != null) {
                            console.log('Async operation has ended');
                            infiniteScroll.complete();
                            this.isInfiteScroll = false;
                        }
                        console.log("Getting user info (ad Author)");
                        _a.label = 7;
                    case 7: return [2 /*return*/];
                }
            });
        }); }, function (error) {
            _this.load = 0;
            console.log(JSON.stringify(error));
        });
    };
    AnnoncesPage.prototype.addAsViewed = function (ad) {
        this.http.post(this.globals.variables.urls.addViewAd, {
            "id": ad.id
        }, {})
            .then(function (res) {
            console.log("Adding view result");
            // console.log(JSON.stringify(res.data));
        }, function (error) {
            console.log("Error when adding view to ad");
            console.log(JSON.stringify(error));
        });
    };
    AnnoncesPage.prototype.showDetails = function (ad) {
        if (typeof (ad.temp) !== undefined && ad.temp == 1) {
            this.toast.show("En cours de chargement...\nVeuillez patienter", "6000", "top")
                .subscribe(function (toast) {
                console.log(JSON.stringify(toast));
            });
            return;
        }
        this.addAsViewed(ad);
        var adPage = __WEBPACK_IMPORTED_MODULE_4__annonce_details_annonce_details__["a" /* AnnonceDetailsPage */];
        this.navCtrl.push(adPage, {
            user: this.user,
            ad: ad
        });
    };
    AnnoncesPage.prototype.doInfinite = function (infiniteScroll) {
        if (this.isInfiteScroll) {
            infiniteScroll.complete();
        }
        else {
            this.isInfiteScroll = true;
            console.log('Begin async operation');
            this.paging += 1;
            if (this.proximite == 1) {
                this.getListAdsByGeolocation(infiniteScroll, false);
            }
            else {
                this.getListAds(infiniteScroll, false);
            }
        }
    };
    AnnoncesPage.prototype.getUserPosition = function () {
        var _this = this;
        console.log("Getting position");
        GPSLocation.getCurrentPosition(function (position) {
            console.log("Resultat du GPS");
            console.log(JSON.stringify(position));
            var pos = position.coords.latitude + ',' + position.coords.longitude;
            var lat = parseFloat(position.coords.latitude);
            var lng = parseFloat(position.coords.longitude);
            _this.userPos = {
                lat: lat,
                lng: lng
            };
        }, function (error) {
            console.log("Erreur du GPS");
            console.log(JSON.stringify(error));
            var alert = _this.alertCtrl.create({
                title: 'Information',
                subTitle: 'Activer votre GPS, SVP.',
                buttons: ['Ok']
            });
            alert.present();
        });
    };
    AnnoncesPage.prototype.watchMyPosition = function () {
        var _this = this;
        console.log("Watching position");
        GPSLocation.watchPosition(function (position) {
            var pos = position.coords.latitude + ',' + position.coords.longitude;
            var lat = parseFloat(position.coords.latitude);
            var lng = parseFloat(position.coords.longitude);
            _this.userPos = {
                lat: lat,
                lng: lng
            };
        }, function (error) {
            console.log("Erreur du GPS");
            console.log(JSON.stringify(error));
            var alert = _this.alertCtrl.create({
                title: 'Information',
                subTitle: 'Activer votre GPS, SVP.',
                buttons: ['Ok']
            });
            alert.present();
        });
    };
    AnnoncesPage.prototype.getCurentPos = function () {
        this.geolocation.getCurrentPosition()
            .then(function (data) {
            console.log("Success to get current position");
            console.log(JSON.stringify(data));
        }, function (error) {
            console.log("Error to get current position");
            console.log(JSON.stringify(error));
        });
    };
    AnnoncesPage.prototype.goToHome = function () {
        this.navCtrl.popToRoot();
    };
    AnnoncesPage.prototype.countProxAd = function () {
        var _this = this;
        console.log("-================-");
        console.log(this.user.full_adresse.place_id);
        console.log("-================-");
        this.http.get(this.globals.variables.urls.countAdProx + "?place_id=" + this.user.full_adresse.place_id, {}, {})
            .then(function (data) {
            console.log(JSON.stringify(data.data));
            var res = JSON.parse(data.data);
            _this.nbProxAds = res.count;
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    AnnoncesPage.prototype.shareViaApp = function (faq) {
        var _this = this;
        if (typeof (faq.temp) !== undefined && faq.temp == 1) {
            this.toast.show("En cours de chargement...\nVeuillez patienter", "6000", "top")
                .subscribe(function (toast) {
                console.log(JSON.stringify(toast));
            });
            return;
        }
        console.log("URL ::::: " + faq.url);
        var file = [];
        var bodyText = "";
        var link = "";
        bodyText += "";
        var perma_link = faq.url;
        bodyText += faq.author_infos.pseudo + " a partagé : \n";
        bodyText += faq.no_html_description;
        if (faq.ad_image_1 != null && faq.ad_image_1 != '') {
            file.push(faq.ad_image_1);
        }
        if (faq.ad_image_2 != null && faq.ad_image_2 != '') {
            file.push(faq.ad_image_2);
        }
        if (faq.ad_image_3 != null && faq.ad_image_3 != '') {
            file.push(faq.ad_image_3);
        }
        if (faq.ad_image_4 != null && faq.ad_image_4 != '') {
            file.push(faq.ad_image_4);
        }
        var shareModal = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_20__sharemodal_sharemodal__["a" /* SharemodalPage */], {
            file: file,
            bodyText: bodyText,
            link: link,
            perma_link: perma_link
        });
        shareModal.onDidDismiss(function (data) {
            _this.platform.registerBackButtonAction(function () {
                _this.goBack();
            });
            console.log("Result from sharing : ");
            console.log(JSON.stringify(data));
            if (data.shared) {
                for (var u = 0; u < _this.listAdsSorted.length; u++) {
                    if (_this.listAdsSorted[u].id == faq.id) {
                        _this.listAdsSorted[u].share_count = parseInt(_this.listAdsSorted[u].share_count) + 1;
                        _this.listAdsSorted[u].user_shared = 1;
                        // this.toast.show("Vous avez partagé cette annonce", "2000", "bottom").subscribe(
                        //   toast => {
                        //     console.log(toast);
                        //   }
                        // );
                    }
                }
                _this.http.post(_this.globals.variables.urls.addToShare, {
                    "user_id": _this.user.id_User != null ? _this.user.id_User : _this.user.id,
                    "post_id": faq.id
                }, {})
                    .then(function (data) {
                    var res = JSON.parse(data.data);
                    console.log(JSON.stringify(res));
                    if (res.status == "ok") {
                    }
                    else {
                        console.log(JSON.stringify(res));
                    }
                }, function (error) {
                    console.log(JSON.stringify(error));
                });
            }
        });
        shareModal.present();
    };
    AnnoncesPage.prototype.share = function (ad) {
        var file = [];
        if (ad.ad_image_1 != null && ad.ad_image_1 != '') {
            file.push(ad.ad_image_1);
        }
        if (ad.ad_image_2 != null && ad.ad_image_2 != '') {
            file.push(ad.ad_image_2);
        }
        if (ad.ad_image_3 != null && ad.ad_image_3 != '') {
            file.push(ad.ad_image_3);
        }
        if (ad.ad_image_4 != null && ad.ad_image_4 != '') {
            file.push(ad.ad_image_4);
        }
        this.socialSharing.share(ad.description, ad.title, file, '')
            .then(function (data) {
            console.log("Share success");
            console.log(JSON.stringify(data));
        }, function (error) {
            console.log("Share error");
            console.log(JSON.stringify(error));
        });
    };
    AnnoncesPage.prototype.addToFavorite = function (ad) {
        var _this = this;
        if (typeof (ad.temp) !== undefined && ad.temp == 1) {
            this.toast.show("En cours de chargement...\nVeuillez patienter", "6000", "top")
                .subscribe(function (toast) {
                console.log(JSON.stringify(toast));
            });
            return;
        }
        this.http.post(this.globals.variables.urls.addFavorite, {
            "user_id": this.user.id_User != null ? this.user.id_User : this.user.id,
            "post_id": ad.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            // console.log(JSON.stringify(res));
            if (res.status == "ok") {
                if (ad.user_favorite == 1) {
                    ad.favorite_count = parseInt(ad.favorite_count) - 1;
                    ad.user_favorite = 0;
                    _this.toast.show("Vous avez annulé votre \"J'aime\"", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                    return;
                }
                else if (ad.user_favorite == 0) {
                    ad.favorite_count = parseInt(ad.favorite_count) + 1;
                    ad.user_favorite = 1;
                    _this.toast.show("Vous avez aimé cette annonce", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                    return;
                }
            }
            else {
                console.log(JSON.stringify(res));
            }
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    AnnoncesPage.prototype.displayPopover = function (popoverid) {
        if (popoverid == 'popoverad199999999999999999999999') {
            this.toast.show("En cours de chargement...\nVeuillez patienter", "6000", "top")
                .subscribe(function (toast) {
                console.log(JSON.stringify(toast));
            });
            return;
        }
        var classL = document.getElementById(popoverid).classList.toString();
        console.log(classL);
        console.log(classL.indexOf("popoverdisplay"));
        if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") === -1 && this.displayedPopoverID == "") {
            console.log("=====///===Displayed ", popoverid);
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") === -1 && this.displayedPopoverID != "") {
            console.log("=====///===Displayed ", popoverid);
            document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay");
            document.getElementById(this.displayedPopoverID).classList.add("popoverhide");
            document.getElementById(this.displayedPopoverID).style.display = "none";
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") !== -1 && classL.indexOf("popoverhide") === -1 && this.displayedPopoverID == popoverid) {
            console.log("=====///===Hiden ", popoverid);
            document.getElementById(popoverid).classList.remove("popoverdisplay");
            document.getElementById(popoverid).classList.add("popoverhide");
            document.getElementById(popoverid).style.display = "none";
            this.displayedPopoverID = "";
            console.log("=====///===Hiden ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") !== -1 && this.displayedPopoverID != popoverid && this.displayedPopoverID != "") {
            console.log("=====///===Displayed Other : => ", popoverid);
            document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay");
            document.getElementById(this.displayedPopoverID).classList.add("popoverhide");
            document.getElementById(this.displayedPopoverID).style.display = "none";
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.remove("popoverhide");
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed Other : => ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") !== -1 && this.displayedPopoverID == "") {
            console.log("=====///===Displayed Once : => ", popoverid);
            document.getElementById(popoverid).classList.remove("popoverhide");
            document.getElementById(popoverid).classList.remove("popoverdisplay");
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed Once : => ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") !== -1 && this.displayedPopoverID == popoverid) {
            // this.displayHide()
        }
    };
    AnnoncesPage.prototype.addToFav = function (ad, iconItemID) {
        var _this = this;
        var selectedItem = document.getElementById(iconItemID);
        selectedItem.classList.add("fadeDown");
        selectedItem.style.opacity = "0.2";
        this.http.post(this.globals.variables.urls.addLike, {
            user_id: this.user.id_User != null ? this.user.id_User : this.user.id,
            post_id: ad.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log("Resultat du serveur");
            console.log(JSON.stringify(res));
            selectedItem.classList.remove("fadeDown");
            selectedItem.style.opacity = "1";
            document.getElementById(_this.displayedPopoverID).classList.remove("popoverdisplay");
            document.getElementById(_this.displayedPopoverID).classList.add("popoverhide");
            document.getElementById(_this.displayedPopoverID).style.display = "none";
            _this.displayedPopoverID = "";
            if (res.status == "ok") {
                if (ad.user_like == 0) {
                    ad.user_like = 1;
                    _this.toast.show("Ajouté dans vos favoris", "2000", "bottom")
                        .subscribe(function (t) {
                        console.log(JSON.stringify(t));
                    });
                }
                else if (ad.user_like == 1) {
                    ad.user_like = 0;
                    _this.toast.show("Supprimé de vos favoris", "2000", "bottom")
                        .subscribe(function (t) {
                        console.log(JSON.stringify(t));
                    });
                }
            }
            else {
                _this.toast.show("Erreur lors d'ajout dans vos favoris", "2000", "bottom")
                    .subscribe(function (t) {
                    console.log(JSON.stringify(t));
                });
            }
        }, function (error) {
            console.log("Erreur d'acces au serveur");
        });
    };
    AnnoncesPage.prototype.report = function (ad, iconItemID) {
        var _this = this;
        var selectedItem = document.getElementById(iconItemID);
        selectedItem.classList.add("fadeDown");
        selectedItem.style.opacity = "0.2";
        this.http.post(this.globals.variables.urls.repportFaQ, {
            "user_id": this.user.id_User != null ? this.user.id_User : this.user.id,
            "post_id": ad.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log(JSON.stringify(res));
            if (res.status == "ok") {
                if (ad.user_report == 1) {
                    ad.user_report = 0;
                    _this.toast.show("Votre signalisation a été annulée", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
                else {
                    ad.user_report = 1;
                    _this.toast.show("Vous avez signalé cette annonce", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
            }
            else {
                console.log(JSON.stringify(res));
                _this.toast.show("Vous avez déjà signalé cette annonce", "2000", "bottom").subscribe(function (toast) {
                    console.log(toast);
                });
            }
            selectedItem.classList.remove("fadeDown");
            selectedItem.style.opacity = "1";
            document.getElementById(_this.displayedPopoverID).classList.remove("popoverdisplay");
            document.getElementById(_this.displayedPopoverID).classList.add("popoverhide");
            document.getElementById(_this.displayedPopoverID).style.display = "none";
            _this.displayedPopoverID = "";
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    AnnoncesPage.prototype.supAd = function (ad) {
        var _this = this;
        // document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay")
        // document.getElementById(this.displayedPopoverID).classList.add("popoverhide")
        // document.getElementById(this.displayedPopoverID).style.display = "none"
        if (this.listAds.length) {
            for (var c = 0; c < this.listAds.length; c++) {
                if (ad.id == this.listAds[c].id) {
                    this.listAds.splice(c, 1);
                    break;
                }
            }
        }
        if (this.listAdsSorted.length) {
            for (var c = 0; c < this.listAdsSorted.length; c++) {
                if (ad.id == this.listAdsSorted[c].id) {
                    this.listAdsSorted.splice(c, 1);
                    break;
                }
            }
        }
        this.displayPopover("popoverad1" + ad.id);
        this.http.post(this.globals.variables.urls.supAd, {
            "ad_id": "" + ad.id,
            "user_id": "" + (this.user.id_User != null ? this.user.id_User : this.user.id)
        }, {})
            .then(function (resp) {
            // console.log(JSON.stringify(resp));
            var res = JSON.parse(resp.data);
            _this.displayedPopoverID = "";
            if (res.status == "ok") {
                _this.toast.show("Annonce supprimée", "2000", "bottom")
                    .subscribe(function (t) {
                    console.log(JSON.stringify(t));
                });
                if (_this.listAds.length) {
                    for (var c = 0; c < _this.listAds.length; c++) {
                        if (ad.id == _this.listAds[c].id) {
                            _this.listAds.splice(c, 1);
                            break;
                        }
                    }
                }
                if (_this.listAdsSorted.length) {
                    for (var c = 0; c < _this.listAdsSorted.length; c++) {
                        if (ad.id == _this.listAdsSorted[c].id) {
                            _this.listAdsSorted.splice(c, 1);
                            break;
                        }
                    }
                }
            }
            else {
                _this.toast.show("Erreur de suppression", "2000", "bottom")
                    .subscribe(function (t) {
                    console.log(JSON.stringify(t));
                });
            }
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    AnnoncesPage.prototype.showEditAd = function (ad) {
        var _this = this;
        this.displayPopover("popoverad1" + ad.id);
        var upPage = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_18__annonce_add2_annonce_add2__["a" /* AnnonceAdd2Page */], {
            user: this.user,
            listCat: this.listCat,
            sourcePage: "ads",
            source: "update",
            adtoup: ad
        });
        upPage.onDidDismiss(function (data) {
            _this.platform.registerBackButtonAction(function () {
                _this.goBack();
            });
            _this.load = 1;
            _this.listAds = [];
            _this.listAdsSorted = [];
            _this.paging = 0;
            _this.getListAds(null, false);
        });
        upPage.present();
    };
    AnnoncesPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-annonces',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/annonces/annonces.html"*/'<ion-content class="container">\n\n\n\n  <ion-row ion-fixed class="load-ctn" id="load" *ngIf="load == 1">\n    <ion-spinner class="loading-custom" name="crescent" color="vert_logo"></ion-spinner>\n  </ion-row>\n\n  <ion-row ion-fixed class="header">\n    <ion-col></ion-col>\n    <ion-col (click)="goToHome()">\n      <ion-label class="da">\n        <img class="logo" src="assets/imgs/da_image/logo-dentart.png">\n        <span class="bold">Dent</span><span class="fine">Art</span>\n      </ion-label>\n    </ion-col>\n    <ion-col></ion-col>\n    <div *ngIf="inwait == 1" class="wait-posting"><img class="wpw" src="../../assets/imgs/load/load.gif" />&nbsp;&nbsp;T&eacute;l&eacute;chargement en cours...</div>\n  </ion-row>\n\n  <div class="to-bottom">\n\n    <ion-refresher (ionRefresh)="refreshAds($event)">\n      <ion-refresher-content pullingIcon="arrow-dropdown" pullingText="." refreshingSpinner="none"\n        refreshingText="" pullMin="120" pullMax="200" class="refresher">\n      </ion-refresher-content>\n    </ion-refresher>\n\n    <div style="color: #117bcf; background-color: #e0e0e000; width: 100%; margin: auto; padding: 20px;\n      display: flex; align-items: center; justify-content: center" *ngIf="listAdsSorted.length <= 0 && load == 0">\n      <!-- Aucune annonce trouvée ! -->\n    </div>\n\n    <div class="card-shape wait-deb-{{inwait}}">\n\n      <div class="theBlock" *ngFor="let ad of listAdsSorted">\n        <div class="row1">\n          <div class="row1-col1" (click)="showDetails(ad);">\n            <div class="user-avatar-ctn">\n              <img class="user-avatar"\n                src="{{ad.author_infos.avatar != \'\' ? ad.author_infos.avatar : \'assets/imgs/avatar/avatar_f.png\'}}" />\n            </div>\n            <div class="user-info-cth">\n              <div class="user-pseudo">\n                {{ad.author_infos.pseudo}}\n              </div>\n              <div class="user-job">\n                <!-- ad.author_infos.address -->\n                {{ad.author_infos.job}} - {{ad.address}}\n              </div>\n              <div class="post-date">\n                {{ad.date_fr}}\n              </div>\n            </div>\n          </div>\n          <div class="row1-col2">\n\n            <div *ngIf="ad != null" class="drop-down-icon" (click)="displayPopover(\'popoverad1\'+ad.id)">\n              <div class="left-bar"></div>\n              <div class="right-bar"></div>\n            </div>\n            <div *ngIf="ad != null" class="popover-ctn" id="popoverad1{{ad.id}}">\n              <div class="popover-tsingy">\n                <div class="half-transparent"></div>\n              </div>\n              <div class="list-ctn">\n                <div class="option-item" id="faviconad{{ad.id}}" (click)="addToFav(ad, \'faviconad\'+ad.id)">\n                  <div class="op-it-icon">\n                    <img class="it-icon" src="../../assets/icon/heart-green-blue.svg" />\n                  </div>\n                  <div class="item-text">Favoris</div>\n                </div>\n                <div class="sep-popover"></div>\n                <div class="option-item" id="repiconad{{ad.id}}" (click)="report(ad, \'repiconad\'+ad.id)">\n                  <div class="op-it-icon">\n                    <img class="it-icon" src="../../assets/icon/warning.svg" />\n                  </div>\n                  <div class="item-text">Signaler</div>\n                </div>\n\n                <div *ngIf="user_id == ad.author_id">\n                  <div class="sep-popover"></div>\n                  <div class="option-item" id="modiconad{{ad.id}}" (click)="showEditAd(ad)">\n                    <div class="op-it-icon">\n                      <img class="it-icon" src="../../assets/icon/edit-green.svg" />\n                    </div>\n                    <div class="item-text">Modifier</div>\n                  </div>\n                </div>\n\n                <div *ngIf="user_id == ad.author_id">\n                  <div class="sep-popover"></div>\n                  <div class="option-item" id="supiconad{{ad.id}}" (click)="supAd(ad)">\n                    <div class="op-it-icon">\n                      <img class="it-icon" src="../../assets/icon/garbage.svg" />\n                    </div>\n                    <div class="item-text">Supprimer</div>\n                  </div>\n                </div>\n\n\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class="row-text" (click)="showDetails(ad);">\n          <div class="faq-ttl" [innerHtml]="ad.category.name"></div>\n          <div class="faq-desc" [innerHtml]="ad.char70"></div>\n          <div class="more" *ngIf="ad.char70.length > 199">Voir plus ...</div>\n        </div>\n        <div *ngIf="(ad.images_count > 0 || ad.isset_img > 0)" class="row2" (click)="showDetails(ad);"\n          [style.background-image]="\'url(../../assets/imgs/load/Chargement.gif)\'">\n          <div *ngIf="(ad.images_count > 0 || ad.isset_img > 0)" class="loading-image"\n            [style.background-image]="\'url(\'+(ad.ad_image_1 != null ? ad.ad_image_1 : \'../../assets/imgs/da_image/Rectangle-05.jpg\')+\')\'"></div>\n          <div class="photo-badge">\n            {{ad.images_count}}\n            <img class="nb-photo-icon" src="../../assets/icon/photo-camera-white.svg" />\n          </div>\n        </div>\n        <div class="row3">\n          <div class="col-foot" (click)="addToFavorite(ad);">\n            <div class="foot-badge" *ngIf="ad.favorite_count == null">0</div>\n            <div class="foot-badge" *ngIf="ad.favorite_count < 100">{{ad.favorite_count}}</div>\n            <div class="foot-badge" *ngIf="ad.favorite_count >= 100">99+</div>\n            <div class="foot-block-icon-ctn">\n              <img class="foot-block-icon"\n                src="{{ad.user_favorite != 0 && ad.user_favorite != \'0\' ? \'../../assets/icon/like-fin-green.svg\' : \'../../assets/icon/like-fin-blue.svg\' }}" />\n            </div>\n            <div class="foot-label">J\'aime</div>\n          </div>\n          <div class="col-foot" (click)="shareViaApp(ad);">\n            <div class="foot-badge" *ngIf="ad.share_count == null">0</div>\n            <div class="foot-badge" *ngIf="ad.share_count < 100">{{ad.share_count}}</div>\n            <div class="foot-badge" *ngIf="ad.share_count >= 100">99+</div>\n            <div class="foot-block-icon-ctn">\n              <img class="foot-block-icon" src="../../assets/icon/share-blue.svg" />\n            </div>\n            <div class="foot-label">Partager</div>\n          </div>\n        </div>\n      </div>\n\n      <ion-infinite-scroll (ionInfinite)="doInfinite($event)">\n        <ion-infinite-scroll-content></ion-infinite-scroll-content>\n      </ion-infinite-scroll>\n\n    </div>\n\n  </div>\n\n  <ion-row ion-fixed class="tabs">\n    <ion-col (click)="openMenu()">\n      <img class="btn-menu" src="../../assets/icon/menu-button.svg">\n    </ion-col>\n    <ion-col (click)="trier();">\n      <img class="custom-icon-1" src="../../assets/icon/sort-down.svg">\n      <span><br>Trier</span>\n    </ion-col>\n    <ion-col (click)="goToHome()">\n      <img class="custom-icon-3" src="../../assets/icon/home-7.svg">\n    </ion-col>\n    <ion-col (click)="filter()">\n      <img class="custom-icon-1" src="../../assets/icon/filter.svg">\n      <span><br>Filtrer</span>\n    </ion-col>\n    <ion-col (click)="newAnnonce();">\n      <img class="custom-icon-1" src="../../assets/icon/plus.svg">\n      <span><br>Poster</span>\n    </ion-col>\n  </ion-row>\n</ion-content>'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/annonces/annonces.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_3__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["f" /* Events */],
            __WEBPACK_IMPORTED_MODULE_13__ionic_native_toast__["a" /* Toast */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_14__ionic_native_geolocation__["a" /* Geolocation */],
            __WEBPACK_IMPORTED_MODULE_15__ionic_native_diagnostic__["a" /* Diagnostic */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_17__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_19__ionic_native_social_sharing__["a" /* SocialSharing */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["f" /* Events */]])
    ], AnnoncesPage);
    return AnnoncesPage;
}());

//# sourceMappingURL=annonces.js.map

/***/ }),

/***/ 19:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DentartPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_geolocation__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__createacc1_createacc1__ = __webpack_require__(149);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__connexion_connexion__ = __webpack_require__(153);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_file__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__home_home__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_network__ = __webpack_require__(80);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__nonetwork_nonetwork__ = __webpack_require__(88);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ionic_storage__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__ionic_native_android_permissions__ = __webpack_require__(77);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__ionic_native_sim__ = __webpack_require__(121);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__ionic_native_location_accuracy__ = __webpack_require__(220);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};















var DentartPage = /** @class */ (function () {
    function DentartPage(navCtrl, navParams, events, file, network, storage, globals, http, androidPermissions, platform, sim, alertCtrl, locationAccuracy, geolocation) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.events = events;
        this.file = file;
        this.network = network;
        this.storage = storage;
        this.globals = globals;
        this.http = http;
        this.androidPermissions = androidPermissions;
        this.platform = platform;
        this.sim = sim;
        this.alertCtrl = alertCtrl;
        this.locationAccuracy = locationAccuracy;
        this.geolocation = geolocation;
        this.langage = 'fr';
        this.user = {};
        this.intervalChecklocation = 0;
        this.iCl = 0;
        this.locationCoords = {
            latitude: "",
            longitude: "",
            accuracy: "",
            timestamp: ""
        };
        this.timetest = Date.now();
        //this.testConnectivity();
    }
    DentartPage.prototype.ionViewWillLoad = function () {
        console.log('ionViewWillLoad DentartPage');
        // this.getSession();
    };
    DentartPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad DentartPage');
        // this.testConnectedUser();
        this.checkReadWritePermissions();
        this.getCertText();
    };
    DentartPage.prototype.getCertText = function () {
        var _this = this;
        this.platform.ready().then(function (ready) {
            _this.http.get(_this.globals.variables.urls.getCertText, {}, {})
                .then(function (data) {
                console.log("Certificate text :");
                console.log(JSON.stringify(data.data));
                // this.storage.set("cert_text", data.data)
                _this.storage.set("cert_text", JSON.parse(data.data).text_after_cnx)
                    .then(function (data) {
                    console.log("Cert text saved to storage : ");
                    console.log(JSON.stringify(data));
                }, function (error) {
                    console.log("Error set cert text to storage : ");
                    console.log(JSON.stringify(error));
                });
            }, function (error) {
                console.log("Error getting certText : ");
                console.log(JSON.stringify(error));
                setTimeout(function () {
                    _this.getCertText();
                }, 5000);
            });
        }, function (error) {
            console.log("Platform error");
        });
    };
    DentartPage.prototype.checkReadWritePermissions = function () {
        var _this = this;
        this.locationAccuracy.request(this.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY).then(function () {
            _this.androidPermissions.checkPermission(_this.androidPermissions.PERMISSION.ACCESS_COARSE_LOCATION).then(function (result) {
                if (result.hasPermission) {
                    console.log('********************askToTurnOnGPS*****************');
                    _this.askToTurnOnGPS();
                    _this.intervalChecklocation = 1;
                }
                else {
                    _this.iCl = setInterval(function () {
                        if (_this.intervalChecklocation == 0) {
                            _this.getLocationCoordinates();
                        }
                        else {
                            clearInterval(_this.iCl);
                        }
                    }, 500);
                }
            }, function (err) {
                alert(err);
            });
        }, function (error) { return console.log('Error requesting location permissions', error); });
        this.androidPermissions.requestPermissions([this.androidPermissions.PERMISSION.FOREGROUND_SERVICE, this.androidPermissions.PERMISSION.READ_EXTERNAL_STORAGE, this.androidPermissions.PERMISSION.WRITE_EXTERNAL_STORAGE, this.androidPermissions.PERMISSION.CAMERA, this.androidPermissions.PERMISSION.GET_ACCOUNTS]);
        this.sim.requestReadPermission().then(function () { return console.log('Permission granted'); }, function () { return console.log('Permission denied'); });
    };
    DentartPage.prototype.askToTurnOnGPS = function () {
        var _this = this;
        this.locationAccuracy.request(this.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY).then(function () {
            // When GPS Turned ON call method to get Accurate location coordinates
            _this.getLocationCoordinates();
        }, function (error) { return console.log('Error requesting location permissions ' + JSON.stringify(error)); });
    };
    DentartPage.prototype.getLocationCoordinates = function () {
        var _this = this;
        this.geolocation.getCurrentPosition().then(function (resp) {
            _this.locationCoords.latitude = resp.coords.latitude;
            _this.locationCoords.longitude = resp.coords.longitude;
            _this.locationCoords.accuracy = resp.coords.accuracy;
            _this.locationCoords.timestamp = resp.timestamp;
            console.log("*************LOCATIONCORDS******************");
            console.log(JSON.stringify(_this.locationCoords));
            _this.intervalChecklocation = 1;
        }).catch(function (error) {
            console.log("Erreur permission geolocation", JSON.stringify(error));
        });
        var watch = this.geolocation.watchPosition();
        watch.subscribe(function (data) {
            // console.log("Watching Position");
            //   console.log(JSON.stringify(data));
        });
    };
    DentartPage.prototype.creerCompte = function () {
        var cacc = __WEBPACK_IMPORTED_MODULE_3__createacc1_createacc1__["a" /* Createacc1Page */];
        this.navCtrl.push(cacc);
    };
    DentartPage.prototype.connexion = function () {
        var conn = __WEBPACK_IMPORTED_MODULE_4__connexion_connexion__["a" /* ConnexionPage */];
        this.navCtrl.push(conn);
    };
    DentartPage.prototype.updateSessionInfos = function () {
        var _this = this;
        var user_id = this.user.id_User != null ? this.user.id_User : this.user.id;
        this.http.get(this.globals.variables.urls.getUserInfo + "?user_id=" + user_id, {}, {})
            .then(function (userInfo) {
            console.log("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%");
            console.log(JSON.stringify(JSON.parse(userInfo.data)));
            var newUserInfo = JSON.parse(userInfo.data).info_utilisateur;
            newUserInfo.avatarB64 = _this.user.avatarB64;
            _this.storage.set('user', newUserInfo);
            var home = __WEBPACK_IMPORTED_MODULE_6__home_home__["a" /* HomePage */];
            _this.navCtrl.setRoot(home, {
                user: newUserInfo
            }, {
                animate: true,
                animation: 'ios-transition',
                direction: 'forward',
                duration: 500
            });
        });
    };
    DentartPage.prototype.getSession = function () {
        var _this = this;
        this.storage.get('user')
            .then(function (data) {
            console.log(JSON.stringify(data));
            _this.user = data;
            if (_this.user != null) {
                _this.events.publish('user:logedIn', _this.user);
                _this.updateSessionInfos();
            }
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    DentartPage.prototype.testConnectedUser = function () {
        var _this = this;
        this.file.checkDir(this.file.dataDirectory, 'user/')
            .then(function (data) {
            console.log("User directory found.");
            console.log(JSON.stringify(data));
            _this.file.checkFile(_this.file.dataDirectory + "user/", "user.json")
                .then(function (data) {
                console.log("File user exist");
                _this.file.readAsText(_this.file.dataDirectory + "user/", 'user.json')
                    .then(function (data) {
                    // JSON.stringify(data);
                    _this.user = JSON.parse(data);
                    _this.events.publish('user:logedIn', _this.user);
                    var home = __WEBPACK_IMPORTED_MODULE_6__home_home__["a" /* HomePage */];
                    _this.navCtrl.setRoot(home, {
                        user: _this.user
                    }, {
                        animate: true,
                        animation: 'ios-transition',
                        direction: 'forward',
                        duration: 500
                    });
                }, function (error) {
                    console.log("Can not read user file as text");
                    console.log(JSON.stringify(error));
                });
            }, function (error) {
                console.log("File user does not exist");
                console.log(JSON.stringify(error));
            });
        }, function (error) {
            console.log("User directory not found.");
            console.log(JSON.stringify(error));
            _this.file.createDir(_this.file.dataDirectory, "user/", true)
                .then(function (data) {
                console.log("User directory creadted");
            }, function (error) {
                console.log("Can not create user directory");
                console.log(JSON.stringify(error));
            });
        });
    };
    DentartPage.prototype.testConnectivity = function () {
        var _this = this;
        console.log("Testing network");
        if (this.network.type == 'none' || this.network.type == 'unknown') {
            this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_8__nonetwork_nonetwork__["a" /* NonetworkPage */]);
        }
        else {
            //this.navCtrl.setRoot(DentartPage)
        }
        setTimeout(function () {
            _this.testConnectivity();
        }, 5000);
    };
    DentartPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-dentart',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/dentart/dentart.html"*/'<ion-content>\n\n  <div class="container">\n\n    <div ion-fixed class="bg-overlay">\n\n    </div>\n\n    <div class="to-middle">\n\n      <ion-row>\n        <ion-label>\n          <img class="logo" src="assets/imgs/da_image/logo-dentart.png">\n        </ion-label>\n      </ion-row>\n\n      <ion-row class="da-ctn">\n        <ion-label class="color-white da">\n          <span class="bold">Dent</span><span class="fine">Art</span>\n        </ion-label>\n      </ion-row>\n\n      <ion-row class="separator"></ion-row>\n\n      <ion-row>\n        <button *ngIf="langage == \'fr\'" ion-button round class="btn-blue-gradient" (click)="creerCompte();">\n          {{globals.variables.langage.fr.caccbtn}}\n        </button>\n        <button *ngIf="langage == \'en\'" ion-button round class="btn-blue-gradient" (click)="creerCompte();">\n          {{globals.variables.langage.en.caccbtn}}\n        </button>\n      </ion-row>\n\n      <ion-row>\n        <button *ngIf="langage == \'fr\'" ion-button round class="btn-light" (click)="connexion();">\n          {{globals.variables.langage.fr.login}}\n        </button>\n        <button *ngIf="langage == \'en\'" ion-button round class="btn-light" (click)="connexion();">\n          {{globals.variables.langage.en.login}}\n        </button>\n      </ion-row>\n\n    </div>\n\n  </div>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/dentart/dentart.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["f" /* Events */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_native_file__["a" /* File */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_native_network__["a" /* Network */],
            __WEBPACK_IMPORTED_MODULE_9__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_10__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_11__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_12__ionic_native_android_permissions__["a" /* AndroidPermissions */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_13__ionic_native_sim__["a" /* Sim */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_14__ionic_native_location_accuracy__["a" /* LocationAccuracy */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_geolocation__["a" /* Geolocation */]])
    ], DentartPage);
    return DentartPage;
}());

//# sourceMappingURL=dentart.js.map

/***/ }),

/***/ 20:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HomePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_android_permissions__ = __webpack_require__(77);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_image_picker__ = __webpack_require__(217);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__popupcert_popupcert__ = __webpack_require__(148);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__faqcom_faqcom__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__faqfilter_faqfilter__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__menu_menu__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__annonces_annonces__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__dentart_dentart__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__formations_formations__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__a_savoir_a_savoir__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__uprofil_uprofil__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__ionic_native_toast__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__notifications_notifications__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__ionic_native_social_sharing__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__ionic_native_local_notifications__ = __webpack_require__(65);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__mesannonces_mesannonces__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__annonce_details_annonce_details__ = __webpack_require__(46);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__ionic_storage__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__ionic_native_app_minimize__ = __webpack_require__(225);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__faqadd3_faqadd3__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__ionic_native_browser_tab__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__ionic_native_background_mode__ = __webpack_require__(125);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__ionic_native_push__ = __webpack_require__(81);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__sharemodal_sharemodal__ = __webpack_require__(38);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};




























var HomePage = /** @class */ (function () {
    function HomePage(navCtrl, navParams, modalCtrl, http, alertCtrl, globals, events, toast, socialSharing, localNotifications, platform, storage, appMinimize, browserTab, backgroundMode, push, viewCtrl, imagePicker, androidPermissions, receiveError) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.modalCtrl = modalCtrl;
        this.http = http;
        this.alertCtrl = alertCtrl;
        this.globals = globals;
        this.events = events;
        this.toast = toast;
        this.socialSharing = socialSharing;
        this.localNotifications = localNotifications;
        this.platform = platform;
        this.storage = storage;
        this.appMinimize = appMinimize;
        this.browserTab = browserTab;
        this.backgroundMode = backgroundMode;
        this.push = push;
        this.viewCtrl = viewCtrl;
        this.imagePicker = imagePicker;
        this.androidPermissions = androidPermissions;
        this.receiveError = receiveError;
        this.load = 1;
        this.inwait = 0;
        this.selectedTheme = [];
        this.favORrep = "";
        this.displayedPopoverID = "";
        this.image1 = 'assets/imgs/da_image/Rectangle\ 3.jpg';
        this.image2 = 'assets/imgs/da_image/Rectangle-05.jpg';
        this.image3 = 'assets/imgs/da_image/Rectangle-03.jpg';
        this.listFaQ = [];
        this.listFaQSorted = [];
        this.listTempFaQSorted = [];
        this.listFaQTheme = [];
        this.commentsByFaQ = [];
        this.infiniteList = [];
        this.paging = 0;
        this.canShareViaFacebook = false;
        this.canShareViaWhatsapp = false;
        this.canShareViaInstagram = false;
        this.canShareViaTwitter = false;
        this.listForms = [];
        this.listAds = [];
        this.listAdsSorted = [];
        this.offsetAd = 0;
        this.favFlash = '';
        this.asyncInterval = null;
        this.isInfiteScroll = false;
        this.isReloading = false;
        this.getNotifInterval = null;
        this.listFaqsToDelete = [];
        this.nFaq = {};
        this.updateUserDeviceTokenHelper = function (user_id, token, action) { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.http.post(this.globals.variables.urls.updateUserDeviceToken + "?user_id=" + user_id +
                    "&token=" + token + "&action=" + action, {
                    user_id: user_id,
                    token: token,
                    action: action
                }, {})
                    .then(function (data) {
                    console.log("Result from adding token");
                    console.log(JSON.stringify(data.data));
                }, function (error) {
                    console.log("Result from adding token");
                    console.log(JSON.stringify(error));
                });
                return [2 /*return*/];
            });
        }); };
        this.backgroundMode.enable();
        this.user = navParams.get('user');
        this.user_id = (this.user.id_User != null ? this.user.id_User : this.user.id);
        this.receiveError.subscribe('toremove', function (data) {
            if (data == 1) {
                _this.inwait = 0;
            }
        });
        this.receiveError.subscribe('stopwait', function (data) {
            if (data == 1) {
                _this.inwait = 0;
            }
        });
        // console.log('User : ');
        // console.log(JSON.stringify(this.user));
        this.localNotifications.on('click')
            .subscribe(function (data) {
            // console.log("Clicked notif");
            // console.log(JSON.stringify(data));
            //clearTimeout(this.notifTimeout);
            navCtrl.push(__WEBPACK_IMPORTED_MODULE_16__notifications_notifications__["a" /* NotificationsPage */], {
                user: _this.user
            });
        });
        // this.getListNotifications();
        // setTimeout(() => {
        // }, 1000);
        if (this.user.validate == 0) {
            this.presentCert();
        }
        this.getListTheme(null);
        events.subscribe("menu", function (page) {
        });
        events.subscribe("new:com", function (data) {
            if (_this.asyncInterval != null) {
                clearInterval(_this.asyncInterval);
                setTimeout(function () {
                    _this.asyncInterval = setInterval(function () {
                        _this.getListFaQsAsync(null, false);
                    }, 10000);
                }, 10000);
            }
            // if (this.listFaQSorted.length > 0) {
            //   // console.log("FaQs is more :");
            //   try{
            //   for (let i = 0; i < this.listFaQSorted.length; i++) {
            //     if((typeof (this.listFaQSorted[i]) !== undefined) && (typeof (this.listFaQSorted[i].faq) !== undefined) && (typeof (this.listFaQSorted[i].faq.id) !== undefined)) {
            //       if (this.listFaQSorted[i].faq.id == data.faq_id) {
            //         // console.log("Faq id identique");
            //         this.listFaQSorted[i].faq.coms.push(data.com);
            //         this.listFaQSorted[i].faq.comments_count += 1;
            //       }
            //     }
            //   }
            // } catch(e) {
            //   console.log("****************CHECK LIST***************");
            //   console.log(JSON.stringify(e));
            // }
            // }
        });
        // this.socialSharing.canShareVia('instagram')
        //   .then(data => {
        //     // console.log("Can we share via instagram");
        //     // console.log(JSON.stringify(data));
        //     this.canShareViaInstagram = true;
        //   },
        //     error => {
        //       console.log("We can't share via instagram");
        //       console.log(JSON.stringify(error));
        //     });
        // this.socialSharing.canShareVia('facebook')
        //   .then(data => {
        //     // console.log("Can we share via facebook");
        //     // console.log(JSON.stringify(data));
        //     this.canShareViaFacebook = true;
        //   },
        //     error => {
        //       console.log("We can't share via facebook");
        //       console.log(JSON.stringify(error));
        //     });
        // this.socialSharing.canShareVia('whatsapp')
        //   .then(data => {
        //     // console.log("Can we share via whatsapp");
        //     // console.log(JSON.stringify(data));
        //     this.canShareViaWhatsapp = true;
        //   },
        //     error => {
        //       console.log("We can't share via whatsapp");
        //       console.log(JSON.stringify(error));
        //     });
        // this.socialSharing.canShareVia('twitter')
        //   .then(data => {
        //     console.log("Can we share via twitter");
        //     console.log(JSON.stringify(data));
        //     this.canShareViaTwitter = true;
        //   },
        //     error => {
        //       console.log("We can't share via twitter");
        //       console.log(JSON.stringify(error));
        //     });
        platform.registerBackButtonAction(function () {
            if (platform.is('android')) {
                _this.appMinimize.minimize();
            }
            else if (platform.is('ios')) {
                platform.exitApp();
            }
        });
        // ADDED_02_07_2019
        // to check if we have permission
        // this.push.hasPermission()
        //   .then((res: any) => {
        //     if (res.isEnabled) {
        //       console.log('We have permission to send push notifications');
        //     } else {
        //       console.log('We do not have permission to send push notifications');
        //     }
        //   });
        // // Create a channel (Android O and above). You'll need to provide the id, description and importance properties.
        // this.push.createChannel({
        //   id: "dentartchannel1",
        //   description: "DentArt channel",
        //   // The importance property goes from 1 = Lowest, 2 = Low, 3 = Normal, 4 = High and 5 = Highest.
        //   importance: 3
        // }).then(() => console.log('DentArt channel created'));
        // // to initialize push notifications
        // const options: PushOptions = {
        //   android: {},
        //   ios: {
        //     alert: 'true',
        //     badge: true,
        //     sound: 'false'
        //   },
        //   windows: {},
        //   browser: {
        //     pushServiceURL: 'http://push.api.phonegap.com/v1/push'
        //   }
        // };
        // const pushObject: PushObject = this.push.init(options);
        // pushObject.on('notification').subscribe((notification: any) => {
        //   console.log('Received a notification')
        //   console.log(notification)
        // });
        // pushObject.on('registration').subscribe((registration: any) => {
        //   console.log('Device registered')
        //   console.log(JSON.stringify(registration))
        // });
        // pushObject.on('error').subscribe(error => console.error('Error with Push plugin', error));   
        this.backgroundMode.on("activate").subscribe(function () {
            if (_this.getNotifInterval != null) {
                clearInterval(_this.getNotifInterval);
                _this.getNotifInterval = null;
            }
            _this.getNotifInterval = setInterval(function () {
                console.log("Background mode activated .");
                _this.getListNotifications();
                _this.getListNotificationsNewPost();
                _this.getListNotificationsByLiked();
                _this.getListNotificationsByShared();
                _this.getListNotificationsByFavorite();
            }, 5000);
        });
        this.backgroundMode.on("deactivate").subscribe(function () {
            // console.log("Background mode deactivated .")
            // if(this.getNotifInterval != null){
            //   clearInterval(this.getNotifInterval)
            //   this.getNotifInterval = null
            // }
            // this.getNotifInterval = setInterval(() => {
            //   console.log("Background mode deactivated .")
            //   this.getListNotifications()
            //   this.getListNotificationsNewPost()
            // }, 5000) 
        });
        events.subscribe("faq:update", function (faq) {
            console.log("Faq ID event update :", faq.faq.id);
            var faq_id = faq.type == "faq" ? faq.faq.id : faq.id;
            // this.displayPopover("popover" + faq_id)
            // this.displayedPopoverID = ""
            _this.getSingleFaQUpdate(faq.faq.id);
        });
        events.subscribe("faq:delete", function (faq) {
            console.log("Faq ID event delete :");
            console.log(JSON.stringify(faq.faq.id));
            _this.deleteFaQ(faq, false);
        });
        var options = {
            android: {
                senderID: "771272176865"
            },
            ios: {
                alert: true,
                badge: true,
                sound: true
            },
            windows: {},
            browser: {
                pushServiceURL: 'http://push.api.phonegap.com/v1/push'
            }
        };
        var pushObject = this.push.init(options);
        pushObject.on('notification').subscribe(function (notification) {
            console.log('Received a notification');
            console.log(notification);
        });
        pushObject.on('registration').subscribe(function (registration) { return __awaiter(_this, void 0, void 0, function () {
            var tk, user_id;
            return __generator(this, function (_a) {
                console.log('Device registered');
                console.log(JSON.stringify(registration));
                tk = (registration.token != null ? registration.token : registration.registrationId);
                user_id = (this.user.id_User != null ? this.user.id_User : this.user.id);
                console.log((this.user.id_User != null ? this.user.id_User : this.user.id));
                console.log(tk);
                this.updateUserDeviceTokenHelper(user_id, tk, "add");
                storage.set("device_token", tk)
                    .then(function (data) {
                    console.log("Token saved");
                    console.log(JSON.stringify(data));
                }, function (error) {
                    console.log("Error saving token");
                    console.log(JSON.stringify(error));
                });
                return [2 /*return*/];
            });
        }); });
        pushObject.on('error').subscribe(function (error) { return console.error('Error with Push plugin', error); });
    }
    HomePage.prototype.requestAllPermissions = function () {
        var _this = this;
        this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.CAMERA).then(function (result) {
            console.log('Has permission?', result.hasPermission);
        }, function (err) { return _this.androidPermissions.requestPermission(_this.androidPermissions.PERMISSION.CAMERA); });
        this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.WRITE_EXTERNAL_STORAGE).then(function (result) {
            console.log('Has permission?', result.hasPermission);
        }, function (err) { return _this.androidPermissions.requestPermission(_this.androidPermissions.PERMISSION.WRITE_EXTERNAL_STORAGE); });
        this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.READ_EXTERNAL_STORAGE).then(function (result) {
            console.log('Has permission?', result.hasPermission);
        }, function (err) { return _this.androidPermissions.requestPermission(_this.androidPermissions.PERMISSION.READ_EXTERNAL_STORAGE); });
    };
    HomePage.prototype.requestReadPremission = function () {
        var _this = this;
        this.imagePicker.requestReadPermission()
            .then(function (value) {
            console.log("Permission Granted");
            console.log(JSON.stringify(value));
        }, function (reason) {
            console.log("Reason from read permission request");
            console.log(JSON.stringify(reason));
            _this.viewCtrl.dismiss();
        });
    };
    HomePage.prototype.ionViewWillEnter = function () {
        var _this = this;
        if (this.getNotifInterval != null) {
            clearInterval(this.getNotifInterval);
            this.getNotifInterval = null;
        }
        this.getNotifInterval = setInterval(function () {
            console.log("Background mode view loaded .");
            _this.getListNotifications();
            _this.getListNotificationsNewPost();
            _this.getListNotificationsByLiked();
            _this.getListNotificationsByShared();
            _this.getListNotificationsByFavorite();
        }, 5000);
        this.platform.registerBackButtonAction(function () {
            if (_this.platform.is('android')) {
                _this.appMinimize.minimize();
            }
            else if (_this.platform.is('ios')) {
                _this.platform.exitApp();
            }
        });
    };
    HomePage.prototype.ionViewDidLoad = function () {
        this.requestReadPremission();
        this.requestAllPermissions();
    };
    HomePage.prototype.ionViewWillLeave = function () {
        // if (this.getNotifInterval != null) {
        //   clearInterval(this.getNotifInterval)
        //   this.getNotifInterval = null
        // }
        // this.backgroundMode.enable()
    };
    HomePage.prototype.openProfil = function () {
        var adPage = __WEBPACK_IMPORTED_MODULE_14__uprofil_uprofil__["a" /* UprofilPage */];
        this.navCtrl.push(adPage, {
            user: this.user
        }, {
            animate: true
        });
    };
    HomePage.prototype.openURL = function (url) {
        var _this = this;
        console.log(url);
        if (url != '') {
            this.browserTab.isAvailable()
                .then(function (isAvailable) {
                if (isAvailable) {
                    _this.browserTab.openUrl(url);
                }
                else {
                    _this.toast.show("Navigateur non disponible", "2000", "bottom").subscribe(function (toast) {
                        console.log(JSON.stringify(toast));
                    });
                }
            });
        }
        else {
            this.toast.show("Pas d'URL pour cette pub", "2000", "bottom").subscribe(function (toast) {
                console.log(toast);
            });
        }
    };
    HomePage.prototype.openMenu = function () {
        var _this = this;
        var menu = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_9__menu_menu__["a" /* MenuPage */], {
            user: this.user
        }, {
            enterAnimation: 'modal-translate-up-enter',
            leaveAnimation: 'modal-translate-up-leave'
        });
        //let menu = MenuPage;
        menu.onDidDismiss(function (page) {
            if (page.title == "Partages") {
                //
            }
            else if (page.title == "profil") {
                var adPage = __WEBPACK_IMPORTED_MODULE_14__uprofil_uprofil__["a" /* UprofilPage */];
                _this.navCtrl.push(adPage, {
                    user: _this.user
                }, {
                    animate: true
                });
            }
            else if (page.title == "Annonces") {
                var adPage = __WEBPACK_IMPORTED_MODULE_10__annonces_annonces__["a" /* AnnoncesPage */];
                _this.navCtrl.push(adPage, {
                    user: _this.user
                }, {
                    animate: true
                });
            }
            else if (page.title == "Formations") {
                var formPage = __WEBPACK_IMPORTED_MODULE_12__formations_formations__["a" /* FormationsPage */];
                _this.navCtrl.push(formPage, {
                    user: _this.user
                }, {
                    animate: true
                });
            }
            else if (page.title == "News") {
                var actuPage = __WEBPACK_IMPORTED_MODULE_13__a_savoir_a_savoir__["a" /* ASavoirPage */];
                _this.navCtrl.push(actuPage, {
                    user: _this.user
                }, {
                    animate: true
                });
            }
            else if (page.title == "Mes alertes") {
                var notif = __WEBPACK_IMPORTED_MODULE_16__notifications_notifications__["a" /* NotificationsPage */];
                _this.navCtrl.push(notif, {
                    user: _this.user
                }, {
                    animate: true
                });
            }
            else if (page.title == 'mesannonces') {
                var notif = __WEBPACK_IMPORTED_MODULE_19__mesannonces_mesannonces__["a" /* MesannoncesPage */];
                _this.navCtrl.push(notif, {
                    user: _this.user
                }, {
                    animate: true
                });
            }
            else if (page.title == "deconnexion") {
                _this.events.publish('user:logedOut', _this.user);
                _this.load = 1;
                _this.storage.set('partages', null);
                _this.storage.set('user', null)
                    .then(function (data) {
                    console.log(JSON.stringify(data));
                    _this.storage.clear();
                    setTimeout(function () {
                        _this.load = 0;
                        _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_11__dentart_dentart__["a" /* DentartPage */], {}, {
                            animate: true
                        });
                    }, 500);
                }, function (error) {
                    console.log(JSON.stringify(error));
                });
            }
            else if (page.title == "") {
                //
            }
        });
        menu.present();
    };
    HomePage.prototype.presentCert = function () {
        var cert = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_4__popupcert_popupcert__["a" /* PopupcertPage */], {
            user: this.user
        });
        cert.onDidDismiss(function (data) {
            //console.log(data);
        });
        cert.present();
    };
    HomePage.prototype.comment = function (faq, source) {
        if (typeof (faq.temp) !== undefined && faq.temp == 1) {
            this.toast.show("En cours de chargement...\nVeuillez patienter", "6000", "top")
                .subscribe(function (toast) {
                console.log(JSON.stringify(toast));
            });
            return;
        }
        // event.stopPropagation()
        var fcom = __WEBPACK_IMPORTED_MODULE_5__faqcom_faqcom__["a" /* FaqcomPage */];
        this.navCtrl.push(fcom, {
            faq: faq,
            user: this.user,
            source: source,
            theme: this.listFaQTheme
        });
    };
    HomePage.prototype.showFilter = function () {
        var _this = this;
        var filter = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_6__faqfilter_faqfilter__["a" /* FaqfilterPage */], {
            user: this.user,
            theme: this.listFaQTheme,
            title: "Filtres",
            selectBefore: this.selectedTheme
        });
        filter.onDidDismiss(function (data) {
            _this.load = 1;
            _this.selectedTheme = data;
            if (data.id == 'all') {
                //this.listFaQSorted = this.listFaQ;
                _this.offsetAd = 0;
                _this.selectedTheme = [];
                _this.paging = 0;
                _this.listAds = [];
                _this.listAdsSorted = [];
                _this.listFaQ = [];
                _this.listFaQSorted = [];
                _this.getListFaQs(null, false);
            }
            else if (data.id == 'retour') {
                //
            }
            else {
                if (_this.selectedTheme.length > 0) {
                    //this.sortFaQByFilter();
                    _this.offsetAd = 0;
                    _this.paging = 0;
                    _this.listAds = [];
                    _this.listAdsSorted = [];
                    _this.listFaQ = [];
                    _this.listFaQSorted = [];
                    _this.getListFaQs(null, false);
                }
                else {
                    //this.listFaQSorted = this.listFaQ;
                }
            }
            // console.log("Selected theme :");
            //console.log(JSON.stringify(this.selectedTheme));
        });
        filter.present();
    };
    HomePage.prototype.sortFaQByFilter = function () {
        var _this = this;
        if (this.selectedTheme.length > 0) {
            this.listFaQSorted = this.listFaQ.filter(function (faq) {
                for (var z = 0; z < _this.selectedTheme.length; z++) {
                    if (faq.theme.id == _this.selectedTheme[z].id) {
                        return faq;
                    }
                }
            });
        }
        else {
            this.listFaQSorted = this.listFaQ;
        }
    };
    HomePage.prototype.newPub = function () {
        var _this = this;
        var rpc = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_23__faqadd3_faqadd3__["a" /* Faqadd3Page */], {
            user: this.user,
            theme: this.listFaQTheme,
            selectedTheme: this.selectedTheme,
            source: 'newpub',
            img: null
        });
        rpc.onDidDismiss(function (data) {
            _this.platform.registerBackButtonAction(function () {
                // 
            });
            // console.log(JSON.stringify(this.nFaq));
            if (data !== null && data.plch !== null) {
                if (_this.asyncInterval != null) {
                    clearInterval(_this.asyncInterval);
                    setTimeout(function () {
                        _this.asyncInterval = setInterval(function () {
                            _this.getListFaQsAsync(null, false);
                        }, 10000);
                    }, 10000);
                }
                // console.log("eto---------------eto");
                // console.log(JSON.stringify(data.plch.faq_imgs));
                var d = new Date();
                var datestring = ("0" + d.getDate()).slice(-2) + "/" + ("0" + (d.getMonth() + 1)).slice(-2) + "/" +
                    d.getFullYear() + " " + ("0" + d.getHours()).slice(-2) + ":" + ("0" + d.getMinutes()).slice(-2) /* + ":" + ("0" + d.getSeconds()).slice(-2)*/;
                _this.nFaq.faq = {
                    "id": 0,
                    "url": "",
                    "date": datestring,
                    "title": "",
                    "description": data.plch.faq_description,
                    "no_html_description": data.plch.faq_description,
                    "author_id": _this.user.id,
                    "theme": data.plch.faq_theme,
                    "faq_image_1": (data.plch.isset_img > 0) ? data.plch.faq_imgs[0].data.nativeURL : "",
                    "faq_image_2": (data.plch.faq_imgs.length > 1) ? data.plch.faq_imgs[1].data.nativeURL : "",
                    "faq_image_3": (data.plch.faq_imgs.length > 2) ? data.plch.faq_imgs[2].data.nativeURL : "",
                    "faq_image_4": (data.plch.faq_imgs.length == 4) ? data.plch.faq_imgs[3].data.nativeURL : "",
                    "user_favorite": 0,
                    "user_shared": 0,
                    "user_report": 0,
                    "user_like": 0,
                    "comments": [],
                    "favorite_count": 0,
                    "share_count": 0,
                    "info_utilisateur": _this.user,
                    "time": Date.now(),
                    "images_count": data.plch.faq_imgs.length,
                    "comments_count": 0,
                    "coms": [],
                    "char70": data.plch.faq_description,
                    "dateFR": datestring,
                    "uniqid": data.plch.uniqid
                };
                _this.nFaq.theme = data.plch.faq_selectedTheme;
                _this.nFaq.type = "faq";
                _this.nFaq.author = _this.user;
                _this.nFaq.temp = 1;
                _this.listTempFaQSorted.splice(0, 0, _this.nFaq);
                // setTimeout(() => {
                //   this.updateStored(this.listFaQSorted);
                // },250)
                _this.nFaq = {};
                _this.inwait = 1;
                // console.log("dededededede")
                // console.log(JSON.stringify(this.listFaQSorted))
            }
        });
        rpc.present();
    };
    HomePage.prototype.getSingleFaQ = function (id_faq) {
        var _this = this;
        this.http.get(this.globals.variables.urls.getSingleFaQ + '?faq_id=' + id_faq, {}, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            if (res.comments) {
                var coms = [];
                for (var elem in res.comments) {
                    coms.push(res.comments[elem]);
                }
                var images_count = 0;
                var char70 = "";
                if (res.description.length > 200) {
                    char70 = "" + res.description.substr(0, 199) + "...";
                }
                else {
                    char70 = res.description;
                }
                if (res.faq_image_1 != '' && res.faq_image_1 != null)
                    images_count += 1;
                if (res.faq_image_2 != '' && res.faq_image_2 != null)
                    images_count += 1;
                if (res.faq_image_3 != '' && res.faq_image_3 != null)
                    images_count += 1;
                if (res.faq_image_4 != '' && res.faq_image_4 != null)
                    images_count += 1;
                res.images_count = images_count;
                res.comments_count = coms.length;
                res.coms = coms;
                res.char70 = char70;
            }
            for (var j = 0; j < _this.listFaQTheme.length; j++) {
                if (_this.listFaQTheme[j].id == res.theme) {
                    var newFaQ = {
                        faq: res,
                        theme: _this.listFaQTheme[j]
                    };
                    _this.getFaQAuthor(res.author_id, 0, 1, newFaQ, null, 'toTop', false);
                }
            }
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    HomePage.prototype.getSingleFaQUpdate = function (id_faq) {
        var _this = this;
        this.http.get(this.globals.variables.urls.getSingleFaQ + '?faq_id=' + id_faq, {}, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            if (res.comments) {
                var coms = [];
                for (var elem in res.comments) {
                    coms.push(res.comments[elem]);
                }
                var images_count = 0;
                var char70 = "";
                if (res.description.length > 200) {
                    char70 = "" + res.description.substr(0, 199) + "...";
                }
                else {
                    char70 = res.description;
                }
                if (res.faq_image_1 != '' && res.faq_image_1 != null)
                    images_count += 1;
                if (res.faq_image_2 != '' && res.faq_image_2 != null)
                    images_count += 1;
                if (res.faq_image_3 != '' && res.faq_image_3 != null)
                    images_count += 1;
                if (res.faq_image_4 != '' && res.faq_image_4 != null)
                    images_count += 1;
                res.images_count = images_count;
                res.comments_count = coms.length;
                res.coms = coms;
                res.char70 = char70;
                res.dateFR = res.date.substr(8, 2) + '/' + res.date.substr(5, 2) + '/' +
                    res.date.substr(0, 4) + ' ' + res.date.substr(11, 5);
            }
            for (var b = 0; b < _this.listFaQSorted.length; b++) {
                console.log("Faq type : " + _this.listFaQSorted[b].type);
                if (_this.listFaQSorted[b].type == 'faq') {
                    if (id_faq == _this.listFaQSorted[b].faq.id) {
                        console.log("Found faq :");
                        var newFaQ = {
                            faq: res,
                            theme: _this.listFaQSorted[b].theme,
                            author: _this.listFaQSorted[b].author,
                            type: "faq"
                        };
                        // this.listFaQSorted[b] = newFaQ
                        _this.listFaQSorted[b].faq = newFaQ.faq;
                        _this.listFaQSorted[b].theme = newFaQ.theme;
                        _this.listFaQSorted[b].type = "faq";
                        _this.listFaQSorted[b].author = _this.listFaQSorted[b].author;
                        // this.updateStored(this.listFaQSorted);
                    }
                }
            }
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    HomePage.prototype.arrayBufferToBase64 = function (buffer) {
        var binary = '';
        var bytes = [].slice.call(new Uint8Array(buffer));
        bytes.forEach(function (b) { return binary += String.fromCharCode(b); });
        return window.btoa(binary);
    };
    ;
    HomePage.prototype.getListFaQs = function (infiniteScroll, isRefresh, newPost, inStore) {
        var _this = this;
        if (newPost === void 0) { newPost = null; }
        if (inStore === void 0) { inStore = 0; }
        var u = "";
        inStore = 0;
        for (var t = 0; t < this.selectedTheme.length; t++) {
            if (t < this.selectedTheme.length - 1) {
                u += this.selectedTheme[t].id + "-";
            }
            else if (t == this.selectedTheme.length - 1) {
                u += this.selectedTheme[t].id;
            }
        }
        var user_id = (this.user.id_User != null ? this.user.id_User : this.user.id);
        console.log("************IS REFRESH : " + isRefresh + "*************");
        console.log("************IS inStore : " + inStore + "*************");
        if (inStore == 1) {
            this.cleanStored();
            this.storage.get('partages').then(function (data) { return __awaiter(_this, void 0, void 0, function () {
                var _this = this;
                var res, i, coms, elem, images_count, char70, time, NowDate, j, newFaQ, toWhere;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            this.load = 0;
                            res = JSON.parse(data);
                            console.log("refresh:");
                            console.log("RELOADING : " + this.isReloading + " INFINITE SCROLL : " + this.isInfiteScroll);
                            console.log(JSON.stringify(res));
                            console.log("after refresh");
                            if (!(res.length <= 0)) return [3 /*break*/, 2];
                            // this.load = 0;
                            return [4 /*yield*/, this.getListAds(infiniteScroll, null, "toBottom")];
                        case 1:
                            // this.load = 0;
                            _a.sent();
                            console.log('Async operation has ended');
                            if (infiniteScroll != null) {
                                infiniteScroll.complete();
                                this.isInfiteScroll = false;
                            }
                            return [3 /*break*/, 14];
                        case 2:
                            i = 0;
                            _a.label = 3;
                        case 3:
                            if (!(i < res.length)) return [3 /*break*/, 13];
                            if (!(!isRefresh && this.isReloading)) return [3 /*break*/, 4];
                            if (infiniteScroll != null) {
                                infiniteScroll.complete();
                            }
                            this.isInfiteScroll = false;
                            return [3 /*break*/, 13];
                        case 4:
                            if (!((isRefresh && this.isReloading) || (!isRefresh && !this.isReloading))) return [3 /*break*/, 12];
                            // console.log("===================////////////////////////////==================")
                            if (res[i].comments) {
                                coms = [];
                                for (elem in res[i].comments) {
                                    coms.push(res[i].comments[elem]);
                                }
                                images_count = 0;
                                char70 = "";
                                time = 0;
                                if (res[i].description.length > 200) {
                                    char70 = "" + res[i].description.substr(0, 199) + "...";
                                }
                                else {
                                    char70 = res[i].description;
                                }
                                if (res[i].faq_image_1 != '' && res[i].faq_image_1 != null)
                                    images_count += 1;
                                if (res[i].faq_image_2 != '' && res[i].faq_image_2 != null)
                                    images_count += 1;
                                if (res[i].faq_image_3 != '' && res[i].faq_image_3 != null)
                                    images_count += 1;
                                if (res[i].faq_image_4 != '' && res[i].faq_image_4 != null)
                                    images_count += 1;
                                NowDate = new Date(res[i].date);
                                time = NowDate.getTime();
                                res[i].time = time;
                                res[i].images_count = images_count;
                                res[i].comments_count = coms.length;
                                res[i].coms = coms;
                                res[i].char70 = char70;
                                res[i].dateFR = res[i].date.substr(8, 2) + '/' + res[i].date.substr(5, 2) + '/' +
                                    res[i].date.substr(0, 4) + ' ' + res[i].date.substr(11, 5);
                            }
                            j = 0;
                            _a.label = 5;
                        case 5:
                            if (!(j < this.listFaQTheme.length)) return [3 /*break*/, 12];
                            if (!(this.listFaQTheme[j].id == res[i].theme)) return [3 /*break*/, 11];
                            newFaQ = {
                                faq: res[i],
                                theme: this.listFaQTheme[j],
                                author: res[i].info_utilisateur,
                                type: "faq" //Added_LE_28_06_2019
                            };
                            toWhere = 'toBottom';
                            if (!(!isRefresh && this.isReloading)) return [3 /*break*/, 6];
                            if (infiniteScroll != null) {
                                infiniteScroll.complete();
                            }
                            this.isInfiteScroll = false;
                            return [2 /*return*/];
                        case 6:
                            if (!((!isRefresh && !this.isReloading) || (isRefresh && this.isReloading))) return [3 /*break*/, 11];
                            if (!(toWhere == "toTop" && this.asyncInterval != null)) return [3 /*break*/, 7];
                            this.listFaQSorted.splice(0, 0, newFaQ);
                            return [3 /*break*/, 11];
                        case 7:
                            if (!(toWhere == 'inplace')) return [3 /*break*/, 8];
                            // this.listFaQSorted[i] = newFaQ
                            this.listFaQSorted[i].faq = newFaQ.faq;
                            this.listFaQSorted[i].theme = newFaQ.theme;
                            this.listFaQSorted[i].type = "faq";
                            this.listFaQSorted[i].author = JSON.parse(data).info_utilisateur;
                            return [3 /*break*/, 11];
                        case 8:
                            this.listFaQSorted.push(newFaQ);
                            if (!(i == res.length - 1)) return [3 /*break*/, 10];
                            if (this.isReloading) {
                                this.isReloading = false;
                            }
                            return [4 /*yield*/, this.getListAds(infiniteScroll, newFaQ, "toBottom")];
                        case 9:
                            _a.sent();
                            if (infiniteScroll != null) {
                                console.log('Async operation has ended');
                                infiniteScroll.complete();
                                this.isInfiteScroll = false;
                            }
                            else {
                                this.asyncInterval = setInterval(function () {
                                    if (_this.selectedTheme.length <= 0) {
                                        _this.getListFaQsAsync(null, false);
                                    }
                                }, 10000);
                            }
                            _a.label = 10;
                        case 10:
                            console.log(newFaQ.faq.time);
                            this.listFaQSorted.sort(function (faq1, faq2) {
                                if (faq1.faq != null && faq2.faq != null)
                                    return -(faq1.faq.time - faq2.faq.time);
                                else
                                    return 1;
                            });
                            _a.label = 11;
                        case 11:
                            j++;
                            return [3 /*break*/, 5];
                        case 12:
                            i++;
                            return [3 /*break*/, 3];
                        case 13:
                            console.log("after refresh");
                            _a.label = 14;
                        case 14: return [2 /*return*/];
                    }
                });
            }); }, function (error) {
                _this.load = 0;
                console.log(JSON.stringify(error));
            });
        }
        else {
            this.http.get(this.globals.variables.urls.listFaQ + '?offset=' + this.paging + "&category=" + u + "&user_id=" + user_id + "&limit=5", {}, {})
                .then(function (data) { return __awaiter(_this, void 0, void 0, function () {
                var _this = this;
                var res, i, coms, elem, images_count, char70, time, NowDate, j, newFaQ, toWhere;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            res = JSON.parse(data.data);
                            console.log("**************ALL FAQS****************");
                            console.log(JSON.stringify(res));
                            if (!(res.length <= 0)) return [3 /*break*/, 1];
                            // this.load = 0;
                            this.getListAds(infiniteScroll, null, "toBottom");
                            console.log('Async operation has ended');
                            if (infiniteScroll != null) {
                                infiniteScroll.complete();
                                this.isInfiteScroll = false;
                            }
                            return [3 /*break*/, 12];
                        case 1:
                            i = 0;
                            _a.label = 2;
                        case 2:
                            if (!(i < res.length)) return [3 /*break*/, 12];
                            if (!(!isRefresh && this.isReloading)) return [3 /*break*/, 3];
                            if (infiniteScroll != null) {
                                infiniteScroll.complete();
                            }
                            this.isInfiteScroll = false;
                            return [3 /*break*/, 12];
                        case 3:
                            if (!((isRefresh && this.isReloading) || (!isRefresh && !this.isReloading))) return [3 /*break*/, 11];
                            // console.log("===================////////////////////////////==================")
                            if (res[i].comments) {
                                coms = [];
                                for (elem in res[i].comments) {
                                    coms.push(res[i].comments[elem]);
                                }
                                images_count = 0;
                                char70 = "";
                                time = 0;
                                if (res[i].description.length > 200) {
                                    char70 = "" + res[i].description.substr(0, 199) + "...";
                                }
                                else {
                                    char70 = res[i].description;
                                }
                                if (res[i].faq_image_1 != '' && res[i].faq_image_1 != null)
                                    images_count += 1;
                                if (res[i].faq_image_2 != '' && res[i].faq_image_2 != null)
                                    images_count += 1;
                                if (res[i].faq_image_3 != '' && res[i].faq_image_3 != null)
                                    images_count += 1;
                                if (res[i].faq_image_4 != '' && res[i].faq_image_4 != null)
                                    images_count += 1;
                                NowDate = new Date(res[i].date);
                                time = NowDate.getTime();
                                res[i].time = time;
                                res[i].images_count = images_count;
                                res[i].comments_count = coms.length;
                                res[i].coms = coms;
                                res[i].char70 = char70;
                                res[i].dateFR = res[i].date.substr(8, 2) + '/' + res[i].date.substr(5, 2) + '/' +
                                    res[i].date.substr(0, 4) + ' ' + res[i].date.substr(11, 5);
                            }
                            j = 0;
                            _a.label = 4;
                        case 4:
                            if (!(j < this.listFaQTheme.length)) return [3 /*break*/, 11];
                            if (!(this.listFaQTheme[j].id == res[i].theme)) return [3 /*break*/, 10];
                            newFaQ = {
                                faq: res[i],
                                theme: this.listFaQTheme[j],
                                author: res[i].info_utilisateur,
                                type: "faq" //Added_LE_28_06_2019
                            };
                            toWhere = 'toBottom';
                            if (!(!isRefresh && this.isReloading)) return [3 /*break*/, 5];
                            if (infiniteScroll != null) {
                                infiniteScroll.complete();
                            }
                            this.isInfiteScroll = false;
                            return [2 /*return*/];
                        case 5:
                            if (!((!isRefresh && !this.isReloading) || (isRefresh && this.isReloading))) return [3 /*break*/, 10];
                            if (!(toWhere == "toTop" && this.asyncInterval != null)) return [3 /*break*/, 6];
                            this.listFaQSorted.splice(0, 0, newFaQ);
                            return [3 /*break*/, 10];
                        case 6:
                            if (!(toWhere == 'inplace')) return [3 /*break*/, 7];
                            // this.listFaQSorted[i] = newFaQ
                            this.listFaQSorted[i].faq = newFaQ.faq;
                            this.listFaQSorted[i].theme = newFaQ.theme;
                            this.listFaQSorted[i].type = "faq";
                            this.listFaQSorted[i].author = JSON.parse(data.data).info_utilisateur;
                            return [3 /*break*/, 10];
                        case 7:
                            this.listFaQSorted.push(newFaQ);
                            if (!(i == res.length - 1)) return [3 /*break*/, 9];
                            if (this.isReloading) {
                                this.isReloading = false;
                            }
                            return [4 /*yield*/, this.getListAds(infiniteScroll, newFaQ, "toBottom")];
                        case 8:
                            _a.sent();
                            if (infiniteScroll != null) {
                                console.log('Async operation has ended');
                                infiniteScroll.complete();
                                this.isInfiteScroll = false;
                            }
                            else {
                                this.asyncInterval = setInterval(function () {
                                    if (_this.selectedTheme.length <= 0) {
                                        _this.getListFaQsAsync(null, false);
                                    }
                                }, 10000);
                            }
                            _a.label = 9;
                        case 9:
                            console.log(newFaQ.faq.time);
                            this.listFaQSorted.sort(function (faq1, faq2) {
                                if (faq1.faq != null && faq2.faq != null)
                                    return -(faq1.faq.time - faq2.faq.time);
                                else
                                    return 1;
                            });
                            _a.label = 10;
                        case 10:
                            j++;
                            return [3 /*break*/, 4];
                        case 11:
                            i++;
                            return [3 /*break*/, 2];
                        case 12: return [2 /*return*/];
                    }
                });
            }); }, function (error) {
                _this.load = 0;
                console.log(JSON.stringify(error));
            });
        }
    };
    HomePage.prototype.getListFaQsAsync = function (infiniteScroll, isRefresh) {
        var _this = this;
        var u = "";
        for (var t = 0; t < this.selectedTheme.length; t++) {
            if (t < this.selectedTheme.length - 1) {
                u += this.selectedTheme[t].id + "-";
            }
            else if (t == this.selectedTheme.length - 1) {
                u += this.selectedTheme[t].id;
            }
        }
        var user_id = (this.user.id_User != null ? this.user.id_User : this.user.id);
        this.http.get(this.globals.variables.urls.listFaQ + "?offset=0&category=" + u + "&user_id=" + user_id + "&limit=1&reload=1", {}, {})
            .then(function (data) { return __awaiter(_this, void 0, void 0, function () {
            var res, findToDelete, i, coms, elem, images_count, char70, j, newFaQ, ppps, s;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        res = JSON.parse(data.data);
                        if (!(res.length <= 0)) return [3 /*break*/, 1];
                        // this.load = 0;
                        // this.getListAds(infiniteScroll, null, "toBottom");
                        console.log('Async operation has ended');
                        if (infiniteScroll != null) {
                            infiniteScroll.complete();
                            this.isInfiteScroll = false;
                        }
                        return [3 /*break*/, 8];
                    case 1:
                        findToDelete = this.listFaqsToDelete.find(function (faq) {
                            var faqID = faq.faq.id ? faq.faq.id : faq.id;
                            return faqID === res[0].id;
                        });
                        if (findToDelete != null) {
                            console.log("To delete found ", findToDelete);
                            return [2 /*return*/, true];
                        }
                        i = 0;
                        _a.label = 2;
                    case 2:
                        if (!(i < res.length)) return [3 /*break*/, 8];
                        if (!(!isRefresh && this.isReloading)) return [3 /*break*/, 3];
                        if (infiniteScroll != null) {
                            infiniteScroll.complete();
                        }
                        this.isInfiteScroll = false;
                        return [3 /*break*/, 8];
                    case 3:
                        if (!((isRefresh && this.isReloading) || (!isRefresh && !this.isReloading))) return [3 /*break*/, 7];
                        // console.log("===================////////////////////////////==================")
                        if (res[i].comments) {
                            coms = [];
                            for (elem in res[i].comments) {
                                coms.push(res[i].comments[elem]);
                            }
                            images_count = 0;
                            char70 = "";
                            if (res[i].description.length > 200) {
                                char70 = "" + res[i].description.substr(0, 199) + "...";
                            }
                            else {
                                char70 = res[i].description;
                            }
                            if (res[i].faq_image_1 != '' && res[i].faq_image_1 != null)
                                images_count += 1;
                            if (res[i].faq_image_2 != '' && res[i].faq_image_2 != null)
                                images_count += 1;
                            if (res[i].faq_image_3 != '' && res[i].faq_image_3 != null)
                                images_count += 1;
                            if (res[i].faq_image_4 != '' && res[i].faq_image_4 != null)
                                images_count += 1;
                            res[i].images_count = images_count;
                            res[i].comments_count = coms.length;
                            res[i].coms = coms;
                            res[i].char70 = char70;
                            res[i].dateFR = res[i].date.substr(8, 2) + '/' + res[i].date.substr(5, 2) + '/' +
                                res[i].date.substr(0, 4) + ' ' + res[i].date.substr(11, 5);
                        }
                        j = 0;
                        _a.label = 4;
                    case 4:
                        if (!(j < this.listFaQTheme.length)) return [3 /*break*/, 7];
                        if (!(this.listFaQTheme[j].id == res[i].theme)) return [3 /*break*/, 6];
                        newFaQ = {
                            faq: res[i],
                            theme: this.listFaQTheme[j]
                        };
                        ppps = true;
                        for (s = 0; s < this.listFaQSorted.length; s++) {
                            if (this.listFaQSorted[s].type == 'faq' && newFaQ.faq.id == this.listFaQSorted[s].faq.id) {
                                ppps = false;
                                this.getFaQAuthor(res[i].author_id, s, res.length, newFaQ, infiniteScroll, 'inplace', isRefresh);
                                break;
                            }
                        }
                        if (!(ppps == true)) return [3 /*break*/, 6];
                        return [4 /*yield*/, this.getFaQAuthor(res[i].author_id, i, res.length, newFaQ, infiniteScroll, 'toTop', isRefresh)];
                    case 5:
                        _a.sent();
                        _a.label = 6;
                    case 6:
                        j++;
                        return [3 /*break*/, 4];
                    case 7:
                        i++;
                        return [3 /*break*/, 2];
                    case 8: return [2 /*return*/];
                }
            });
        }); }, function (error) {
            _this.load = 0;
            console.log(JSON.stringify(error));
        });
    };
    HomePage.prototype.refresh = function (refresherEvent) {
        var _this = this;
        this.inwait = 0;
        refresherEvent.complete();
        console.log(refresherEvent.startY);
        this.load = 1;
        this.isReloading = true;
        var listnerInfinite = null;
        listnerInfinite = setInterval(function () {
            console.log("listen the scroller");
            if (_this.isInfiteScroll) { }
            else {
                clearInterval(listnerInfinite);
                _this.listAds = [];
                _this.listAdsSorted = [];
                _this.listFaQ = [];
                _this.listFaQSorted = [];
                _this.offsetAd = 0;
                _this.paging = 0;
                if (_this.asyncInterval != null)
                    clearInterval(_this.asyncInterval);
                // if (refresherEvent != null) {
                //   refresherEvent.complete()
                // }
                _this.getListFaQs(null, true, null, 1);
            }
        }, 1000);
    };
    HomePage.prototype.getListTheme = function (refresherEvent) {
        var _this = this;
        //document.getElementById('load').style.display = 'inline';
        this.http.post(this.globals.variables.urls.listFaQTheme, {}, {})
            .then(function (data) {
            _this.listFaQTheme = JSON.parse(data.data);
            if (_this.listFaQTheme.length <= 0) {
                _this.load = 0;
            }
            //console.log(this.listFaQTheme);
            //document.getElementById('load').style.display = 'none';
            //this.showRPC();
            console.log("***************ENTREE HOME************");
            // this.storage.get('partages').then( async data => {
            //   let res = JSON.parse(data);
            _this.getListFaQs(null, false, null, 1);
            // }); 
        }, function (error) {
            _this.load = 0;
            console.log(JSON.stringify(error));
            //document.getElementById('load').style.display = 'none';
            //this.showRPC();
        });
    };
    HomePage.prototype.checkFaqList = function (newFaq) {
        var _this = this;
        if (newFaq === void 0) { newFaq = null; }
        if (newFaq !== null) {
            if (this.asyncInterval != null) {
                clearInterval(this.asyncInterval);
                setTimeout(function () {
                    _this.asyncInterval = setInterval(function () {
                        _this.getListFaQsAsync(null, false);
                    }, 10000);
                }, 10000);
            }
            console.log("*****************CHECK REPLACE IMAGE************");
            console.log(JSON.stringify(newFaq.faq.faq_image_1));
            console.log(JSON.stringify(newFaq.faq.uniqid));
            console.log(this.listTempFaQSorted[0].faq.uniqid);
            console.log(this.listTempFaQSorted.length);
            console.log(this.listTempFaQSorted[0].temp);
            console.log(JSON.stringify(this.listTempFaQSorted[0].faq.faq_image_1).substring(0, 25));
            if (this.listTempFaQSorted.length) {
                for (var si = 0; si < this.listTempFaQSorted.length; si++) {
                    if (newFaq.faq.faq_image_1 == "" && (typeof (this.listTempFaQSorted[si].temp) !== undefined && this.listTempFaQSorted[si].temp == 1) && (this.listTempFaQSorted[si].faq.faq_image_1 !== "") && typeof (this.listTempFaQSorted[si].faq.uniqid) !== undefined && this.listTempFaQSorted[si].faq.uniqid == newFaq.faq.uniqid) {
                        console.log("*****************NO REPLACE IMAGE************");
                        newFaq.faq.faq_image_1 = this.listTempFaQSorted[si].faq.faq_image_1;
                        newFaq.faq.faq_image_2 = this.listTempFaQSorted[si].faq.images_count > 1 ? this.listTempFaQSorted[si].faq.faq_image_2 : "";
                        newFaq.faq.faq_image_3 = this.listTempFaQSorted[si].faq.images_count > 2 ? this.listTempFaQSorted[si].faq.faq_image_3 : "";
                        newFaq.faq.faq_image_4 = this.listTempFaQSorted[si].faq.images_count == 4 ? this.listTempFaQSorted[si].faq.faq_image_4 : "";
                        newFaq.faq.images_count = this.listTempFaQSorted[si].faq.images_count;
                        break;
                    }
                }
            }
            console.log("*****************REPLACE TEMP FAQ************");
            // console.log(JSON.stringify(newFaq))
            this.inwait = 0;
            this.listFaQSorted.splice(0, 0, newFaq);
        }
        // if (this.listFaQSorted.length) {
        //     for (let si = 0; si < this.listFaQSorted.length; si++) {
        //       if (typeof (this.listFaQSorted[si].temp) !== undefined && this.listFaQSorted[si].temp == 1) {
        //         this.listFaQSorted.splice(si, 1);           
        //         // console.log(JSON.stringify(newFaq));
        //         break;
        //       }
        //     }
        // }
        // this.updateStored(this.listFaQSorted);
    };
    HomePage.prototype.getFaQAuthor = function (author_id, index, listLength, newFaQ, infiniteScroll, toWhere, isRefresh) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(author_id == this.user.id)) return [3 /*break*/, 7];
                        if (!(!isRefresh && this.isReloading)) return [3 /*break*/, 1];
                        if (infiniteScroll != null) {
                            infiniteScroll.complete();
                        }
                        this.isInfiteScroll = false;
                        return [2 /*return*/];
                    case 1:
                        if (!((!isRefresh && !this.isReloading) || (isRefresh && this.isReloading))) return [3 /*break*/, 6];
                        newFaQ.author = this.user;
                        newFaQ.type = "faq";
                        if (!(toWhere == "toTop" && this.asyncInterval != null)) return [3 /*break*/, 2];
                        if (this.selectedTheme.length <= 0) {
                            this.checkFaqList(newFaQ);
                        }
                        return [3 /*break*/, 6];
                    case 2:
                        if (!(toWhere == 'inplace')) return [3 /*break*/, 3];
                        // this.listFaQSorted.splice(index, 1, newFaQ);
                        this.listFaQSorted[index].faq = newFaQ.faq;
                        this.listFaQSorted[index].theme = newFaQ.theme;
                        this.listFaQSorted[index].type = "faq";
                        this.listFaQSorted[index].author = this.user;
                        // this.listFaQSorted[index] = newFaQ
                        console.log("***************updateSorted*************** 1");
                        return [3 /*break*/, 6];
                    case 3:
                        this.listFaQSorted.push(newFaQ);
                        console.log("***************updateSorted*************** 2");
                        if (!(index == listLength - 1)) return [3 /*break*/, 5];
                        if (this.isReloading) {
                            this.isReloading = false;
                        }
                        return [4 /*yield*/, this.getListAds(infiniteScroll, newFaQ, "toBottom")];
                    case 4:
                        _a.sent();
                        if (infiniteScroll != null) {
                            console.log('Async operation has ended');
                            infiniteScroll.complete();
                            this.isInfiteScroll = false;
                        }
                        else {
                            console.log("***************updateSorted ***************");
                            // this.updateStored(this.listFaQSorted);
                            this.asyncInterval = setInterval(function () {
                                if (_this.selectedTheme.length <= 0) {
                                    _this.getListFaQsAsync(null, false);
                                }
                            }, 10000);
                        }
                        _a.label = 5;
                    case 5:
                        console.log(newFaQ.faq.time);
                        this.listFaQSorted.sort(function (faq1, faq2) {
                            if (faq1.faq != null && faq2.faq != null)
                                return -(faq1.faq.time - faq2.faq.time);
                            else
                                return 1;
                        });
                        console.log("***************updateSorted*************** 3");
                        _a.label = 6;
                    case 6: return [3 /*break*/, 8];
                    case 7:
                        this.http.post(this.globals.variables.urls.getUserInfo + "?user_id=" + author_id, {
                            "user_id": "" + author_id
                        }, {})
                            .then(function (data) { return __awaiter(_this, void 0, void 0, function () {
                            var _this = this;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        if (!(!isRefresh && this.isReloading)) return [3 /*break*/, 1];
                                        if (infiniteScroll != null) {
                                            infiniteScroll.complete();
                                        }
                                        this.isInfiteScroll = false;
                                        return [2 /*return*/];
                                    case 1:
                                        if (!((!isRefresh && !this.isReloading) || (isRefresh && this.isReloading))) return [3 /*break*/, 6];
                                        newFaQ.author = JSON.parse(data.data).info_utilisateur;
                                        newFaQ.type = "faq";
                                        if (!(toWhere == "toTop" && this.asyncInterval != null)) return [3 /*break*/, 2];
                                        if (this.selectedTheme.length <= 0) {
                                            this.checkFaqList(newFaQ);
                                        }
                                        console.log("***************updateSorted*************** 4");
                                        return [3 /*break*/, 6];
                                    case 2:
                                        if (!(toWhere == 'inplace')) return [3 /*break*/, 3];
                                        // this.listFaQSorted.splice(index, 1, newFaQ);
                                        this.listFaQSorted[index].faq = newFaQ.faq;
                                        this.listFaQSorted[index].theme = newFaQ.theme;
                                        this.listFaQSorted[index].type = "faq";
                                        this.listFaQSorted[index].author = JSON.parse(data.data).info_utilisateur;
                                        // this.listFaQSorted[index] = newFaQ
                                        console.log("***************updateSorted*************** 5");
                                        return [3 /*break*/, 6];
                                    case 3:
                                        this.listFaQSorted.push(newFaQ);
                                        if (!(index == listLength - 1)) return [3 /*break*/, 5];
                                        if (this.isReloading) {
                                            this.isReloading = false;
                                        }
                                        return [4 /*yield*/, this.getListAds(infiniteScroll, newFaQ, "toBottom")];
                                    case 4:
                                        _a.sent();
                                        if (infiniteScroll != null) {
                                            console.log('Async operation has ended');
                                            infiniteScroll.complete();
                                            this.isInfiteScroll = false;
                                        }
                                        else {
                                            console.log("***************updateSorted*************** 6");
                                            // this.updateStored(this.listFaQSorted);
                                            this.asyncInterval = setInterval(function () {
                                                if (_this.selectedTheme.length <= 0) {
                                                    _this.getListFaQsAsync(null, false);
                                                }
                                            }, 10000);
                                        }
                                        _a.label = 5;
                                    case 5:
                                        console.log(newFaQ.faq.time);
                                        this.listFaQSorted.sort(function (faq1, faq2) {
                                            if (faq1.faq != null && faq2.faq != null)
                                                return -(faq1.faq.time - faq2.faq.time);
                                            else
                                                return 1;
                                        });
                                        console.log("***************updateSorted*************** 7");
                                        _a.label = 6;
                                    case 6: return [2 /*return*/];
                                }
                            });
                        }); }, function (error) {
                            _this.load = 0;
                            console.log(JSON.stringify(error));
                        });
                        _a.label = 8;
                    case 8: return [2 /*return*/];
                }
            });
        });
    };
    HomePage.prototype.getFaQInfos = function (id_faq) {
        //
    };
    HomePage.prototype.addToFavorite = function (faq) {
        var _this = this;
        if (typeof (faq.temp) !== undefined && faq.temp == 1) {
            this.toast.show("En cours de chargement...\nVeuillez patienter", "6000", "top")
                .subscribe(function (toast) {
                console.log(JSON.stringify(toast));
            });
            return;
        }
        // document.getElementById(idcol).classList.add("BGfadeDown");
        this.http.post(this.globals.variables.urls.addFavorite, {
            "user_id": (this.user.id_User != null ? this.user.id_User : this.user.id),
            "post_id": faq.type == 'ad' ? faq.id : faq.faq.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log(JSON.stringify(res));
            // document.getElementById(idcol).classList.remove("BGfadeDown");
            if (res.status == "ok") {
                if (faq.type == "faq") {
                    if (faq.faq.user_favorite == 1) {
                        faq.faq.favorite_count = parseInt(faq.faq.favorite_count) - 1;
                        faq.faq.user_favorite = 0;
                        _this.toast.show("Vous avez annulé votre \"J'aime\"", "2000", "bottom").subscribe(function (toast) {
                            console.log(toast);
                        });
                        return;
                    }
                    else if (faq.faq.user_favorite == 0) {
                        faq.faq.favorite_count = parseInt(faq.faq.favorite_count) + 1;
                        faq.faq.user_favorite = 1;
                        _this.toast.show("Vous avez aimé ce partage", "2000", "bottom").subscribe(function (toast) {
                            console.log(toast);
                        });
                        return;
                    }
                }
                else if (faq.type == "ad") {
                    if (faq.user_favorite == 1) {
                        faq.favorite_count = parseInt(faq.favorite_count) - 1;
                        faq.user_favorite = 0;
                        _this.toast.show("Vous avez annulé votre \"J'aime\"", "2000", "bottom").subscribe(function (toast) {
                            console.log(toast);
                        });
                        return;
                    }
                    else if (faq.user_favorite == 0) {
                        faq.favorite_count = parseInt(faq.favorite_count) + 1;
                        faq.user_favorite = 1;
                        _this.toast.show("Vous avez aimé ce partage", "2000", "bottom").subscribe(function (toast) {
                            console.log(toast);
                        });
                        return;
                    }
                }
            }
            else {
                console.log(JSON.stringify(res));
            }
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    HomePage.prototype.addToShare = function (faq) {
        var _this = this;
        //addToShare
        this.http.post(this.globals.variables.urls.addToShare, {
            "user_id": (this.user.id_User != null ? this.user.id_User : this.user.id),
            "post_id": faq.type == 'ad' ? faq.id : faq.faq.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log(JSON.stringify(res));
            if (res.status == "ok") {
                for (var u = 0; u < _this.listFaQSorted.length; u++) {
                    if (_this.listFaQSorted[u].type == "faq" && _this.listFaQSorted[u].faq.id == faq.faq.id) {
                        _this.listFaQSorted[u].faq.share_count = parseInt(_this.listFaQSorted[u].faq.share_count) + 1;
                        // this.toast.show("Vous avez partagé ce partage", "2000", "bottom").subscribe(
                        //   toast => {
                        //     console.log(toast);
                        //   }
                        // );
                    }
                    else if (_this.listFaQSorted[u].type == "ad" && _this.listFaQSorted[u].id == faq.id) {
                        _this.listFaQSorted[u].share_count = parseInt(_this.listFaQSorted[u].share_count) + 1;
                        // this.toast.show("Vous avez partagé cette publicité", "2000", "bottom").subscribe(
                        //   toast => {
                        //     console.log(toast);
                        //   }
                        // );
                    }
                }
                //faq.faq.comments_count = parseInt(faq.faq.comments_count) + 1;
            }
            else {
                console.log(JSON.stringify(res));
                _this.toast.show("Vous avez déjà partagé ce partage", "2000", "bottom").subscribe(function (toast) {
                    console.log(toast);
                });
            }
            //console.log(JSON.stringify(data.data));
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    HomePage.prototype.shareViaApp = function (faq) {
        var _this = this;
        if (typeof (faq.temp) !== undefined && faq.temp == 1) {
            this.toast.show("En cours de chargement...\nVeuillez patienter", "6000", "top")
                .subscribe(function (toast) {
                console.log(JSON.stringify(toast));
            });
            return;
        }
        var file = [];
        var bodyText = "";
        var link = "";
        bodyText += "";
        var perma_link = "";
        if (faq.type == 'ad') {
            link = faq.link;
            perma_link = faq.url;
            bodyText += faq.user_infos.pseudo + " a partagé : \n";
            bodyText += faq.no_html_description;
            if (faq.image != null && faq.image != "") {
                file.push(faq.image);
            }
        }
        else if (faq.type == 'faq') {
            bodyText += faq.author.pseudo + " a partagé : \n";
            bodyText += faq.faq.no_html_description;
            perma_link = faq.faq.url;
            if (faq.faq.faq_image_1 != null && faq.faq.faq_image_1 != '') {
                file.push(faq.faq.faq_image_1);
            }
            if (faq.faq.faq_image_2 != null && faq.faq.faq_image_2 != '') {
                file.push(faq.faq.faq_image_2);
            }
            if (faq.faq.faq_image_3 != null && faq.faq.faq_image_3 != '') {
                file.push(faq.faq.faq_image_3);
            }
            if (faq.faq.faq_image_4 != null && faq.faq.faq_image_4 != '') {
                file.push(faq.faq.faq_image_4);
            }
        }
        var shareModal = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_27__sharemodal_sharemodal__["a" /* SharemodalPage */], {
            file: file,
            bodyText: bodyText,
            link: link,
            perma_link: perma_link
        });
        shareModal.onDidDismiss(function (data) {
            console.log("Result from sharing : ");
            console.log(JSON.stringify(data));
            if (data.shared) {
                if (faq.type == "ad") {
                    for (var u = 0; u < _this.listFaQSorted.length; u++) {
                        if (_this.listFaQSorted[u].type == 'ad' && _this.listFaQSorted[u].id == faq.id) {
                            _this.listFaQSorted[u].share_count = parseInt(_this.listFaQSorted[u].share_count) + 1;
                            _this.listFaQSorted[u].user_shared = 1;
                            // this.toast.show("Vous avez partagé cette annonce", "2000", "bottom").subscribe(
                            //   toast => {
                            //     console.log(toast);
                            //   }
                            // );
                        }
                    }
                    _this.http.post(_this.globals.variables.urls.addToShare, {
                        "user_id": (_this.user.id_User != null ? _this.user.id_User : _this.user.id),
                        "post_id": faq.id
                    }, {})
                        .then(function (data) {
                        var res = JSON.parse(data.data);
                        console.log(JSON.stringify(res));
                        if (res.status == "ok") {
                        }
                        else {
                            console.log(JSON.stringify(res));
                        }
                    }, function (error) {
                        console.log(JSON.stringify(error));
                    });
                }
                else if (faq.type == "faq") {
                    for (var u = 0; u < _this.listFaQSorted.length; u++) {
                        if (_this.listFaQSorted[u].type == 'faq' && _this.listFaQSorted[u].faq.id == faq.faq.id) {
                            _this.listFaQSorted[u].faq.share_count = parseInt(_this.listFaQSorted[u].faq.share_count) + 1;
                            _this.listFaQSorted[u].faq.user_shared = 1;
                            // this.toast.show("Vous avez partagé ce partage", "2000", "bottom").subscribe(
                            //   toast => {
                            //     console.log(toast);
                            //   }
                            // );
                        }
                    }
                    _this.http.post(_this.globals.variables.urls.addToShare, {
                        "user_id": (_this.user.id_User != null ? _this.user.id_User : _this.user.id),
                        "post_id": faq.faq.id
                    }, {})
                        .then(function (data) {
                        var res = JSON.parse(data.data);
                        console.log(JSON.stringify(res));
                        if (res.status == "ok") {
                        }
                        else {
                            console.log(JSON.stringify(res));
                        }
                    }, function (error) {
                        console.log(JSON.stringify(error));
                    });
                }
            }
        });
        shareModal.present();
    };
    HomePage.prototype.share = function (faq) {
        var _this = this;
        if (faq.type == 'ad') {
            this.shareAd(faq);
        }
        else {
            var file = [];
            if (faq.faq.faq_image_1 != null && faq.faq.faq_image_1 != '') {
                file.push(faq.faq.faq_image_1);
            }
            if (faq.faq.faq_image_2 != null && faq.faq.faq_image_2 != '') {
                file.push(faq.faq.faq_image_2);
            }
            if (faq.faq.faq_image_3 != null && faq.faq.faq_image_3 != '') {
                file.push(faq.faq.faq_image_3);
            }
            if (faq.faq.faq_image_4 != null && faq.faq.faq_image_4 != '') {
                file.push(faq.faq.faq_image_4);
            }
            this.socialSharing.share(faq.faq.description, faq.faq.title, file, '')
                .then(function (data) {
                console.log("Share success");
                console.log(JSON.stringify(data));
                // Test if shared
                _this.http.post(_this.globals.variables.urls.addToShare, {
                    "user_id": (_this.user.id_User != null ? _this.user.id_User : _this.user.id),
                    "post_id": faq.faq.id
                }, {})
                    .then(function (data) {
                    var res = JSON.parse(data.data);
                    console.log(JSON.stringify(res));
                    if (res.status == "ok") {
                        for (var u = 0; u < _this.listFaQSorted.length; u++) {
                            if (_this.listFaQSorted[u].type == 'faq' && _this.listFaQSorted[u].faq.id == faq.faq.id) {
                                _this.listFaQSorted[u].faq.share_count = parseInt(_this.listFaQSorted[u].faq.share_count) + 1;
                                _this.listFaQSorted[u].faq.user_shared = 1;
                                // this.toast.show("Vous avez partagé ce partage", "2000", "bottom").subscribe(
                                //   toast => {
                                //     console.log(toast);
                                //   }
                                // );
                            }
                        }
                    }
                    else {
                        console.log(JSON.stringify(res));
                    }
                }, function (error) {
                    console.log(JSON.stringify(error));
                });
            }, function (error) {
                console.log("Share error");
                console.log(JSON.stringify(error));
            });
        }
    };
    HomePage.prototype.shareAd = function (ad) {
        var _this = this;
        var file = [];
        if (ad.ad_image_1 != null && ad.ad_image_1 != '') {
            file.push(ad.ad_image_1);
        }
        if (ad.ad_image_2 != null && ad.ad_image_2 != '') {
            file.push(ad.ad_image_2);
        }
        if (ad.ad_image_3 != null && ad.ad_image_3 != '') {
            file.push(ad.ad_image_3);
        }
        if (ad.ad_image_4 != null && ad.ad_image_4 != '') {
            file.push(ad.ad_image_4);
        }
        this.socialSharing.share(ad.description, ad.title, file, '')
            .then(function (data) {
            console.log("Share success");
            console.log(JSON.stringify(data));
            _this.http.post(_this.globals.variables.urls.addToShare, {
                "user_id": (_this.user.id_User != null ? _this.user.id_User : _this.user.id),
                "post_id": ad.id
            }, {})
                .then(function (data) {
                var res = JSON.parse(data.data);
                console.log(JSON.stringify(res));
                if (res.status == "ok") {
                    for (var u = 0; u < _this.listFaQSorted.length; u++) {
                        if (_this.listFaQSorted[u].type == 'ad' && _this.listFaQSorted[u].id == ad.id) {
                            _this.listFaQSorted[u].share_count = parseInt(_this.listFaQSorted[u].share_count) + 1;
                            _this.listFaQSorted[u].user_shared = 1;
                            // this.toast.show("Vous avez partagé cette annonce", "2000", "bottom").subscribe(
                            //   toast => {
                            //     console.log(toast);
                            //   }
                            // );
                        }
                    }
                }
                else {
                    console.log(JSON.stringify(res));
                }
            }, function (error) {
                console.log(JSON.stringify(error));
            });
        }, function (error) {
            console.log("Share error");
            console.log(JSON.stringify(error));
        });
    };
    HomePage.prototype.doInfinite = function (infiniteScroll) {
        if (this.isInfiteScroll) {
            infiniteScroll.complete();
        }
        else {
            this.isInfiteScroll = true;
            console.log('Begin async operation');
            this.paging += 1;
            this.offsetAd += 1;
            this.getListFaQs(infiniteScroll, false);
        }
    };
    HomePage.prototype.getListNotificationsByFavorite = function () {
        var _this = this;
        //getNotificationByFavorite
        //listFormations
        //this.load = 1;
        this.http.get(this.globals.variables.urls.getNotificationByFavorite, {
            "user_id": "" + (this.user.id_User != null ? this.user.id_User : this.user.id),
            "limit": "5",
            "offset": "0"
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            var notifs = [];
            for (var f = 0; f < res.length; f++) {
                if (parseInt(res[f].state) == 0 || parseInt(res[f].state) == 3) {
                    var notif = {
                        id: res[f].notif_id,
                        text: res[f].message,
                        sound: 'assets/beep/beep.mp3',
                        vibrate: true,
                        data: res[f],
                        foreground: true
                    };
                    notifs.push(notif);
                    if (parseInt(res[f].state) == 3) {
                        _this.updateNotifState(res[f], "4");
                    }
                    if (parseInt(res[f].state) == 0) {
                        _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                    }
                }
                else if (parseInt(res[f].state) < 2) {
                    _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                }
            }
            _this.localNotifications.schedule(notifs);
            _this.listForms = res;
        }, function (error) {
            console.log(JSON.stringify(error));
            // this.load = 0;
        });
    };
    HomePage.prototype.getListNotificationsByShared = function () {
        var _this = this;
        //getNotificationByFavorite
        //listFormations
        //this.load = 1;
        this.http.get(this.globals.variables.urls.getNotificationByShared, {
            "user_id": "" + (this.user.id_User != null ? this.user.id_User : this.user.id),
            "limit": "5",
            "offset": "0"
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            var notifs = [];
            for (var f = 0; f < res.length; f++) {
                if (parseInt(res[f].state) == 0 || parseInt(res[f].state) == 3) {
                    var notif = {
                        id: res[f].notif_id,
                        text: res[f].message,
                        sound: 'assets/beep/beep.mp3',
                        vibrate: true,
                        data: res[f],
                        foreground: true
                    };
                    notifs.push(notif);
                    if (parseInt(res[f].state) == 3) {
                        _this.updateNotifState(res[f], "4");
                    }
                    if (parseInt(res[f].state) == 0) {
                        _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                    }
                }
                else if (parseInt(res[f].state) < 2) {
                    _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                }
            }
            _this.localNotifications.schedule(notifs);
            _this.listForms = res;
        }, function (error) {
            console.log(JSON.stringify(error));
            // this.load = 0;
        });
    };
    HomePage.prototype.getListNotificationsByLiked = function () {
        var _this = this;
        //listFormations
        //this.load = 1;
        this.http.get(this.globals.variables.urls.getNotificationByLiked, {
            "user_id": "" + (this.user.id_User != null ? this.user.id_User : this.user.id),
            "limit": "5",
            "offset": "0"
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            var notifs = [];
            for (var f = 0; f < res.length; f++) {
                if (parseInt(res[f].state) == 0 || parseInt(res[f].state) == 3) {
                    var notif = {
                        id: res[f].notif_id,
                        text: res[f].message,
                        sound: 'assets/beep/beep.mp3',
                        vibrate: true,
                        data: res[f],
                        foreground: true
                    };
                    notifs.push(notif);
                    if (parseInt(res[f].state) == 3) {
                        _this.updateNotifState(res[f], "4");
                    }
                    if (parseInt(res[f].state) == 0) {
                        _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                    }
                }
                else if (parseInt(res[f].state) < 2) {
                    _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                }
            }
            _this.localNotifications.schedule(notifs);
            _this.listForms = res;
        }, function (error) {
            console.log(JSON.stringify(error));
            // this.load = 0;
        });
    };
    HomePage.prototype.getListNotifications = function () {
        var _this = this;
        //listFormations
        //this.load = 1;
        this.http.get(this.globals.variables.urls.getNotifications, {
            "user_id": "" + (this.user.id_User != null ? this.user.id_User : this.user.id),
            "limit": "5",
            "offset": "0"
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            var notifs = [];
            for (var f = 0; f < res.length; f++) {
                if (parseInt(res[f].state) == 0 || parseInt(res[f].state) == 3) {
                    var notif = {
                        id: res[f].notif_id,
                        text: res[f].message,
                        sound: 'assets/beep/beep.mp3',
                        vibrate: true,
                        data: res[f],
                        foreground: true
                    };
                    notifs.push(notif);
                    if (parseInt(res[f].state) == 3) {
                        _this.updateNotifState(res[f], "4");
                    }
                    if (parseInt(res[f].state) == 0) {
                        _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                    }
                }
                else if (parseInt(res[f].state) < 2) {
                    _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                }
            }
            _this.localNotifications.schedule(notifs);
            _this.listForms = res;
        }, function (error) {
            console.log(JSON.stringify(error));
            // this.load = 0;
        });
    };
    HomePage.prototype.getListNotificationsNewPost = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: 
                    // this.http.get(this.globals.variables.urls.getNotificationsNewPost,
                    return [4 /*yield*/, this.http.get(this.globals.variables.urls.getNotificationsNewPost, {
                            "user_id": "" + (this.user.id_User != null ? this.user.id_User : this.user.id),
                            "limit": "5",
                            "offset": "0"
                        }, {})
                            .then(function (data) {
                            var res = JSON.parse(data.data);
                            var notifs = [];
                            if (res.length <= 0) {
                                _this.load = 0;
                            }
                            else {
                                for (var f = 0; f < res.length; f++) {
                                    if (parseInt(res[f].state) == 0 || parseInt(res[f].state) == 3) {
                                        var notif = {
                                            id: res[f].id,
                                            text: res[f].message,
                                            sound: 'assets/beep/beep.mp3',
                                            vibrate: true,
                                            data: res[f],
                                            foreground: true
                                        };
                                        notifs.push(notif);
                                        if (parseInt(res[f].state) == 3) {
                                            _this.updateNotifState(res[f], "4");
                                        }
                                        if (parseInt(res[f].state) == 0) {
                                            _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                                        }
                                    }
                                    else if (parseInt(res[f].state) < 2) {
                                        _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                                    }
                                    _this.localNotifications.schedule(notifs);
                                    _this.listForms.push(res[f]);
                                    if (f == res.length - 1) {
                                        _this.load = 0;
                                    }
                                }
                            }
                        }, function (error) {
                            console.log("Error from getting notif new post");
                            console.log(JSON.stringify(error));
                            _this.load = 0;
                        })];
                    case 1:
                        // this.http.get(this.globals.variables.urls.getNotificationsNewPost,
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    HomePage.prototype.updateNotifState = function (notif, state) {
        this.http.post(this.globals.variables.urls.updateNotifState + "?notification_id=" + notif.notif_id + "&state=" + state, {
            "notification_id": notif.notif_id,
            "state": state
        }, {})
            .then(function (data) {
            // notif.state = state;
            console.log("State of notif updated");
            // console.log(JSON.stringify(data.data))
        }, function (error) {
            console.log("Error updating notif state");
        });
    };
    HomePage.prototype.getListNewNotifications = function () {
        var _this = this;
        //listFormations
        this.http.get(this.globals.variables.urls.getNotifications, {
            "user_id": "" + (this.user.id_User != null ? this.user.id_User : this.user.id),
            "limit": "10"
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            // console.log("List des nouveau notifications");
            var notifs = [];
            for (var g = 0; g < res.length; g++) {
                for (var k = 0; k < _this.listForms.length; k++) {
                    if (res[g].notif_id == _this.listForms[k].notif_id) {
                        break;
                    }
                    else if (res[g].notif_id != _this.listForms[k].notif_id && k == (_this.listForms.length - 1)) {
                        _this.listForms.splice(0, 0, res[g]);
                        var notif = {
                            id: res[g].notif_id,
                            text: res[g].message,
                            sound: 'assets/beep/beep.mp3',
                            vibrate: true,
                            data: res[g],
                            foreground: true
                        };
                        notifs.push(notif);
                        _this.http.get(_this.globals.variables.urls.updateNotifState + "?notification_id=" + res[g].notif_id + "&state=1", {}, {})
                            .then(function (data) {
                            // console.log(JSON.stringify(data.data));
                        }, function (error) {
                            console.log(JSON.stringify(error));
                        });
                    }
                }
            }
            _this.localNotifications.schedule(notifs);
            _this.notifTimeout = setTimeout(function () {
                _this.getListNewNotifications();
            }, 5000);
        }, function (error) {
            console.log(JSON.stringify(error));
            //this.load = 0;
        });
    };
    HomePage.prototype.getListAds = function (infiniteScroll, newFaQ, toWhere) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var user_id;
            return __generator(this, function (_a) {
                console.log("Getting Ads lists.");
                user_id = (this.user.id_User != null ? this.user.id_User : this.user.id);
                this.http.post(this.globals.variables.urls.getListPub + "?offset=" + this.offsetAd + "&limit=1", {}, {})
                    .then(function (data) {
                    _this.load = 0;
                    var res = JSON.parse(data.data);
                    console.log(res);
                    if (res.length <= 0) {
                        _this.load = 0;
                        if (infiniteScroll != null) {
                            console.log('Async operation has ended');
                            infiniteScroll.complete();
                            _this.isInfiteScroll = false;
                        }
                    }
                    else {
                        for (var r = 0; r < res.length; r++) {
                            res[r].type = 'ad';
                            var char70 = "";
                            char70 = res[r].description + "...";
                            res[r].char70 = char70;
                            console.log("Ads to show ");
                            console.log(JSON.stringify(res[r]));
                            _this.listFaQSorted.push(res[r]);
                        }
                        _this.load = 0;
                        if (infiniteScroll != null) {
                            console.log('Async operation has ended');
                            infiniteScroll.complete();
                            _this.isInfiteScroll = false;
                        }
                        console.log("Getting user info (ad Author)");
                    }
                }, function (error) {
                    _this.load = 0;
                    console.log(JSON.stringify(error));
                });
                return [2 /*return*/];
            });
        });
    };
    HomePage.prototype.showDetails = function (ad) {
        this.addAsViewed(ad);
        var adPage = __WEBPACK_IMPORTED_MODULE_20__annonce_details_annonce_details__["a" /* AnnonceDetailsPage */];
        this.navCtrl.push(adPage, {
            user: this.user,
            ad: ad
        });
    };
    HomePage.prototype.addAsViewed = function (ad) {
        this.http.post(this.globals.variables.urls.addViewAd, {
            "id": ad.id
        }, {})
            .then(function (res) {
            console.log("Adding view result");
            console.log(JSON.stringify(res.data));
        }, function (error) {
            console.log("Error when adding view to ad");
            console.log(JSON.stringify(error));
        });
    };
    HomePage.prototype.report = function (faq, iconItemID) {
        var _this = this;
        //repportFaQ
        var selectedItem = document.getElementById(iconItemID);
        selectedItem.classList.add("fadeDown");
        selectedItem.style.opacity = "0.2";
        this.http.post(this.globals.variables.urls.repportFaQ, {
            "user_id": (this.user.id_User != null ? this.user.id_User : this.user.id),
            "post_id": faq.faq.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log(JSON.stringify(res));
            if (res.status == "ok") {
                if (faq.faq.user_report == 1) {
                    faq.faq.user_report = 0;
                    _this.toast.show("Votre signalisation a été annulée", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
                else {
                    faq.faq.user_report = 1;
                    _this.toast.show("Vous avez signalé ce partage", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
            }
            else {
                console.log(JSON.stringify(res));
                _this.toast.show("Vous avez déjà signalé ce partage", "2000", "bottom").subscribe(function (toast) {
                    console.log(toast);
                });
            }
            selectedItem.classList.remove("fadeDown");
            selectedItem.style.opacity = "1";
            document.getElementById(_this.displayedPopoverID).classList.remove("popoverdisplay");
            document.getElementById(_this.displayedPopoverID).classList.add("popoverhide");
            document.getElementById(_this.displayedPopoverID).style.display = "none";
            _this.displayedPopoverID = "";
            //console.log(JSON.stringify(data.data));
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    HomePage.prototype.addToFav = function (faq, iconItemID) {
        var _this = this;
        //this.favFlash = "favFlashIn";
        var selectedItem = document.getElementById(iconItemID);
        selectedItem.classList.add("fadeDown");
        selectedItem.style.opacity = "0.2";
        this.http.post(this.globals.variables.urls.addLike, {
            user_id: (this.user.id_User != null ? this.user.id_User : this.user.id),
            post_id: faq.type == 'ad' ? faq.id : faq.faq.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log("Resultat du serveur");
            console.log(JSON.stringify(res));
            selectedItem.classList.remove("fadeDown");
            selectedItem.style.opacity = "1";
            document.getElementById(_this.displayedPopoverID).classList.remove("popoverdisplay");
            document.getElementById(_this.displayedPopoverID).classList.add("popoverhide");
            document.getElementById(_this.displayedPopoverID).style.display = "none";
            _this.displayedPopoverID = "";
            if (res.status == "ok") {
                if (faq.faq.user_like == 0) {
                    faq.faq.user_like = 1;
                    _this.toast.show("Ajouté dans vos favoris", "2000", "bottom")
                        .subscribe(function (t) {
                        console.log(JSON.stringify(t));
                    });
                }
                else if (faq.faq.user_like == 1) {
                    faq.faq.user_like = 0;
                    _this.toast.show("Supprimé de vos favoris", "2000", "bottom")
                        .subscribe(function (t) {
                        console.log(JSON.stringify(t));
                    });
                }
            }
            else {
                _this.toast.show("Erreur lors d'ajout dans vos favoris", "2000", "bottom")
                    .subscribe(function (t) {
                    console.log(JSON.stringify(t));
                });
            }
        }, function (error) {
            console.log("Erreur d'acces au serveur");
        });
    };
    HomePage.prototype.updateFaQ = function (faq) {
        var _this = this;
        console.log("clicked to update");
        // document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay")
        // document.getElementById(this.displayedPopoverID).classList.add("popoverhide")
        // document.getElementById(this.displayedPopoverID).style.display = "none"
        // this.displayedPopoverID = ""
        var faq_id = faq.type == "faq" ? faq.faq.id : faq.id;
        this.displayPopover("popover" + faq_id);
        this.displayedPopoverID = "";
        //
        var faqup = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_23__faqadd3_faqadd3__["a" /* Faqadd3Page */], {
            faq: faq,
            user: this.user,
            theme: this.listFaQTheme,
            source: "update"
        });
        faqup.onDidDismiss(function (data) {
            console.log(JSON.stringify(data));
            if (data != null && data.id_faq != null) {
                console.log("Gettilg single faq updated");
                console.log(JSON.stringify(data.id_faq));
                _this.getSingleFaQUpdate(data.id_faq);
            }
        });
        faqup.present();
    };
    HomePage.prototype.updateStored = function (element) {
        if (element === void 0) { element = []; }
        var newdata = [];
        var checkId = [];
        if (element.length) {
            try {
                var g = 0;
                for (var i = 0; i < element.length; i++) {
                    if (g < 5) {
                        if (typeof (element[i].faq.id) !== undefined && (checkId.indexOf(element[i].faq.id) < 0)) {
                            checkId.push(element[i].faq.id);
                            newdata.push(element[i].faq);
                            g++;
                        }
                        else if (typeof (element[i].id) !== undefined && (checkId.indexOf(element[i].id) < 0)) {
                            checkId.push(element[i].id);
                            newdata.push(element[i]);
                            g++;
                        }
                    }
                    else {
                        break;
                    }
                }
            }
            catch (e) {
                console.log(JSON.stringify(e));
            }
        }
        this.storage.set('partages', JSON.stringify(newdata));
    };
    HomePage.prototype.cleanStored = function () {
        var _this = this;
        var ret = new Promise(function (resolve, reject) {
            _this.storage.get('partages').then(function (element) {
                if (element.length) {
                    try {
                        var g = 0;
                        var newdata = [];
                        for (var i = 0; i < element.length; i++) {
                            if (g < 5) {
                                if (typeof (element[i].faq.id) !== undefined) {
                                    newdata.push(element[i].faq);
                                    g++;
                                }
                                else if (typeof (element[i].id) !== undefined) {
                                    newdata.push(element[i]);
                                    g++;
                                }
                            }
                            else {
                                break;
                            }
                        }
                        resolve(element);
                    }
                    catch (e) {
                        console.log(JSON.stringify(e));
                    }
                }
                else {
                    reject([]);
                }
            });
        });
        ret.then(function (data) {
            _this.storage.set('partages', JSON.stringify(data));
        });
    };
    HomePage.prototype.deleteFaQ = function (faq, isPopover) {
        var _this = this;
        this.displayedPopoverID = "";
        this.listFaqsToDelete.push(faq);
        try {
            //deleteFaQ, faq_id, user_id
            // document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay")
            // document.getElementById(this.displayedPopoverID).classList.add("popoverhide")
            // document.getElementById(this.displayedPopoverID).style.display = "none"
            // this.displayedPopoverID = ""
            var faq_id = faq.type == "faq" ? faq.faq.id : faq.id;
            if (isPopover) {
                console.log("isPopover", faq_id);
                // this.displayPopover("popover" + faq_id)
            }
            for (var i = 0; i < this.listFaQSorted.length; i++) {
                if (this.listFaQSorted[i].type == "faq") {
                    if (faq.faq.id == this.listFaQSorted[i].faq.id) {
                        this.listFaQSorted.splice(i, 1);
                        break;
                    }
                }
            }
            console.log("update store");
            // this.updateStored(this.listFaQSorted);
            this.storage.set('partages', JSON.stringify(this.listFaQSorted));
            this.http.post(this.globals.variables.urls.deleteFaQ, {
                "faq_id": faq.faq.id,
                "user_id": (this.user.id_User != null ? this.user.id_User : this.user.id)
            }, {})
                .then(function (data) {
                console.log("Resultat de suppression");
                console.log(JSON.stringify(data.data));
                var res = JSON.parse(data.data);
                _this.displayedPopoverID = "";
                if (res.status == 'ok') {
                    _this.toast.show("Partage supprimé", "3000", "bottom")
                        .subscribe(function (toast) {
                        console.log(JSON.stringify(toast));
                    });
                    // for (let i = 0; i < this.listFaQ.length; i++) {
                    //   if (faq.faq.id == this.listFaQ[i].faq.id) {
                    //     this.listFaQ.splice(i, 1);
                    //   }
                    // }
                }
                else {
                    _this.toast.show("Erreur de suppression de la partage", "3000", "bottom")
                        .subscribe(function (toast) {
                        console.log(JSON.stringify(toast));
                    });
                }
            }, function (error) {
                console.log("Error trying to delete FaQ");
                console.log(JSON.stringify(error));
                _this.toast.show("Erreur de suppression de la partage", "3000", "bottom")
                    .subscribe(function (toast) {
                    console.log(JSON.stringify(toast));
                });
            });
        }
        catch (error) {
            console.log("Error on delete :");
            console.log(JSON.stringify(error));
        }
    };
    HomePage.prototype.displayPopover = function (popoverid) {
        if (popoverid == 'popover0') {
            this.toast.show("En cours de chargement...\nVeuillez patienter", "6000", "top")
                .subscribe(function (toast) {
                console.log(JSON.stringify(toast));
            });
            return;
        }
        var classL = document.getElementById(popoverid).classList.toString();
        console.log(classL);
        console.log(classL.indexOf("popoverdisplay"));
        if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") === -1 && this.displayedPopoverID == "") {
            console.log("=====///===Displayed ", popoverid);
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") === -1 && this.displayedPopoverID != "") {
            console.log("=====///===Displayed ", popoverid);
            document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay");
            document.getElementById(this.displayedPopoverID).classList.add("popoverhide");
            document.getElementById(this.displayedPopoverID).style.display = "none";
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") !== -1 && classL.indexOf("popoverhide") === -1 && this.displayedPopoverID == popoverid) {
            console.log("=====///===Hiden ", popoverid);
            document.getElementById(popoverid).classList.remove("popoverdisplay");
            document.getElementById(popoverid).classList.add("popoverhide");
            document.getElementById(popoverid).style.display = "none";
            this.displayedPopoverID = "";
            console.log("=====///===Hiden ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") !== -1 && this.displayedPopoverID != popoverid && this.displayedPopoverID != "") {
            console.log("=====///===Displayed Other : => ", popoverid);
            document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay");
            document.getElementById(this.displayedPopoverID).classList.add("popoverhide");
            document.getElementById(this.displayedPopoverID).style.display = "none";
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.remove("popoverhide");
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed Other : => ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") !== -1 && this.displayedPopoverID == "") {
            console.log("=====///===Displayed Once : => ", popoverid);
            document.getElementById(popoverid).classList.remove("popoverhide");
            document.getElementById(popoverid).classList.remove("popoverdisplay");
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed Once : => ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") !== -1 && this.displayedPopoverID == popoverid) {
            // this.displayHide()
        }
    };
    HomePage.prototype.displayHide = function (event) {
        // ev.prevent
        event.stopPropagation();
        if (this.displayedPopoverID != "") {
            document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay");
            document.getElementById(this.displayedPopoverID).classList.add("popoverhide");
            document.getElementById(this.displayedPopoverID).style.display = "none";
            this.displayedPopoverID = "";
        }
    };
    HomePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-home',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/home/home.html"*/'<ion-content class="pr">\n\n  <!-- <ion-refresher (ionRefresh)="getListTheme($event)">\n      <ion-refresher-content></ion-refresher-content>\n  </ion-refresher> -->\n\n\n  <ion-row ion-fixed class="load-ctn" id="load" *ngIf="load == 1">\n    <ion-spinner class="loading-custom" name="crescent" color="vert_logo"></ion-spinner>\n  </ion-row>\n\n  <ion-row ion-fixed class="header">\n    <ion-col></ion-col>\n    <ion-col>\n      <ion-label class="da">\n        <!-- https://toulouse-escape-game.fr/wp-content/uploads/2019/04/Ch%C3%A8que-cadeau.png -->\n        <img class="logo" src="assets/imgs/da_image/logo-dentart.png">\n        <!-- <img class="logo" src="https://toulouse-escape-game.fr/wp-content/uploads/2019/04/Coffret-cadeau-Escape-Hunt.jpg"> -->\n\n        <span class="bold">Dent</span><span class="fine">Art</span>\n      </ion-label>\n    </ion-col><ion-col>\n    </ion-col>\n    <div *ngIf="inwait == 1" class="wait-posting"><img class="wpw" src="../../assets/imgs/load/load.gif" />&nbsp;&nbsp;T&eacute;l&eacute;chargement en cours...</div>\n  </ion-row>\n\n  <div class="container wait-deb-{{inwait}}">\n\n    <ion-refresher (ionRefresh)="refresh($event)">\n      <ion-refresher-content pullingIcon="arrow-dropdown" pullingText="Tirez pour rafraîchir" refreshingSpinner="none"\n        refreshingText="" pullMin="120" pullMax="200" class="refresher">\n      </ion-refresher-content>\n      <!-- refreshingSpinner="circles" -->\n    </ion-refresher>\n    <div *ngIf="listFaQSorted.length <= 0 && load == 0" class="not-found">\n      <!-- Aucun partage trouvé ! -->\n    </div>\n    <div *ngFor="let faq of listFaQSorted">\n\n      <div class="theBlock" *ngIf="faq.type == \'faq\'">\n        <div class="row1">\n          <div class="row1-col1" (click)="comment(faq,\'detail\');">\n            <!-- <div>{{faq.author.avatar}}"</div> -->\n            <div class="user-avatar-ctn">\n              <img class="user-avatar"\n                src="{{faq.author.avatar != \'\' ? faq.author.avatar : \'assets/imgs/avatar/avatar_f.png\'}}" />\n\n\n\n              <!-- <img class="user-avatar" src="http://dentart.devforge.eu/wp-content/uploads/2019/03/magazine-unlock-hi3440005-1.png" /> -->\n            </div>\n            <div class="user-info-cth">\n              <div class="user-pseudo">\n                {{faq.author.pseudo}}\n              </div>\n              <div class="user-job">\n                {{faq.author.job}} - {{faq.author.address}}\n              </div>\n              <div class="post-date">\n                {{faq.faq.dateFR}}\n              </div>\n            </div>\n          </div>\n          <div class="row1-col2">\n\n            <div *ngIf="faq != null" class="drop-down-icon" (click)="displayPopover(\'popover\'+faq.faq.id)">\n              <div class="left-bar"></div>\n              <div class="right-bar"></div>\n            </div>\n            <div *ngIf="faq != null" class="popover-ctn" id="popover{{faq.faq.id}}">\n              <div class="popover-tsingy">\n                <div class="half-transparent"></div>\n              </div>\n              <div class="list-ctn">\n                <div class="option-item" id="favicon{{faq.faq.id}}" (click)="addToFav(faq, \'favicon\'+faq.faq.id)">\n                  <div class="op-it-icon">\n                    <img class="it-icon" src="../../assets/icon/heart-green-blue.svg" />\n                  </div>\n                  <div class="item-text">Favoris</div>\n                </div>\n                <div class="sep-popover"></div>\n                <div class="option-item" id="repicon{{faq.faq.id}}" (click)="report(faq, \'repicon\'+faq.faq.id)">\n                  <div class="op-it-icon">\n                    <img class="it-icon" src="../../assets/icon/warning.svg" />\n                  </div>\n                  <div class="item-text">Signaler</div>\n                </div>\n\n                <div *ngIf="user_id == faq.faq.author_id">\n                  <div class="sep-popover"></div>\n                  <div class="option-item" id="modiconp{{faq.faq.id}}" (click)="updateFaQ(faq)">\n                    <div class="op-it-icon">\n                      <img class="it-icon" src="../../assets/icon/edit-green.svg" />\n                    </div>\n                    <div class="item-text">Modifier</div>\n                  </div>\n                </div>\n\n                <div *ngIf="user_id == faq.faq.author_id">\n                  <div class="sep-popover"></div>\n                  <div class="option-item" id="supiconp{{faq.faq.id}}" (click)="deleteFaQ(faq, true)">\n                    <div class="op-it-icon">\n                      <img class="it-icon" src="../../assets/icon/garbage.svg" />\n                    </div>\n                    <div class="item-text">Supprimer</div>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class="row-text" (click)="comment(faq,\'detail\');">\n          <div class="faq-ttl" [innerHtml]="faq.theme.name"></div>\n          <div class="faq-desc" [innerHtml]="faq.faq.char70"></div>\n          <div class="more" *ngIf="faq.faq.char70.length > 199">Voir plus ...</div>\n        </div>\n        <div *ngIf="(faq.faq.images_count > 0 || faq.faq.isset_img > 0)" class="row2" (click)="comment(faq,\'detail\');"\n          [style.background-image]="\'url(../../assets/imgs/load/Chargement.gif)\'">\n          <!-- <div [innerHtml]=\'faq.faq.img1\'></div> -->\n          <div *ngIf="(faq.faq.images_count > 0 || faq.faq.isset_img > 0)" class="loading-image"\n            [style.background-image]="\'url(\'+(faq.faq.faq_image_1 != null ? faq.faq.faq_image_1 : (faq.faq.faq_image_2 != null ? faq.faq.faq_image_2 : (faq.faq.faq_image_3 != null ? faq.faq.faq_image_3 : (faq.faq.faq_image_4 != null ? faq.faq.faq_image_4 : \'../../assets/imgs/da_image/Rectangle-05.jpg\'))))+\')\'"></div>\n          <div class="photo-badge">\n            {{faq.faq.images_count}}\n            <img class="nb-photo-icon" src="../../assets/icon/photo-camera-white.svg" />\n          </div>\n        </div>\n        <div class="row3" *ngIf="faq != null">\n          <div class="col-foot" (click)="addToFavorite(faq, \'colfoot\'+faq.faq.id);">\n            <div class="foot-badge" *ngIf="faq.faq.favorite_count < 100">{{faq.faq.favorite_count}}</div>\n            <div class="foot-badge" *ngIf="faq.faq.favorite_count >= 100">99+</div>\n            <div class="foot-block-icon-ctn">\n              <img class="foot-block-icon"\n                src="{{faq.faq.user_favorite != 0 && faq.faq.user_favorite != \'0\' ? \'../../assets/icon/like-fin-green.svg\' : \'../../assets/icon/like-fin-blue.svg\' }}" />\n            </div>\n            <div class="foot-label">J\'aime</div>\n          </div>\n          <div class="col-foot" (click)="comment(faq,\'com\');">\n            <div class="foot-badge" *ngIf="faq.faq.comments_count < 100">{{faq.faq.comments_count}}</div>\n            <div class="foot-badge" *ngIf="faq.faq.comments_count >= 100">99+</div>\n            <div class="foot-block-icon-ctn">\n              <img class="foot-block-icon" src="../../assets/icon/comment-rec-blue.svg" />\n            </div>\n            <div class="foot-label">Commentaire</div>\n          </div>\n          <div class="col-foot" (click)="shareViaApp(faq);">\n            <div class="foot-badge" *ngIf="faq.faq.share_count < 100">{{faq.faq.share_count}}</div>\n            <div class="foot-badge" *ngIf="faq.faq.share_count >= 100">99+</div>\n            <div class="foot-block-icon-ctn">\n              <img class="foot-block-icon" src="../../assets/icon/share-blue.svg" />\n            </div>\n            <div class="foot-label">Partager</div>\n          </div>\n        </div>\n      </div>\n\n      <div class="theBlock" *ngIf="faq.type == \'ad\'">\n        <div class="row1">\n          <div class="row1-col1" (click)="openURL(faq.link)">\n            <div class="user-avatar-ctn">\n              <img class="user-avatar"\n                src="{{faq.user_infos.avatar != \'\' ? faq.user_infos.avatar : \'assets/imgs/avatar/avatar_f.png\'}}" />\n            </div>\n            <div class="user-info-cth">\n              <div class="user-pseudo">\n                {{faq.user_infos.pseudo}}\n              </div>\n              <div class="user-job">\n                {{faq.user_infos.job}} - {{faq.user_infos.address}}\n              </div>\n              <!-- <div class="post-date">\n                {{faq.date_fr}}\n              </div> -->\n            </div>\n          </div>\n          <div class="row1-col2">\n\n            <div class="drop-down-icon" (click)="displayPopover(\'popover\'+faq.id)">\n              <div class="left-bar"></div>\n              <div class="right-bar"></div>\n            </div>\n            <div class="popover-ctn" id="popover{{faq.id}}">\n              <div class="popover-tsingy">\n                <div class="half-transparent"></div>\n              </div>\n              <div class="list-ctn">\n                <div class="option-item" id="favicon{{faq.id}}" (click)="addToFav(faq, \'favicon\'+faq.id)">\n                  <div class="op-it-icon">\n                    <img class="it-icon" src="../../assets/icon/heart-green-blue.svg" />\n                  </div>\n                  <div class="item-text">Favoris</div>\n                </div>\n                <div class="sep-popover"></div>\n                <div class="option-item" id="repicon{{faq.id}}" (click)="report(faq, \'repicon\'+faq.id)">\n                  <div class="op-it-icon">\n                    <img class="it-icon" src="../../assets/icon/warning.svg" />\n                  </div>\n                  <div class="item-text">Signaler</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class="row-text" (click)="openURL(faq.link);">\n          <div class="faq-ttl" [innerHtml]="faq.title"></div>\n          <div class="faq-desc" [innerHtml]="faq.char70"></div>\n        </div>\n        <div *ngIf="faq.image == null || faq.image != \'\' || faq.image != false" class="row2"\n          (click)="openURL(faq.link);"\n          [style.background-image]="\'url(\'+(faq.image != null ? faq.image : \'../../assets/imgs/da_image/Rectangle-05.jpg\')+\')\'">\n\n        </div>\n        <div class="row-2-5">\n          <div *ngIf="faq.abonnement == 0"></div>\n          <div class="sponsored" *ngIf="faq.abonnement != 0">Sponsorisé</div>\n          <div class="more-info" (click)="openURL(faq.link);">En savoir plus</div>\n        </div>\n        <div class="row3-ad">\n          <div class="col-foot" (click)="addToFavorite(faq);">\n            <div class="foot-badge" *ngIf="faq.favorite_count == null">0</div>\n            <div class="foot-badge" *ngIf="faq.favorite_count < 100">{{faq.favorite_count}}</div>\n            <div class="foot-badge" *ngIf="faq.favorite_count >= 100">99+</div>\n            <div class="foot-block-icon-ctn">\n              <img class="foot-block-icon"\n                src="{{faq.user_favorite != 0 && faq.user_favorite != \'0\' ? \'../../assets/icon/like-fin-green.svg\' : \'../../assets/icon/like-fin-blue.svg\' }}" />\n            </div>\n            <div class="foot-label">J\'aime</div>\n          </div>\n\n          <div class="col-foot" (click)="shareViaApp(faq);">\n            <div class="foot-badge" *ngIf="faq.share_count == null">0</div>\n            <div class="foot-badge" *ngIf="faq.share_count < 100">{{faq.share_count}}</div>\n            <div class="foot-badge" *ngIf="faq.share_count >= 100">99+</div>\n            <div class="foot-block-icon-ctn">\n              <img class="foot-block-icon" src="../../assets/icon/share-blue.svg" />\n            </div>\n            <div class="foot-label">Partager</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <ion-infinite-scroll (ionInfinite)="doInfinite($event)">\n      <ion-infinite-scroll-content></ion-infinite-scroll-content>\n    </ion-infinite-scroll>\n\n  </div>\n\n  <ion-row ion-fixed class="tab-faq">\n    <ion-col (click)="openMenu();">\n      <img class="btn-menu" src="../../assets/icon/menu-button.svg">\n    </ion-col>\n    <ion-col (click)="showFilter();">\n      <img class="fltr-icon" src="../../assets/icon/filter.svg" />\n      <span><br>Filtrer</span>\n    </ion-col>\n    <ion-col (click)="newPub()">\n      <img class="fltr-icon" src="../../assets/icon/plus.svg" />\n      <span><br>Poster</span>\n    </ion-col>\n    <ion-col (click)="openProfil()">\n      <img class="fltr-icon" src="../../assets/icon/user (1).svg" />\n      <span><br>Profil</span>\n    </ion-col>\n  </ion-row>\n\n</ion-content>'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/home/home.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_8__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["f" /* Events */],
            __WEBPACK_IMPORTED_MODULE_15__ionic_native_toast__["a" /* Toast */],
            __WEBPACK_IMPORTED_MODULE_17__ionic_native_social_sharing__["a" /* SocialSharing */],
            __WEBPACK_IMPORTED_MODULE_18__ionic_native_local_notifications__["a" /* LocalNotifications */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_21__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_22__ionic_native_app_minimize__["a" /* AppMinimize */],
            __WEBPACK_IMPORTED_MODULE_24__ionic_native_browser_tab__["a" /* BrowserTab */],
            __WEBPACK_IMPORTED_MODULE_25__ionic_native_background_mode__["a" /* BackgroundMode */],
            __WEBPACK_IMPORTED_MODULE_26__ionic_native_push__["a" /* Push */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_image_picker__["a" /* ImagePicker */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_android_permissions__["a" /* AndroidPermissions */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["f" /* Events */]])
    ], HomePage);
    return HomePage;
}());

//# sourceMappingURL=home.js.map

/***/ }),

/***/ 215:
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"../pages/a-savoir-details/a-savoir-details.module": [
		353,
		45
	],
	"../pages/a-savoir/a-savoir.module": [
		388,
		44
	],
	"../pages/annonce-add-annuler/annonce-add-annuler.module": [
		354,
		43
	],
	"../pages/annonce-add1/annonce-add1.module": [
		381,
		42
	],
	"../pages/annonce-add2/annonce-add2.module": [
		394,
		41
	],
	"../pages/annonce-boost/annonce-boost.module": [
		355,
		40
	],
	"../pages/annonce-cat/annonce-cat.module": [
		356,
		39
	],
	"../pages/annonce-details/annonce-details.module": [
		357,
		38
	],
	"../pages/annonces-filter/annonces-filter.module": [
		358,
		0
	],
	"../pages/annonces/annonces.module": [
		395,
		37
	],
	"../pages/authloading/authloading.module": [
		382,
		36
	],
	"../pages/certphoto/certphoto.module": [
		359,
		35
	],
	"../pages/connexion/connexion.module": [
		383,
		34
	],
	"../pages/contact/contact.module": [
		360,
		33
	],
	"../pages/createacc1/createacc1.module": [
		361,
		32
	],
	"../pages/createacc2/createacc2.module": [
		362,
		31
	],
	"../pages/createacc3/createacc3.module": [
		384,
		30
	],
	"../pages/createacc4/createacc4.module": [
		363,
		29
	],
	"../pages/dentart/dentart.module": [
		385,
		28
	],
	"../pages/faqadd1/faqadd1.module": [
		386,
		27
	],
	"../pages/faqadd2/faqadd2.module": [
		364,
		26
	],
	"../pages/faqadd3/faqadd3.module": [
		389,
		25
	],
	"../pages/faqadd4annuler/faqadd4annuler.module": [
		365,
		24
	],
	"../pages/faqcom/faqcom.module": [
		396,
		23
	],
	"../pages/faqfilter/faqfilter.module": [
		390,
		22
	],
	"../pages/faqupdate/faqupdate.module": [
		366,
		21
	],
	"../pages/formation-details/formation-details.module": [
		367,
		20
	],
	"../pages/formation-popup/formation-popup.module": [
		368,
		19
	],
	"../pages/formationadd/formationadd.module": [
		369,
		18
	],
	"../pages/formations/formations.module": [
		393,
		17
	],
	"../pages/generalcnd/generalcnd.module": [
		370,
		16
	],
	"../pages/imageviewer/imageviewer.module": [
		371,
		15
	],
	"../pages/logoutpopup/logoutpopup.module": [
		372,
		14
	],
	"../pages/mailto/mailto.module": [
		373,
		13
	],
	"../pages/mentl/mentl.module": [
		374,
		12
	],
	"../pages/menu/menu.module": [
		375,
		11
	],
	"../pages/mesannonces/mesannonces.module": [
		391,
		10
	],
	"../pages/nonetwork/nonetwork.module": [
		376,
		9
	],
	"../pages/notifications/notifications.module": [
		392,
		8
	],
	"../pages/paiement/paiement.module": [
		377,
		7
	],
	"../pages/popupcert/popupcert.module": [
		378,
		6
	],
	"../pages/recoverpasswd/recoverpasswd.module": [
		379,
		5
	],
	"../pages/share-fb/share-fb.module": [
		380,
		4
	],
	"../pages/sharemodal/sharemodal.module": [
		387,
		3
	],
	"../pages/updateprofil/updateprofil.module": [
		397,
		2
	],
	"../pages/uprofil/uprofil.module": [
		398,
		1
	]
};
function webpackAsyncContext(req) {
	var ids = map[req];
	if(!ids)
		return Promise.reject(new Error("Cannot find module '" + req + "'."));
	return __webpack_require__.e(ids[1]).then(function() {
		return __webpack_require__(ids[0]);
	});
};
webpackAsyncContext.keys = function webpackAsyncContextKeys() {
	return Object.keys(map);
};
webpackAsyncContext.id = 215;
module.exports = webpackAsyncContext;

/***/ }),

/***/ 22:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MenuPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_home__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__annonces_annonces__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__formations_formations__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__a_savoir_a_savoir__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__uprofil_uprofil__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_native_page_transitions__ = __webpack_require__(224);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__generalcnd_generalcnd__ = __webpack_require__(69);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__mentl_mentl__ = __webpack_require__(161);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__logoutpopup_logoutpopup__ = __webpack_require__(162);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__contact_contact__ = __webpack_require__(163);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__ionic_native_file__ = __webpack_require__(29);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













/**
 * Generated class for the MenuPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var MenuPage = /** @class */ (function () {
    function MenuPage(navCtrl, navParams, viewCtrl, events, platform, nativePageTransitions, alertCtrl, modalCtrl, file) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.viewCtrl = viewCtrl;
        this.events = events;
        this.platform = platform;
        this.nativePageTransitions = nativePageTransitions;
        this.alertCtrl = alertCtrl;
        this.modalCtrl = modalCtrl;
        this.file = file;
        this.user = {};
        this.canLeave = false;
        this.activeAcc = 0;
        this.menuClick = "";
        this.avatarPath = "file:///data/user/0/com.maa.dentart/files/profil.jpeg";
        this.avatar = null;
        file.readAsDataURL(file.dataDirectory, 'profil.jpeg')
            .then(function (data) {
            console.log("Avatar got");
            console.log(data.substr(0, 30));
            _this.avatar = data;
        }, function (error) {
            console.log("Error loading avatar");
            console.log(JSON.stringify(error));
        });
        this.user = navParams.get("user");
        console.log(this.user.avatar);
        console.log(this.user.photo);
        this.pages = [
            { title: 'Partages', component: __WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */] },
            { title: 'Annonces', component: __WEBPACK_IMPORTED_MODULE_3__annonces_annonces__["a" /* AnnoncesPage */] },
            { title: 'Formations', component: __WEBPACK_IMPORTED_MODULE_4__formations_formations__["a" /* FormationsPage */] },
            { title: 'News', component: __WEBPACK_IMPORTED_MODULE_5__a_savoir_a_savoir__["a" /* ASavoirPage */] },
        ];
        platform.registerBackButtonAction(function () {
            _this.viewCtrl.dismiss({ title: '', component: null });
        });
    }
    MenuPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad MenuPage');
    };
    MenuPage.prototype.ionViewCanLeave = function () {
        return true;
    };
    MenuPage.prototype.ionViewWillLeave = function () {
        //
    };
    MenuPage.prototype.ionViewWillEnter = function () {
        this.navCtrl.swipeBackEnabled = true;
    };
    MenuPage.prototype.ionViewDidLeave = function () {
        this.navCtrl.swipeBackEnabled = false;
    };
    MenuPage.prototype.onDidDismiss = function () {
        return true;
    };
    MenuPage.prototype.openPage = function (page, menu) {
        var _this = this;
        this.menuClick = menu;
        setTimeout(function () {
            _this.viewCtrl.dismiss(page);
        }, 200);
    };
    MenuPage.prototype.logOut = function () {
        var _this = this;
        var cfrm = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_10__logoutpopup_logoutpopup__["a" /* LogoutpopupPage */], {});
        cfrm.onDidDismiss(function (data) {
            if (data.state == 'oui') {
                _this.viewCtrl.dismiss({ title: 'deconnexion', component: null });
            }
            else {
                // this.viewCtrl.dismiss({ title: '', component: null });
            }
        });
        cfrm.present();
    };
    MenuPage.prototype.closeMenu = function () {
        var _this = this;
        var boxOne = document.getElementsByClassName('ext')[0];
        boxOne.classList.add('horizTranslate');
        setTimeout(function () {
            _this.viewCtrl.dismiss({ title: '', component: null }, '', {
                animate: true,
            });
        }, 0);
    };
    MenuPage.prototype.swipeEvent = function (e) {
        if (e.direction == 2)
            this.closeMenu();
    };
    MenuPage.prototype.viewProfil = function () {
        this.viewCtrl.dismiss({ title: 'profil', component: __WEBPACK_IMPORTED_MODULE_6__uprofil_uprofil__["a" /* UprofilPage */] });
    };
    MenuPage.prototype.showMoncompte = function () {
        if (this.activeAcc == 0) {
            document.getElementById('my_account').style.display = 'block';
            this.activeAcc = 1;
            this.menuClick = 'acc';
        }
        else {
            document.getElementById('my_account').style.display = 'none';
            this.activeAcc = 0;
            this.menuClick = '';
        }
    };
    MenuPage.prototype.openAlert = function () {
        this.viewCtrl.dismiss({ title: 'Mes alertes', component: __WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */] });
    };
    MenuPage.prototype.openAds = function () {
        this.viewCtrl.dismiss({ title: 'mesannonces', component: __WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */] });
    };
    MenuPage.prototype.openContact = function () {
        var contactModal = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_11__contact_contact__["a" /* ContactPage */], {
            user: this.user
        });
        contactModal.onDidDismiss(function (data) {
            console.log("Contact action");
            console.log(JSON.stringify(data));
        });
        contactModal.present();
    };
    MenuPage.prototype.showCGU = function () {
        var _this = this;
        var cgu = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_8__generalcnd_generalcnd__["a" /* GeneralcndPage */], {
            source: 'menu'
        });
        cgu.onDidDismiss(function (data) {
            _this.platform.registerBackButtonAction(function () {
                _this.viewCtrl.dismiss({ title: '', component: null });
            });
            console.log("CGU");
        });
        cgu.present();
    };
    MenuPage.prototype.showML = function () {
        var _this = this;
        var cgu = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_9__mentl_mentl__["a" /* MentlPage */], {
            source: 'menu'
        });
        cgu.onDidDismiss(function (data) {
            _this.platform.registerBackButtonAction(function () {
                _this.viewCtrl.dismiss({ title: '', component: null });
            });
            console.log("CGU");
        });
        cgu.present();
    };
    MenuPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-menu',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/menu/menu.html"*/'<ion-content class="container">\n\n  <div class="ext">\n    <div class="ctn-menu">\n\n      <div *ngIf="user != null" class="head-ctn" (click)="viewProfil();">\n        <div class="col-profil">\n          <!-- <img class="img-profil" [src]="user.avatar != \'\' ? user.avatar : \'../../assets/imgs/avatar/avatar_h.png\'" alt="Image" /> -->\n          <img class="img-profil" [src]="user.avatarB64 != null ? user.avatarB64 : user.avatar" alt="Image" />\n        </div>\n        <div class="user-info">\n          <span class="nemaBlue">{{user.pseudo}}</span>\n          <span class="jobGrey">{{user.job}}</span>\n        </div>\n      </div>\n\n      <ion-grid>\n        <ion-row class="menu-row" (click)="openPage({ title: \'Partages\', component: HomePage }, \'faq\')">\n          <span class="menu-ttl">Partages</span>\n          <span class="picto-ctn">\n            <img class="picto-right" src="../../assets/icon/home.svg">\n          </span>\n        </ion-row>\n\n        <ion-row class="menu-row" (click)="openPage({ title: \'Annonces\', component: AnnoncesPage }, \'ad\')">\n          <span class="menu-ttl">Annonces</span>\n          <span class="picto-ctn">\n            <img class="picto-right" src="../../assets/icon/marketing.svg">\n          </span>\n        </ion-row>\n\n        <ion-row class="menu-row" (click)="openPage({ title: \'Formations\', component: FormationsPage }, \'frm\')">\n          <span class="menu-ttl">Formations</span>\n          <span class="picto-ctn">\n            <img class="picto-right" src="../../assets/icon/mortarboard.svg">\n          </span>\n        </ion-row>\n\n        <ion-row class="menu-row" (click)="openPage({ title: \'News\', component: ASavoirPage }, \'news\')">\n          <span class="menu-ttl">News</span>\n          <span class="picto-ctn">\n            <img class="picto-right" src="../../assets/icon/agenda.svg">\n          </span>\n        </ion-row>\n\n        <ion-row class="menu-row bgGrey" (click)="showMoncompte()">\n          <span class="menu-ttl">Mon compte</span>\n          <span class="picto-ctn">\n            <img class="picto-right" src="../../assets/icon/settings.svg">\n          </span>\n        </ion-row>\n\n        <div id="my_account">\n          <ion-row class="menu-row" (click)="viewProfil();">\n            <span class="menu-ttl">Mon profil</span>\n            <span class="picto-ctn">\n              <img class="picto-right" src="../../assets/icon/user-bluelight.svg">\n            </span>\n          </ion-row>\n\n          <ion-row class="menu-row" (click)="openAlert();">\n            <span class="menu-ttl">Mes alertes</span>\n            <span class="picto-ctn">\n              <img class="picto-right" src="../../assets/icon/warning.svg">\n            </span>\n          </ion-row>\n\n          <ion-row class="menu-row" (click)="openAds();">\n            <span class="menu-ttl">Mes annonces</span>\n            <span class="picto-ctn">\n              <img class="picto-right" src="../../assets/icon/marketing.svg">\n            </span>\n          </ion-row>\n\n          <ion-row class="menu-row" (click)="openContact();">\n            <span class="menu-ttl">Contact</span>\n            <span class="picto-ctn">\n              <img class="picto-right" src="../../assets/icon/call.svg">\n            </span>\n          </ion-row>\n\n          <ion-row class="menu-row logout" (click)="logOut();">\n            <span class="menu-ttl">D&#233;connexion</span>\n            <span class="picto-ctn">\n              <img class="picto-right" src="../../assets/icon/logout.svg">\n            </span>\n          </ion-row>\n          <ion-row class="menu-bottom-margin"></ion-row>\n        </div>\n      </ion-grid>\n\n    </div>\n    <div class="menu-close" (click)="closeMenu();" (swipe)="swipeEvent($event)"></div>\n  </div>\n\n  <ion-row ion-fixed class="vers-row">\n    <ion-col class="vers-col" (click)="showML()">\n      <div class="ml-left">Mentions légales</div>\n    </ion-col>\n    <ion-col class="vers-col" (click)="showCGU()">\n      <div class="vers-right">CGU</div>\n    </ion-col>\n  </ion-row>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/menu/menu.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["f" /* Events */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_native_native_page_transitions__["a" /* NativePageTransitions */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_12__ionic_native_file__["a" /* File */]])
    ], MenuPage);
    return MenuPage;
}());

//# sourceMappingURL=menu.js.map

/***/ }),

/***/ 222:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Cropper2Page; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_cropperjs__ = __webpack_require__(78);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_cropperjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_angular_cropperjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_camera__ = __webpack_require__(79);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the Cropper2Page page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var Cropper2Page = /** @class */ (function () {
    function Cropper2Page(navCtrl, viewCtrl, camera) {
        this.navCtrl = navCtrl;
        this.viewCtrl = viewCtrl;
        this.camera = camera;
        this.croppedImage = null;
        this.myImage = null;
        this.scaleValX = 1;
        this.scaleValY = 1;
        this.cropperOptions = {
            aspectRatio: 1 / 1,
            dragMode: 'move',
            modal: true,
            guides: true,
            highlight: false,
            background: true,
            autoCrop: true,
            autoCropArea: 0.8,
            responsive: false
        };
    }
    Cropper2Page.prototype.cropperTouchStart = function (event) {
        event.stopPropagation();
        event.preventDefault();
    };
    Cropper2Page.prototype.captureImage = function () {
        var _this = this;
        var options = {
            quality: 100,
            targetWidth: 800,
            targetHeight: 800,
            destinationType: this.camera.DestinationType.DATA_URL,
            encodingType: this.camera.EncodingType.JPEG,
            mediaType: this.camera.MediaType.PICTURE,
            sourceType: this.camera.PictureSourceType.CAMERA,
            correctOrientation: true
        };
        this.camera.getPicture(options).then(function (imageData) {
            if (imageData != null) {
                _this.myImage = 'data:image/jpeg;base64,' + imageData;
            }
            else {
                _this.viewCtrl.dismiss(null);
            }
        }, function (err) {
            console.log("************captureImage****************");
            console.log(err);
        });
    };
    Cropper2Page.prototype.captureGallery = function () {
        var _this = this;
        var options = {
            quality: 100,
            targetWidth: 800,
            targetHeight: 800,
            destinationType: this.camera.DestinationType.DATA_URL,
            encodingType: this.camera.EncodingType.JPEG,
            mediaType: this.camera.MediaType.PICTURE,
            sourceType: this.camera.PictureSourceType.PHOTOLIBRARY,
            correctOrientation: true
        };
        this.camera.getPicture(options).then(function (imageData) {
            if (imageData != null) {
                _this.myImage = 'data:image/jpeg;base64,' + imageData;
            }
            else {
                _this.viewCtrl.dismiss(null);
            }
        }, function (err) {
            console.log("************captureGallery****************");
            console.log(err);
        });
    };
    Cropper2Page.prototype.reset = function () {
        this.angularCropper.cropper.reset();
    };
    Cropper2Page.prototype.clear = function () {
        // this.angularCropper.cropper.clear();
        this.viewCtrl.dismiss(null);
    };
    Cropper2Page.prototype.rotate = function () {
        this.angularCropper.cropper.rotate(90);
    };
    Cropper2Page.prototype.zoom = function (zoomIn) {
        var factor = zoomIn ? 0.1 : -0.1;
        this.angularCropper.cropper.zoom(factor);
    };
    Cropper2Page.prototype.scaleX = function () {
        this.scaleValX = this.scaleValX * -1;
        this.angularCropper.cropper.scaleX(this.scaleValX);
    };
    Cropper2Page.prototype.scaleY = function () {
        this.scaleValY = this.scaleValY * -1;
        this.angularCropper.cropper.scaleY(this.scaleValY);
    };
    Cropper2Page.prototype.move = function (x, y) {
        this.angularCropper.cropper.move(x, y);
    };
    Cropper2Page.prototype.save = function () {
        var imageData = this.angularCropper.cropper.getCroppedCanvas().toDataURL('image/jpeg', (100 / 100));
        // this.croppedImage = croppedImgB64String;
        if (JSON.stringify(imageData) != "[]") {
            console.log(JSON.stringify(imageData).substr(0, 20));
            var img = {
                id: new Date().getTime(),
                url: imageData,
                data: { nativeURL: imageData },
                base64: imageData,
                source: "galery"
            };
            this.viewCtrl.dismiss(img);
        }
        else {
            this.viewCtrl.dismiss(null);
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('angularCropper'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_2_angular_cropperjs__["AngularCropperjsComponent"])
    ], Cropper2Page.prototype, "angularCropper", void 0);
    Cropper2Page = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-cropper2',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/cropper2/cropper2.html"*/'<ion-header>\n  <ion-toolbar>\n    <ion-label class="annuler" (click)="clear();">\n      <img class="back-gc" src="../../assets/icon/back-117bcf.svg" />\n      <span class="back-faq">Annuler</span>\n    </ion-label>\n    <ion-buttons class="b-hdw" start *ngIf="myImage">\n      <button class="b-hd" ion-button (click)="reset()">\n        Réinitialiser\n      </button>\n      <button class="b-hd" ion-button (click)="save()">\n        Enregistrer\n      </button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n \n<ion-content>\n  <div class="btn-ctn">\n    <button class="btn" ion-button full (click)="captureGallery()" *ngIf="!myImage">Depuis la galerie</button>\n    <button class="btn" ion-button full (click)="captureImage()" *ngIf="!myImage">Depuis la camera</button>\n  </div>\n  <angular-cropper (tap)="cropperTouchStart($event)" (touchstart)="cropperTouchStart($event)" (touchend)="cropperTouchStart($event)" #angularCropper [cropperOptions]="cropperOptions" [imageUrl]="myImage" *ngIf="myImage"></angular-cropper>\n</ion-content>\n\n<div class="command">\n<ion-row *ngIf="myImage">\n  <!-- <ion-col col-4>\n    <button class="cod" ion-button outline icon-left color="primary" (click)="zoom(true)">\n      <ion-icon name="add"></ion-icon> Zoom\n    </button>\n  </ion-col>\n  <ion-col col-4>\n    <button class="cod" ion-button outline icon-left color="primary" (click)="zoom(false)">\n      <ion-icon name="remove"></ion-icon> Zoom\n    </button>\n  </ion-col>\n  <ion-col col-4>\n    <button class="cod" ion-button outline icon-left (click)="rotate()">\n      <ion-icon name="refresh"></ion-icon> 90 deg\n    </button>\n  </ion-col>\n\n  <ion-col col-4>\n    <button class="cod" ion-button clear (click)="scaleX()">\n      Mirroir\n    </button>\n  </ion-col>\n\n  <ion-col col-2>\n    <button class="cod" ion-button clear icon-only (click)="move(0, -10)">\n      <ion-icon name="arrow-round-up"></ion-icon>\n    </button>\n  </ion-col>\n  <ion-col col-2>\n    <button class="cod" ion-button clear icon-only (click)="move(0, 10)">\n      <ion-icon name="arrow-round-down"></ion-icon>\n    </button>\n  </ion-col>\n  <ion-col col-2>\n    <button class="cod" ion-button clear icon-only (click)="move(-10, 0)">\n      <ion-icon name="arrow-round-back"></ion-icon>\n    </button>\n  </ion-col>\n  <ion-col col-2>\n    <button class="cod" ion-button clear icon-only (click)="move(10, 0)">\n      <ion-icon name="arrow-round-forward"></ion-icon>\n    </button>\n    </ion-col> -->\n</ion-row>\n</div>'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/cropper2/cropper2.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_camera__["a" /* Camera */]])
    ], Cropper2Page);
    return Cropper2Page;
}());

//# sourceMappingURL=cropper2.js.map

/***/ }),

/***/ 23:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FormationsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__a_savoir_a_savoir__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__annonces_annonces__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__menu_menu__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__home_home__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__uprofil_uprofil__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__formation_details_formation_details__ = __webpack_require__(91);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__notifications_notifications__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__formation_popup_formation_popup__ = __webpack_require__(159);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__formationadd_formationadd__ = __webpack_require__(160);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__ionic_native_toast__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__mesannonces_mesannonces__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__faqfilter_faqfilter__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__dentart_dentart__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__ionic_storage__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__ionic_native_social_sharing__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__sharemodal_sharemodal__ = __webpack_require__(38);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};




















var FormationsPage = /** @class */ (function () {
    function FormationsPage(navCtrl, navParams, modalCtrl, events, http, globals, toast, platform, storage, socialSharing) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.modalCtrl = modalCtrl;
        this.events = events;
        this.http = http;
        this.globals = globals;
        this.toast = toast;
        this.platform = platform;
        this.storage = storage;
        this.socialSharing = socialSharing;
        this.load = 1;
        this.paging = 0;
        this.geoloc = 0;
        this.user = {};
        this.listForms = [];
        this.listThisMonth = [];
        this.listNextMonth = [];
        this.listInFuture = [];
        this.listCat = [];
        this.listType = [];
        this.category = { id: "", slug: "", name: "" };
        this.type = { id: "", slug: "", name: "" };
        this.isGeoloc = 0;
        this.id_cat_f = '';
        this.id_typ_f = '';
        this.displayedPopoverID = "";
        this.isReloading = false;
        this.isInfiteScroll = false;
        this.user = navParams.get('user');
        this.getUserPoint();
        this.getListCat();
        this.getListTypes();
        this.getListFormations(null, false);
        platform.registerBackButtonAction(function () {
            navCtrl.pop();
        });
    }
    FormationsPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad FormationsPage');
    };
    FormationsPage.prototype.ionViewWillEnter = function () {
        var _this = this;
        this.platform.registerBackButtonAction(function () {
            _this.navCtrl.pop();
        });
    };
    FormationsPage.prototype.goBack = function () {
        this.navCtrl.pop();
    };
    FormationsPage.prototype.rad = function (x) {
        return x * Math.PI / 180;
    };
    ;
    FormationsPage.prototype.getDistance = function (p1, p2) {
        var R = 6378137; // Earth’s mean radius in meter
        var dLat = this.rad(p2.lat - p1.lat);
        var dLong = this.rad(p2.lng - p1.lng);
        var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
            Math.cos(this.rad(p1.lat)) * Math.cos(this.rad(p2.lat)) *
                Math.sin(dLong / 2) * Math.sin(dLong / 2);
        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
        var d = R * c;
        return d; // returns the distance in meter
    };
    ;
    FormationsPage.prototype.getUserPoint = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.http.get('https://maps.googleapis.com/maps/api/geocode/json?address=' + this.user.address + '&key=' + this.globals.variables.API_KEY, {}, {})
                            .then(function (data) {
                            console.log("User point retrived");
                            // console.log(data.data)
                            var resy = JSON.parse(data.data).results[0];
                            _this.user.pointGeocode = resy != null ? resy.geometry.location : { lat: 0, lng: 0 };
                            console.log(JSON.stringify(_this.user.pointGeocode));
                        })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    FormationsPage.prototype.refresh = function (refresherEvent) {
        var _this = this;
        refresherEvent.complete();
        this.load = 1;
        this.isReloading = true;
        var listnerInfinite = null;
        listnerInfinite = setInterval(function () {
            console.log("listen the scroller");
            if (_this.isInfiteScroll) { }
            else {
                clearInterval(listnerInfinite);
                _this.listForms = [];
                _this.paging = 0;
                // if (refresherEvent != null) {
                //   refresherEvent.complete()
                // }
                if (_this.isGeoloc == 1) {
                    _this.getListFormationsByGeoloc(null, true);
                }
                else {
                    _this.getListFormations(null, true);
                }
            }
        }, 1000);
    };
    FormationsPage.prototype.openMenu = function () {
        var _this = this;
        var menu = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_4__menu_menu__["a" /* MenuPage */], {
            user: this.user
        }, {
            enterAnimation: 'modal-translate-up-enter',
            leaveAnimation: 'modal-translate-up-leave'
        });
        menu.onDidDismiss(function (page) {
            _this.platform.registerBackButtonAction(function () {
                _this.navCtrl.pop();
            });
            if (page.title == "Partages") {
                var adPage = __WEBPACK_IMPORTED_MODULE_5__home_home__["a" /* HomePage */];
                _this.navCtrl.setRoot(adPage, {
                    user: _this.user
                }, {
                    animate: true
                });
            }
            else if (page.title == "profil") {
                var adPage = __WEBPACK_IMPORTED_MODULE_6__uprofil_uprofil__["a" /* UprofilPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "UprofilPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "UprofilPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(adPage, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "Annonces") {
                var adPage = __WEBPACK_IMPORTED_MODULE_3__annonces_annonces__["a" /* AnnoncesPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "AnnoncesPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "AnnoncesPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(adPage, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "Formations") {
                //
            }
            else if (page.title == "News") {
                var actuPage = __WEBPACK_IMPORTED_MODULE_2__a_savoir_a_savoir__["a" /* ASavoirPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "ASavoirPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "ASavoirPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(actuPage, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "Mes alertes") {
                var notif = __WEBPACK_IMPORTED_MODULE_10__notifications_notifications__["a" /* NotificationsPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "NotificationsPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "NotificationsPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(notif, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == 'mesannonces') {
                var notif = __WEBPACK_IMPORTED_MODULE_14__mesannonces_mesannonces__["a" /* MesannoncesPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "MesannoncesPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "MesannoncesPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(notif, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "deconnexion") {
                _this.events.publish('user:logedOut', _this.user);
                _this.load = 1;
                _this.storage.set('partages', null);
                _this.storage.set('user', null)
                    .then(function (data) {
                    console.log(JSON.stringify(data));
                    _this.storage.clear();
                    setTimeout(function () {
                        _this.load = 0;
                        _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_16__dentart_dentart__["a" /* DentartPage */], {}, {
                            animate: true
                        });
                    }, 500);
                }, function (error) {
                    console.log(JSON.stringify(error));
                });
            }
            else if (page.title == "") {
                //
            }
        });
        menu.present();
    };
    FormationsPage.prototype.getListFormations = function (infiniteScroll, isRefresh) {
        var _this = this;
        //listFormations
        // this.load = 1;
        console.log("Les id cat et types === " + this.id_cat_f + " === " + this.id_typ_f);
        if (infiniteScroll == null) {
            this.listForms = [];
            this.listThisMonth = [];
            this.listNextMonth = [];
            this.listInFuture = [];
        }
        var user_id = this.user.id_User != null ? this.user.id_User : this.user.id;
        this.http.get(this.globals.variables.urls.listFormations + "?offset=" + this.paging +
            "&category=" + this.id_cat_f + "&user_id=" + user_id +
            "&type=" + this.id_typ_f, {}, {})
            .then(function (data) { return __awaiter(_this, void 0, void 0, function () {
            var res, c, annee, mois, jour, dateEN, char70;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        res = JSON.parse(data.data);
                        if (res.length > 0) {
                            if (infiniteScroll != null) {
                                infiniteScroll.complete();
                            }
                            this.isInfiteScroll = false;
                        }
                        else {
                            this.isInfiteScroll = false;
                            if (infiniteScroll != null) {
                                infiniteScroll.complete();
                                // this.toast.show("Fin de la liste des formations", "3000", "bottom")
                                //   .subscribe(
                                //     toast => {
                                //       console.log(JSON.stringify(toast));
                                //     }
                                //   );
                            }
                        }
                        console.log("List des formations");
                        c = 0;
                        _a.label = 1;
                    case 1:
                        if (!(c < res.length)) return [3 /*break*/, 5];
                        if (!(!isRefresh && this.isReloading)) return [3 /*break*/, 2];
                        if (infiniteScroll != null) {
                            infiniteScroll.complete();
                        }
                        this.isInfiteScroll = false;
                        return [3 /*break*/, 5];
                    case 2:
                        if (!((isRefresh && this.isReloading) || (!isRefresh && !this.isReloading))) return [3 /*break*/, 4];
                        annee = res[c].date.charAt(6) + res[c].date.charAt(7) + res[c].date.charAt(8) + res[c].date.charAt(9);
                        mois = res[c].date.charAt(3) + res[c].date.charAt(4);
                        jour = res[c].date.charAt(0) + res[c].date.charAt(1);
                        dateEN = annee + '-' + mois + '-' + jour;
                        res[c].images_count = 0;
                        if (res[c].image != '' && res[c].image != null)
                            res[c].images_count += 1;
                        res[c].date_fr = jour + '/' + mois + '/' + annee;
                        char70 = "";
                        if (res[c].programme_de_la_formation.length > 200) {
                            char70 = "" + res[c].programme_de_la_formation.substr(0, 199) + "...";
                        }
                        else {
                            char70 = res[c].programme_de_la_formation;
                        }
                        res[c].char70 = char70;
                        // let dateFrm = new Date(dateEN);
                        // let dateNow = new Date();
                        // if (dateFrm.getMonth() == dateNow.getMonth() && dateFrm.getFullYear() == dateNow.getFullYear()) {
                        //   this.listThisMonth.push(res[c]);
                        // }
                        // else if (dateFrm.getMonth() == (dateNow.getMonth() + 1) && dateFrm.getFullYear() == dateNow.getFullYear()) {
                        //   this.listNextMonth.push(res[c]);
                        // }
                        // else if (dateFrm.getMonth() >= (dateNow.getMonth() + 2) && dateFrm.getFullYear() == dateNow.getFullYear()) {
                        //   this.listInFuture.push(res[c]);
                        // }
                        // else if (dateFrm.getMonth() <= dateNow.getMonth() && dateFrm.getFullYear() > dateNow.getFullYear()) {
                        //   this.listInFuture.push(res[c]);
                        // }
                        return [4 /*yield*/, this.listForms.push(res[c])];
                    case 3:
                        // let dateFrm = new Date(dateEN);
                        // let dateNow = new Date();
                        // if (dateFrm.getMonth() == dateNow.getMonth() && dateFrm.getFullYear() == dateNow.getFullYear()) {
                        //   this.listThisMonth.push(res[c]);
                        // }
                        // else if (dateFrm.getMonth() == (dateNow.getMonth() + 1) && dateFrm.getFullYear() == dateNow.getFullYear()) {
                        //   this.listNextMonth.push(res[c]);
                        // }
                        // else if (dateFrm.getMonth() >= (dateNow.getMonth() + 2) && dateFrm.getFullYear() == dateNow.getFullYear()) {
                        //   this.listInFuture.push(res[c]);
                        // }
                        // else if (dateFrm.getMonth() <= dateNow.getMonth() && dateFrm.getFullYear() > dateNow.getFullYear()) {
                        //   this.listInFuture.push(res[c]);
                        // }
                        _a.sent();
                        if (c == res.length - 1) {
                            this.load = 0;
                            if (this.isReloading) {
                                this.isReloading = false;
                            }
                        }
                        _a.label = 4;
                    case 4:
                        c++;
                        return [3 /*break*/, 1];
                    case 5: return [2 /*return*/];
                }
            });
        }); }, function (error) {
            console.log(JSON.stringify(error));
            _this.load = 0;
            _this.isInfiteScroll = false;
            if (infiniteScroll != null) {
                infiniteScroll.complete();
                _this.toast.show("Erreur du serveur", "3000", "bottom")
                    .subscribe(function (toast) {
                    console.log(JSON.stringify(toast));
                });
            }
        });
    };
    FormationsPage.prototype.clickProximite = function () {
        this.paging = 0;
        this.load = 1;
        if (this.isGeoloc == 0) {
            this.isGeoloc = 1;
            this.getListFormationsByGeoloc(null, false);
        }
        else {
            this.isGeoloc = 0;
            this.getListFormations(null, false);
        }
    };
    FormationsPage.prototype.getListFormationsByGeoloc = function (infiniteScroll, isRefresh) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var user_palce_id;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        console.log("Resuil ======================== ++++++++++++++++++++++++++");
                        user_palce_id = JSON.parse(this.user.full_adresse).place_id;
                        if (infiniteScroll == null) {
                            this.listForms = [];
                            this.listThisMonth = [];
                            this.listNextMonth = [];
                            this.listInFuture = [];
                        }
                        console.log(user_palce_id);
                        return [4 /*yield*/, this.http.post(this.globals.variables.urls.listFormByGeoloc + '?offset=' + this.paging +
                                "&category=" + this.category.id + "&place_id=" + user_palce_id + "&limit=20", {
                                "place_id": "" + user_palce_id,
                                "offset": "" + this.paging,
                                "category": "" + this.category.id,
                                "limit": "30"
                            }, {})
                                .then(function (data) { return __awaiter(_this, void 0, void 0, function () {
                                var res, c, annee, mois, jour, dateEN, char70;
                                return __generator(this, function (_a) {
                                    switch (_a.label) {
                                        case 0:
                                            console.log("Resuil ======================== ++++++++++++++++++++++++++");
                                            res = JSON.parse(data.data);
                                            if (res.length > 0) {
                                                if (infiniteScroll != null) {
                                                    infiniteScroll.complete();
                                                }
                                                this.isInfiteScroll = false;
                                            }
                                            else {
                                                // this.load = 0;
                                                this.isInfiteScroll = false;
                                                if (infiniteScroll != null) {
                                                    infiniteScroll.complete();
                                                    // this.toast.show("Fin de la liste des formations", "3000", "bottom")
                                                    //   .subscribe(
                                                    //     toast => {
                                                    //       console.log(JSON.stringify(toast));
                                                    //     }
                                                    //   );
                                                }
                                                else {
                                                    // this.toast.show("Pas de formations trouvées dans votre proximité", "3000", "bottom")
                                                    //   .subscribe(
                                                    //     toast => {
                                                    //       console.log(JSON.stringify(toast));
                                                    //     }
                                                    //   );
                                                }
                                            }
                                            ///
                                            console.log("List des formations");
                                            c = 0;
                                            _a.label = 1;
                                        case 1:
                                            if (!(c < res.length)) return [3 /*break*/, 5];
                                            if (!(!isRefresh && this.isReloading)) return [3 /*break*/, 2];
                                            if (infiniteScroll != null) {
                                                infiniteScroll.complete();
                                            }
                                            this.isInfiteScroll = false;
                                            return [3 /*break*/, 5];
                                        case 2:
                                            if (!((isRefresh && this.isReloading) || (!isRefresh && !this.isReloading))) return [3 /*break*/, 4];
                                            annee = res[c].date.charAt(6) + res[c].date.charAt(7) + res[c].date.charAt(8) + res[c].date.charAt(9);
                                            mois = res[c].date.charAt(3) + res[c].date.charAt(4);
                                            jour = res[c].date.charAt(0) + res[c].date.charAt(1);
                                            dateEN = annee + '-' + mois + '-' + jour;
                                            res[c].images_count = 0;
                                            if (res[c].image != '' && res[c].image != null)
                                                res[c].images_count += 1;
                                            res[c].date_fr = jour + '/' + mois + '/' + annee;
                                            char70 = "";
                                            if (res[c].programme_de_la_formation.length > 200) {
                                                char70 = "" + res[c].programme_de_la_formation.substr(0, 199) + "...";
                                            }
                                            else {
                                                char70 = res[c].programme_de_la_formation;
                                            }
                                            res[c].char70 = char70;
                                            // let dateFrm = new Date(dateEN);
                                            // let dateNow = new Date();
                                            // if (dateFrm.getMonth() == dateNow.getMonth() && dateFrm.getFullYear() == dateNow.getFullYear()) {
                                            //   this.listThisMonth.push(res[c]);
                                            // }
                                            // else if (dateFrm.getMonth() == (dateNow.getMonth() + 1) && dateFrm.getFullYear() == dateNow.getFullYear()) {
                                            //   await this.listNextMonth.push(res[c]);
                                            // }
                                            // else if (dateFrm.getMonth() >= (dateNow.getMonth() + 2) && dateFrm.getFullYear() == dateNow.getFullYear()) {
                                            //   await this.listInFuture.push(res[c]);
                                            // }
                                            // else if (dateFrm.getMonth() <= dateNow.getMonth() && dateFrm.getFullYear() > dateNow.getFullYear()) {
                                            //   await this.listInFuture.push(res[c]);
                                            // }
                                            // let distFromUser = this.getDistance(this.user.pointGeocode, { lat: res[c].lat, lng: res[c].lng })
                                            // res[c].distFromUser = distFromUser
                                            console.log("Distance between user and formation ::::::: /// ====");
                                            console.log(res[c].distance);
                                            return [4 /*yield*/, this.listForms.push(res[c])];
                                        case 3:
                                            _a.sent();
                                            if (c == (res.length - 1)) {
                                                this.load = 0;
                                                if (this.isReloading) {
                                                    this.isReloading = false;
                                                }
                                            }
                                            _a.label = 4;
                                        case 4:
                                            c++;
                                            return [3 /*break*/, 1];
                                        case 5:
                                            this.listForms.sort(function (p1, p2) {
                                                return p1.distance - p2.distance;
                                            });
                                            return [2 /*return*/];
                                    }
                                });
                            }); }, function (error) {
                                console.log(JSON.stringify(error));
                                _this.load = 0;
                                _this.isInfiteScroll = false;
                                if (infiniteScroll != null) {
                                    infiniteScroll.complete();
                                    _this.toast.show("Erreur du serveur", "3000", "bottom")
                                        .subscribe(function (toast) {
                                        console.log(JSON.stringify(toast));
                                    });
                                }
                            })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    FormationsPage.prototype.showDetails = function (formation) {
        //
        var fDet = __WEBPACK_IMPORTED_MODULE_9__formation_details_formation_details__["a" /* FormationDetailsPage */];
        this.navCtrl.push(fDet, {
            user: this.user,
            formation: formation
        });
    };
    FormationsPage.prototype.requestAddFormation = function () {
        var _this = this;
        var popup = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_11__formation_popup_formation_popup__["a" /* FormationPopupPage */], {
            user: this.user
        });
        popup.onDidDismiss(function (data) {
            if (data.state == "oui") {
                var formadd = __WEBPACK_IMPORTED_MODULE_12__formationadd_formationadd__["a" /* FormationaddPage */];
                _this.navCtrl.push(formadd, {
                    user: _this.user
                });
            }
            else {
                //
            }
        });
        popup.present();
    };
    FormationsPage.prototype.doInfinite = function (infiniteScroll) {
        if (this.isInfiteScroll) {
            infiniteScroll.complete();
        }
        else {
            this.isInfiteScroll = true;
            console.log('Begin async operation');
            this.paging += 1;
            if (this.isGeoloc == 1) {
                this.getListFormationsByGeoloc(infiniteScroll, false);
            }
            else {
                this.getListFormations(infiniteScroll, false);
            }
        }
    };
    FormationsPage.prototype.getListCat = function () {
        var _this = this;
        this.http.get(this.globals.variables.urls.listFormatiosCat, {}, {})
            .then(function (data) {
            _this.listCat = JSON.parse(data.data);
        }, function (error) {
            console.log("Error getting list categories formations");
        });
    };
    FormationsPage.prototype.getListTypes = function () {
        var _this = this;
        this.http.get(this.globals.variables.urls.listTypesFormat, {}, {})
            .then(function (data) {
            console.log("Got list types");
            console.log(JSON.stringify(data.data));
            _this.listType = JSON.parse(data.data);
        }, function (error) {
            console.log("Error getting list categories formations");
        });
    };
    FormationsPage.prototype.showFilter = function () {
        var _this = this;
        var seleselectBefore = [];
        if (this.category.id != null) {
            seleselectBefore.push(this.category);
        }
        else if (this.category.length > 0) {
            // seleselectBefore.concat(this.category)
            for (var gh = 0; gh < this.category.length; gh++) {
                seleselectBefore.push(this.category[gh]);
            }
        }
        if (this.type.id != null) {
            seleselectBefore.push(this.type);
        }
        else if (this.type.length > 0) {
            for (var gh = 0; gh < this.type.length; gh++) {
                seleselectBefore.push(this.type[gh]);
            }
        }
        console.log("seleselectBefore");
        console.log(JSON.stringify(this.category));
        console.log(JSON.stringify(this.type));
        console.log(JSON.stringify(seleselectBefore));
        var filtre = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_15__faqfilter_faqfilter__["a" /* FaqfilterPage */], {
            theme: this.listCat,
            listTyp: this.listType,
            user: this.user,
            title: "Filtres",
            selectBefore: seleselectBefore,
            selectCate: this.category,
            selectType: this.type,
            source: "form_filter"
        });
        filtre.onDidDismiss(function (data) {
            _this.platform.registerBackButtonAction(function () {
                _this.navCtrl.pop();
            });
            console.log("JSON.stringify(data)");
            console.log(JSON.stringify(data));
            _this.category = data.selectedCat != null ? data.selectedCat : _this.category;
            _this.type = data.selectedTyp != null ? data.selectedTyp : _this.type;
            if (_this.category.id != null) {
                _this.id_cat_f = _this.category.id;
            }
            else if (_this.category.length > 0) {
                for (var c = 0; c < _this.category.length; c++) {
                    _this.id_cat_f += _this.category[c].id + '-';
                }
            }
            else {
                _this.id_cat_f = '';
            }
            if (_this.type.id != null) {
                _this.id_typ_f = _this.type.id;
            }
            else if (_this.type.length > 0) {
                for (var c = 0; c < _this.type.length; c++) {
                    _this.id_typ_f += _this.type[c].id + '-';
                }
            }
            else {
                _this.id_typ_f = '';
            }
            _this.load = 1;
            _this.paging = 0;
            _this.getListFormations(null, false);
        });
        filtre.present();
    };
    FormationsPage.prototype.goToHome = function () {
        this.navCtrl.popToRoot();
    };
    FormationsPage.prototype.addToFavorite = function (ad) {
        var _this = this;
        this.http.post(this.globals.variables.urls.addFavorite, {
            "user_id": this.user.id_User != null ? this.user.id_User : this.user.id,
            "post_id": ad.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log(JSON.stringify(res));
            if (res.status == "ok") {
                // for (let u = 0; u < this.listInFuture.length; u++) {
                if (ad.user_favorite == 1) {
                    ad.favorite_count = parseInt(ad.favorite_count) - 1;
                    ad.user_favorite = 0;
                    _this.toast.show("Vous avez annulé votre \"J'aime\"", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                    return;
                }
                else if (ad.user_favorite == 0) {
                    ad.favorite_count = parseInt(ad.favorite_count) + 1;
                    ad.user_favorite = 1;
                    _this.toast.show("Vous avez aimé cette formation", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                    return;
                }
            }
            else {
                console.log(JSON.stringify(res));
            }
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    FormationsPage.prototype.addToFav = function (ad, iconItemID) {
        var _this = this;
        var selectedItem = document.getElementById(iconItemID);
        selectedItem.classList.add("fadeDown");
        selectedItem.style.opacity = "0.2";
        this.http.post(this.globals.variables.urls.addLike, {
            user_id: this.user.id_User != null ? this.user.id_User : this.user.id,
            post_id: ad.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log("Resultat du serveur");
            console.log(JSON.stringify(res));
            selectedItem.classList.remove("fadeDown");
            selectedItem.style.opacity = "1";
            document.getElementById(_this.displayedPopoverID).classList.remove("popoverdisplay");
            document.getElementById(_this.displayedPopoverID).classList.add("popoverhide");
            document.getElementById(_this.displayedPopoverID).style.display = "none";
            _this.displayedPopoverID = "";
            if (res.status == "ok") {
                if (ad.user_like == 0) {
                    ad.user_like = 1;
                    _this.toast.show("Ajouté dans vos favoris", "2000", "bottom")
                        .subscribe(function (t) {
                        console.log(JSON.stringify(t));
                    });
                }
                else if (ad.user_like == 1) {
                    ad.user_like = 0;
                    _this.toast.show("Supprimé de vos favoris", "2000", "bottom")
                        .subscribe(function (t) {
                        console.log(JSON.stringify(t));
                    });
                }
            }
            else {
                _this.toast.show("Erreur lors d'ajout dans vos favoris", "2000", "bottom")
                    .subscribe(function (t) {
                    console.log(JSON.stringify(t));
                });
            }
        }, function (error) {
            console.log("Erreur d'acces au serveur");
        });
    };
    FormationsPage.prototype.shareViaApp = function (faq) {
        var _this = this;
        console.log("URL :::: " + faq.url);
        var file = [];
        var bodyText = "";
        var link = "";
        bodyText += "";
        var perma_link = faq.url;
        // bodyText += faq.author_infos.pseudo + " a partagé : \n"
        bodyText += faq.no_html_description;
        if (faq.image != null && faq.image != '') {
            file.push(faq.image);
        }
        if (faq.image_2 != null && faq.image_2 != '') {
            file.push(faq.image_2);
        }
        if (faq.image_3 != null && faq.image_3 != '') {
            file.push(faq.image_3);
        }
        if (faq.image_4 != null && faq.image_4 != '') {
            file.push(faq.image_4);
        }
        var shareModal = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_19__sharemodal_sharemodal__["a" /* SharemodalPage */], {
            file: file,
            bodyText: bodyText,
            link: link,
            perma_link: perma_link
        });
        shareModal.onDidDismiss(function (data) {
            _this.platform.registerBackButtonAction(function () {
                _this.navCtrl.pop();
            });
            console.log("Result from sharing : ");
            console.log(JSON.stringify(data));
            if (data.shared) {
                for (var u = 0; u < _this.listForms.length; u++) {
                    if (_this.listForms[u].id == faq.id) {
                        _this.listForms[u].share_count = parseInt(_this.listForms[u].share_count) + 1;
                        _this.listForms[u].user_shared = 1;
                        // this.toast.show("Vous avez partagé cette annonce", "2000", "bottom").subscribe(
                        //   toast => {
                        //     console.log(toast);
                        //   }
                        // );
                    }
                }
                _this.http.post(_this.globals.variables.urls.addToShare, {
                    "user_id": _this.user.id_User != null ? _this.user.id_User : _this.user.id,
                    "post_id": faq.id
                }, {})
                    .then(function (data) {
                    var res = JSON.parse(data.data);
                    console.log(JSON.stringify(res));
                    if (res.status == "ok") {
                    }
                    else {
                        console.log(JSON.stringify(res));
                    }
                }, function (error) {
                    console.log(JSON.stringify(error));
                });
            }
        });
        shareModal.present();
    };
    FormationsPage.prototype.share = function (ad) {
        var _this = this;
        var file = [];
        if (ad.ad_image_1 != null && ad.ad_image_1 != '') {
            file.push(ad.ad_image_1);
        }
        if (ad.ad_image_2 != null && ad.ad_image_2 != '') {
            file.push(ad.ad_image_2);
        }
        if (ad.ad_image_3 != null && ad.ad_image_3 != '') {
            file.push(ad.ad_image_3);
        }
        if (ad.ad_image_4 != null && ad.ad_image_4 != '') {
            file.push(ad.ad_image_4);
        }
        this.socialSharing.share(ad.programme_de_la_formation, ad.title, file, (ad.lien != null && ad.lien != "" && ad.lien != false && ad.lien != "#" ? ad.lien : ""))
            .then(function (data) {
            console.log("Share success");
            console.log(JSON.stringify(data));
            _this.http.post(_this.globals.variables.urls.addToShare, {
                "user_id": _this.user.id_User != null ? _this.user.id_User : _this.user.id,
                "post_id": ad.id
            }, {})
                .then(function (data) {
                var res = JSON.parse(data.data);
                console.log(JSON.stringify(res));
                // if (res.status == "ok") {
                for (var u = 0; u < _this.listInFuture.length; u++) {
                    if (_this.listInFuture[u].id == ad.id) {
                        _this.listInFuture[u].share_count = parseInt(_this.listInFuture[u].share_count) + 1;
                        _this.listInFuture[u].user_shared = 1;
                        _this.toast.show("Vous avez partagé cette formation", "2000", "bottom").subscribe(function (toast) {
                            console.log(toast);
                        });
                    }
                }
                for (var u = 0; u < _this.listNextMonth.length; u++) {
                    if (_this.listNextMonth[u].id == ad.id) {
                        _this.listNextMonth[u].share_count = parseInt(_this.listNextMonth[u].share_count) + 1;
                        _this.listNextMonth[u].user_shared = 1;
                        _this.toast.show("Vous avez partagé cette formation", "2000", "bottom").subscribe(function (toast) {
                            console.log(toast);
                        });
                    }
                }
                for (var u = 0; u < _this.listThisMonth.length; u++) {
                    if (_this.listThisMonth[u].id == ad.id) {
                        _this.listThisMonth[u].share_count = parseInt(_this.listThisMonth[u].share_count) + 1;
                        _this.listThisMonth[u].user_shared = 1;
                        _this.toast.show("Vous avez partagé cette formation", "2000", "bottom").subscribe(function (toast) {
                            console.log(toast);
                        });
                    }
                }
                // }
                // else {
                console.log(JSON.stringify(res));
                // }
            }, function (error) {
                console.log(JSON.stringify(error));
            });
        }, function (error) {
            console.log("Share error");
            console.log(JSON.stringify(error));
        });
    };
    FormationsPage.prototype.report = function (ad, iconItemID) {
        var _this = this;
        var selectedItem = document.getElementById(iconItemID);
        selectedItem.classList.add("fadeDown");
        selectedItem.style.opacity = "0.2";
        this.http.post(this.globals.variables.urls.repportFaQ, {
            "user_id": this.user.id_User != null ? this.user.id_User : this.user.id,
            "post_id": ad.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log(JSON.stringify(res));
            if (res.status == "ok") {
                if (ad.user_report == 1) {
                    ad.user_report = 0;
                    _this.toast.show("Votre signalisation a été annulée", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
                else {
                    ad.user_report = 1;
                    _this.toast.show("Vous avez signalé cette formation", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
            }
            else {
                console.log(JSON.stringify(res));
                _this.toast.show("Vous avez déjà signalé cette formation", "2000", "bottom").subscribe(function (toast) {
                    console.log(toast);
                });
            }
            selectedItem.classList.remove("fadeDown");
            selectedItem.style.opacity = "1";
            document.getElementById(_this.displayedPopoverID).classList.remove("popoverdisplay");
            document.getElementById(_this.displayedPopoverID).classList.add("popoverhide");
            document.getElementById(_this.displayedPopoverID).style.display = "none";
            _this.displayedPopoverID = "";
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    FormationsPage.prototype.displayPopover = function (popoverid) {
        var classL = document.getElementById(popoverid).classList.toString();
        console.log(classL);
        console.log(classL.indexOf("popoverdisplay"));
        if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") === -1 && this.displayedPopoverID == "") {
            console.log("=====///===Displayed ", popoverid);
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") === -1 && this.displayedPopoverID != "") {
            console.log("=====///===Displayed ", popoverid);
            document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay");
            document.getElementById(this.displayedPopoverID).classList.add("popoverhide");
            document.getElementById(this.displayedPopoverID).style.display = "none";
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") !== -1 && classL.indexOf("popoverhide") === -1 && this.displayedPopoverID == popoverid) {
            console.log("=====///===Hiden ", popoverid);
            document.getElementById(popoverid).classList.remove("popoverdisplay");
            document.getElementById(popoverid).classList.add("popoverhide");
            document.getElementById(popoverid).style.display = "none";
            this.displayedPopoverID = "";
            console.log("=====///===Hiden ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") !== -1 && this.displayedPopoverID != popoverid && this.displayedPopoverID != "") {
            console.log("=====///===Displayed Other : => ", popoverid);
            document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay");
            document.getElementById(this.displayedPopoverID).classList.add("popoverhide");
            document.getElementById(this.displayedPopoverID).style.display = "none";
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.remove("popoverhide");
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed Other : => ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") !== -1 && this.displayedPopoverID == "") {
            console.log("=====///===Displayed Once : => ", popoverid);
            document.getElementById(popoverid).classList.remove("popoverhide");
            document.getElementById(popoverid).classList.remove("popoverdisplay");
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed Once : => ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") !== -1 && this.displayedPopoverID == popoverid) {
            // this.displayHide()
        }
    };
    FormationsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-formations',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/formations/formations.html"*/'<ion-content class="pr">\n\n  <ion-row ion-fixed class="load-ctn" id="load" *ngIf="load == 1">\n    <ion-spinner class="loading-custom" name="crescent" color="vert_logo"></ion-spinner>\n  </ion-row>\n\n  <ion-row ion-fixed class="header">\n\n    <ion-col></ion-col>\n    <ion-col (click)="goToHome()">\n      <ion-label class="da">\n        <img class="logo" src="assets/imgs/da_image/logo-dentart.png">\n        <span class="bold">Dent</span><span class="fine">Art</span>\n      </ion-label>\n    </ion-col>\n    <ion-col></ion-col>\n  </ion-row>\n\n  <div class="container">\n\n    <ion-refresher (ionRefresh)="refresh($event)">\n      <ion-refresher-content pullingIcon="arrow-dropdown" pullingText="."\n        refreshingSpinner="none" refreshingText="" pullMin="120" pullMax="200" class="refresher">\n      </ion-refresher-content>\n    </ion-refresher>\n\n    <ion-row class="no-form-ctn" *ngIf="listForms.length <= 0 && load == 0">\n      <!-- ADD_28_06_2019 -->\n      <ion-label class="no-form-lab">\n        <!-- Aucune formation trouvée -->\n      </ion-label>\n    </ion-row>\n\n    <div class="theBlock" *ngFor="let ad of listForms">\n      <div class="row1">\n        <div class="row1-col1 row-text" (click)="showDetails(ad);">\n          <div class="faq-ttl-bold" [innerHtml]="ad.title"></div>\n          <div class="faq-ttl" [innerHtml]="ad.categorie.name"></div>\n          <div class="faq-desc" [innerHtml]="ad.char70"></div>\n          <div class="more" *ngIf="ad.char70.length > 199">Voir plus ...</div>\n        </div>\n        <div class="row1-col2">\n\n          <div class="drop-down-icon" (click)="displayPopover(\'popoverfrm1\'+ad.id)">\n            <div class="left-bar"></div>\n            <div class="right-bar"></div>\n          </div>\n          <div class="popover-ctn" id="popoverfrm1{{ad.id}}">\n            <div class="popover-tsingy">\n              <div class="half-transparent"></div>\n            </div>\n            <div class="list-ctn">\n              <div class="option-item" id="faviconfrm{{ad.id}}" (click)="addToFav(ad, \'faviconfrm\'+ad.id)">\n                <div class="op-it-icon">\n                  <img class="it-icon" src="../../assets/icon/heart-green-blue.svg" />\n                </div>\n                <div class="item-text">Favoris</div>\n              </div>\n              <div class="sep-popover"></div>\n              <div class="option-item" id="repiconfrm{{ad.id}}" (click)="report(ad, \'repiconfrm\'+ad.id)">\n                <div class="op-it-icon">\n                  <img class="it-icon" src="../../assets/icon/warning.svg" />\n                </div>\n                <div class="item-text">Signaler</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="row-text" (click)="showDetails(ad);">\n        <!-- <div class="faq-ttl" [innerHtml]="ad.categorie.name"></div>\n        <div class="faq-desc" [innerHtml]="ad.char70"></div> -->\n      </div>\n      <div *ngIf="ad.image == null || ad.image != \'\' || ad.image != false" class="row2" (click)="showDetails(ad);"\n        [style.background-image]="\'url(../../assets/imgs/load/Chargement.gif)\'">\n        <div *ngIf="ad.image == null || ad.image != \'\' || ad.image != false" class="loading-image"\n          [style.background-image]="\'url(\'+(ad.image != null && ad.image != \'\' ? ad.image : \'../../assets/imgs/da_image/Rectangle-05.jpg\')+\')\'"></div>\n        <div class="photo-badge">\n          {{ad.images_count}}\n          <img class="nb-photo-icon" src="../../assets/icon/photo-camera-white.svg" />\n        </div>\n      </div>\n      <div class="row3">\n        <div class="col-foot" (click)="addToFavorite(ad);">\n          <div class="foot-badge" *ngIf="ad.favorite_count == null">0</div>\n          <div class="foot-badge" *ngIf="ad.favorite_count < 100">{{ad.favorite_count}}</div>\n          <div class="foot-badge" *ngIf="ad.favorite_count >= 100">99+</div>\n          <div class="foot-block-icon-ctn">\n            <img class="foot-block-icon"\n              src="{{ad.user_favorite != 0 && ad.user_favorite != \'0\' ? \'../../assets/icon/like-fin-green.svg\' : \'../../assets/icon/like-fin-blue.svg\' }}" />\n          </div>\n          <div class="foot-label">J\'aime</div>\n        </div>\n        <div class="col-foot" (click)="shareViaApp(ad);">\n          <div class="foot-badge" *ngIf="ad.share_count == null">0</div>\n          <div class="foot-badge" *ngIf="ad.share_count < 100">{{ad.share_count}}</div>\n          <div class="foot-badge" *ngIf="ad.share_count >= 100">99+</div>\n          <div class="foot-block-icon-ctn">\n            <img class="foot-block-icon" src="../../assets/icon/share-blue.svg" />\n          </div>\n          <div class="foot-label">Partager</div>\n        </div>\n      </div>\n    </div>\n\n    <ion-infinite-scroll (ionInfinite)="doInfinite($event)">\n      <ion-infinite-scroll-content></ion-infinite-scroll-content>\n    </ion-infinite-scroll>\n  </div>\n\n  <ion-row ion-fixed class="tab-faq">\n    <ion-col (click)="openMenu()">\n      <img ion-fixed class="btn-menu" src="../../assets/icon/menu-button.svg">\n    </ion-col>\n\n    <ion-col (click)="goToHome()">\n      <img class="fltr-icon-2" src="../../assets/icon/home-7.svg">\n    </ion-col>\n\n    <ion-col (click)="clickProximite();">\n      <img class="fltr-icon" src="../../assets/icon/sort-down.svg" />\n      <span><br>Proximité</span>\n    </ion-col>\n    <ion-col (click)="showFilter();">\n      <img class="fltr-icon" src="../../assets/icon/filter.svg" />\n      <span><br>Filtrer</span>\n    </ion-col>\n  </ion-row>\n\n</ion-content>'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/formations/formations.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["f" /* Events */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_8__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_13__ionic_native_toast__["a" /* Toast */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_17__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_18__ionic_native_social_sharing__["a" /* SocialSharing */]])
    ], FormationsPage);
    return FormationsPage;
}());

//# sourceMappingURL=formations.js.map

/***/ }),

/***/ 24:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ASavoirPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__menu_menu__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__annonces_annonces__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__formations_formations__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__home_home__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__uprofil_uprofil__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__a_savoir_details_a_savoir_details__ = __webpack_require__(86);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__notifications_notifications__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__mesannonces_mesannonces__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__dentart_dentart__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__ionic_storage__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__ionic_native_toast__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__ionic_native_social_sharing__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__sharemodal_sharemodal__ = __webpack_require__(38);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

















/**
 * Generated class for the ASavoirPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ASavoirPage = /** @class */ (function () {
    function ASavoirPage(navCtrl, navParams, modalCtrl, events, http, globals, platform, storage, toast, socialSharing) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.modalCtrl = modalCtrl;
        this.events = events;
        this.http = http;
        this.globals = globals;
        this.platform = platform;
        this.storage = storage;
        this.toast = toast;
        this.socialSharing = socialSharing;
        this.load = 1;
        this.user = {};
        this.list_as = [];
        this.displayedPopoverID = "";
        this.offset = 0;
        this.user = navParams.get('user');
        this.getListActus(null);
        platform.registerBackButtonAction(function () {
            navCtrl.pop();
        });
    }
    ASavoirPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ASavoirPage');
    };
    ASavoirPage.prototype.ionViewWillEnter = function () {
        var _this = this;
        this.platform.registerBackButtonAction(function () {
            _this.navCtrl.pop();
        });
    };
    ASavoirPage.prototype.goBack = function () {
        this.navCtrl.pop();
    };
    ASavoirPage.prototype.openMenu = function () {
        var _this = this;
        var menu = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_2__menu_menu__["a" /* MenuPage */], {
            user: this.user
        }, {
            enterAnimation: 'modal-translate-up-enter',
            leaveAnimation: 'modal-translate-up-leave'
        });
        menu.onDidDismiss(function (page) {
            _this.platform.registerBackButtonAction(function () {
                _this.navCtrl.pop();
            });
            if (page.title == "Partages") {
                var adPage = __WEBPACK_IMPORTED_MODULE_5__home_home__["a" /* HomePage */];
                _this.navCtrl.setRoot(adPage, {
                    user: _this.user
                }, {
                    animate: true
                });
            }
            else if (page.title == "profil") {
                var adPage = __WEBPACK_IMPORTED_MODULE_6__uprofil_uprofil__["a" /* UprofilPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "UprofilPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "UprofilPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(adPage, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "Annonces") {
                var adPage = __WEBPACK_IMPORTED_MODULE_3__annonces_annonces__["a" /* AnnoncesPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "AnnoncesPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "AnnoncesPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(adPage, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "Formations") {
                var actuPage = __WEBPACK_IMPORTED_MODULE_4__formations_formations__["a" /* FormationsPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "FormationsPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "FormationsPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(actuPage, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "News") {
                //
            }
            else if (page.title == "Mes alertes") {
                var notif = __WEBPACK_IMPORTED_MODULE_10__notifications_notifications__["a" /* NotificationsPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "NotificationsPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "NotificationsPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(notif, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == 'mesannonces') {
                var notif = __WEBPACK_IMPORTED_MODULE_11__mesannonces_mesannonces__["a" /* MesannoncesPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "MesannoncesPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "MesannoncesPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(notif, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "deconnexion") {
                _this.events.publish('user:logedOut', _this.user);
                _this.load = 1;
                _this.storage.set('partages', null);
                _this.storage.set('user', null)
                    .then(function (data) {
                    console.log(JSON.stringify(data));
                    _this.storage.clear();
                    setTimeout(function () {
                        _this.load = 0;
                        _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_12__dentart_dentart__["a" /* DentartPage */], {}, {
                            animate: true
                        });
                    }, 500);
                }, function (error) {
                    console.log(JSON.stringify(error));
                });
            }
            else if (page.title == "") {
                //
            }
        });
        menu.present();
    };
    ASavoirPage.prototype.goHome = function () {
        this.navCtrl.popToRoot();
    };
    ASavoirPage.prototype.refresh = function (refresherEvent) {
        this.offset = 0;
        refresherEvent.complete();
        this.list_as = [];
        this.load = 1;
        this.getListActus(null);
    };
    ASavoirPage.prototype.getListActus = function (infiniteScroll) {
        //listASavoir
        var _this = this;
        this.http.get(this.globals.variables.urls.listASavoir + "?" +
            "limit=10&offset=" + this.offset, {}, {})
            .then(function (data) {
            // this.list_as = [];
            var res = JSON.parse(data.data);
            for (var c = 0; c < res.length; c++) {
                var images_count = 0;
                if (res[c].image_1 != null && res[c].image_1 != '')
                    images_count += 1;
                if (res[c].image_2 != null && res[c].image_2 != '')
                    images_count += 1;
                if (res[c].image_3 != null && res[c].image_3 != '')
                    images_count += 1;
                if (res[c].image_4 != null && res[c].image_4 != '')
                    images_count += 1;
                res[c].images_count = images_count;
                var char70 = "";
                if (res[c].description.length > 200) {
                    char70 = "" + res[c].description.substr(0, 199) + "...";
                }
                else {
                    char70 = res[c].description;
                }
                res[c].char70 = char70;
                _this.list_as.push(res[c]);
            }
            console.log(JSON.stringify(data.data));
            _this.load = 0;
            if (infiniteScroll != null) {
                infiniteScroll.complete();
            }
        }, function (error) {
            console.log(JSON.stringify(error));
            _this.load = 0;
        });
    };
    ASavoirPage.prototype.showDetails = function (asv) {
        this.addAsViewed(asv);
        var asdet = __WEBPACK_IMPORTED_MODULE_9__a_savoir_details_a_savoir_details__["a" /* ASavoirDetailsPage */];
        this.navCtrl.push(asdet, {
            user: this.user,
            asv: asv
        });
    };
    ASavoirPage.prototype.addAsViewed = function (ad) {
        this.http.post(this.globals.variables.urls.addViewAd, {
            "id": ad.id
        }, {})
            .then(function (res) {
            console.log("Adding view result");
            console.log(JSON.stringify(res.data));
        }, function (error) {
            console.log("Error when adding view to ad");
            console.log(JSON.stringify(error));
        });
    };
    ASavoirPage.prototype.goToHome = function () {
        this.navCtrl.popToRoot();
    };
    ASavoirPage.prototype.shareViaApp = function (faq) {
        var _this = this;
        console.log("URL :::: " + faq.url);
        var file = [];
        var bodyText = "";
        var link = "";
        bodyText += "";
        var perma_link = faq.url;
        // bodyText += faq.author_infos.pseudo + " a partagé : \n"
        bodyText += faq.no_html_description;
        if (faq.image_1 != null && faq.image_1 != '') {
            file.push(faq.image_1);
        }
        if (faq.image_2 != null && faq.image_2 != '') {
            file.push(faq.image_2);
        }
        if (faq.image_3 != null && faq.image_3 != '') {
            file.push(faq.image_3);
        }
        if (faq.image_4 != null && faq.image_4 != '') {
            file.push(faq.image_4);
        }
        var shareModal = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_16__sharemodal_sharemodal__["a" /* SharemodalPage */], {
            file: file,
            bodyText: bodyText,
            link: link,
            perma_link: perma_link
        });
        shareModal.onDidDismiss(function (data) {
            _this.platform.registerBackButtonAction(function () {
                _this.navCtrl.pop();
            });
            console.log("Result from sharing : ");
            console.log(JSON.stringify(data));
            if (data.shared) {
                for (var u = 0; u < _this.list_as.length; u++) {
                    if (_this.list_as[u].id == faq.id) {
                        _this.list_as[u].share_count = parseInt(_this.list_as[u].share_count) + 1;
                        _this.list_as[u].user_shared = 1;
                        // this.toast.show("Vous avez partagé cette annonce", "2000", "bottom").subscribe(
                        //   toast => {
                        //     console.log(toast);
                        //   }
                        // );
                    }
                }
                _this.http.post(_this.globals.variables.urls.addToShare, {
                    "user_id": _this.user.id_User != null ? _this.user.id_User : _this.user.id,
                    "post_id": faq.id
                }, {})
                    .then(function (data) {
                    var res = JSON.parse(data.data);
                    console.log(JSON.stringify(res));
                    if (res.status == "ok") {
                    }
                    else {
                        console.log(JSON.stringify(res));
                    }
                }, function (error) {
                    console.log(JSON.stringify(error));
                });
            }
        });
        shareModal.present();
    };
    ASavoirPage.prototype.share = function (ad) {
        var _this = this;
        var file = [];
        if (ad.ad_image_1 != null && ad.ad_image_1 != '') {
            file.push(ad.ad_image_1);
        }
        if (ad.ad_image_2 != null && ad.ad_image_2 != '') {
            file.push(ad.ad_image_2);
        }
        if (ad.ad_image_3 != null && ad.ad_image_3 != '') {
            file.push(ad.ad_image_3);
        }
        if (ad.ad_image_4 != null && ad.ad_image_4 != '') {
            file.push(ad.ad_image_4);
        }
        this.socialSharing.share(ad.description, ad.title, file, '')
            .then(function (data) {
            console.log("Share success");
            console.log(JSON.stringify(data));
            _this.http.post(_this.globals.variables.urls.addToShare, {
                "user_id": _this.user.id_User != null ? _this.user.id_User : _this.user.id,
                "post_id": ad.id
            }, {})
                .then(function (data) {
                var res = JSON.parse(data.data);
                console.log(JSON.stringify(res));
                if (res.status == "ok") {
                    for (var u = 0; u < _this.list_as.length; u++) {
                        if (_this.list_as[u].id == ad.id) {
                            _this.list_as[u].share_count = parseInt(_this.list_as[u].share_count) + 1;
                            _this.list_as[u].user_shared = 1;
                            _this.toast.show("Vous avez partagé ce news", "2000", "bottom").subscribe(function (toast) {
                                console.log(toast);
                            });
                        }
                    }
                }
                else {
                    console.log(JSON.stringify(res));
                }
            }, function (error) {
                console.log(JSON.stringify(error));
            });
        }, function (error) {
            console.log("Share error");
            console.log(JSON.stringify(error));
        });
    };
    ASavoirPage.prototype.report = function (ad, iconItemID) {
        var _this = this;
        var selectedItem = document.getElementById(iconItemID);
        selectedItem.classList.add("fadeDown");
        selectedItem.style.opacity = "0.2";
        this.http.post(this.globals.variables.urls.repportFaQ, {
            "user_id": this.user.id_User != null ? this.user.id_User : this.user.id,
            "post_id": ad.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log(JSON.stringify(res));
            if (res.status == "ok") {
                if (ad.user_report == 1) {
                    ad.user_report = 0;
                    _this.toast.show("Votre signalisation a été annulée", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
                else {
                    ad.user_report = 1;
                    _this.toast.show("Vous avez signalé cet actualité", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
            }
            else {
                console.log(JSON.stringify(res));
                _this.toast.show("Vous avez déjà signalé cet actualité", "2000", "bottom").subscribe(function (toast) {
                    console.log(toast);
                });
            }
            selectedItem.classList.remove("fadeDown");
            selectedItem.style.opacity = "1";
            document.getElementById(_this.displayedPopoverID).classList.remove("popoverdisplay");
            document.getElementById(_this.displayedPopoverID).classList.add("popoverhide");
            document.getElementById(_this.displayedPopoverID).style.display = "none";
            _this.displayedPopoverID = "";
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    ASavoirPage.prototype.addToFavorite = function (ad) {
        var _this = this;
        this.http.post(this.globals.variables.urls.addFavorite, {
            "user_id": this.user.id_User != null ? this.user.id_User : this.user.id,
            "post_id": ad.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log(JSON.stringify(res));
            if (res.status == "ok") {
                // for (let u = 0; u < this.list_as.length; u++) {
                if (ad.user_favorite == 1) {
                    ad.favorite_count = parseInt(ad.favorite_count) - 1;
                    ad.user_favorite = 0;
                    _this.toast.show("Vous avez annulé votre \"J'aime\"", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                    return;
                }
                else if (ad.user_favorite == 0) {
                    ad.favorite_count = parseInt(ad.favorite_count) + 1;
                    ad.user_favorite = 1;
                    _this.toast.show("Vous avez aimé cet actualité", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                    return;
                }
                // }
            }
            else {
                console.log(JSON.stringify(res));
            }
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    ASavoirPage.prototype.displayPopover = function (popoverid) {
        var classL = document.getElementById(popoverid).classList.toString();
        console.log(classL);
        console.log(classL.indexOf("popoverdisplay"));
        if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") === -1 && this.displayedPopoverID == "") {
            console.log("=====///===Displayed ", popoverid);
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") === -1 && this.displayedPopoverID != "") {
            console.log("=====///===Displayed ", popoverid);
            document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay");
            document.getElementById(this.displayedPopoverID).classList.add("popoverhide");
            document.getElementById(this.displayedPopoverID).style.display = "none";
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") !== -1 && classL.indexOf("popoverhide") === -1 && this.displayedPopoverID == popoverid) {
            console.log("=====///===Hiden ", popoverid);
            document.getElementById(popoverid).classList.remove("popoverdisplay");
            document.getElementById(popoverid).classList.add("popoverhide");
            document.getElementById(popoverid).style.display = "none";
            this.displayedPopoverID = "";
            console.log("=====///===Hiden ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") !== -1 && this.displayedPopoverID != popoverid && this.displayedPopoverID != "") {
            console.log("=====///===Displayed Other : => ", popoverid);
            document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay");
            document.getElementById(this.displayedPopoverID).classList.add("popoverhide");
            document.getElementById(this.displayedPopoverID).style.display = "none";
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.remove("popoverhide");
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed Other : => ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") !== -1 && this.displayedPopoverID == "") {
            console.log("=====///===Displayed Once : => ", popoverid);
            document.getElementById(popoverid).classList.remove("popoverhide");
            document.getElementById(popoverid).classList.remove("popoverdisplay");
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed Once : => ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") !== -1 && this.displayedPopoverID == popoverid) {
            // this.displayHide()
        }
    };
    ASavoirPage.prototype.addToFav = function (ad, iconItemID) {
        var _this = this;
        var selectedItem = document.getElementById(iconItemID);
        selectedItem.classList.add("fadeDown");
        selectedItem.style.opacity = "0.2";
        this.http.post(this.globals.variables.urls.addLike, {
            user_id: this.user.id_User != null ? this.user.id_User : this.user.id,
            post_id: ad.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log("Resultat du serveur");
            console.log(JSON.stringify(res));
            selectedItem.classList.remove("fadeDown");
            selectedItem.style.opacity = "1";
            document.getElementById(_this.displayedPopoverID).classList.remove("popoverdisplay");
            document.getElementById(_this.displayedPopoverID).classList.add("popoverhide");
            document.getElementById(_this.displayedPopoverID).style.display = "none";
            _this.displayedPopoverID = "";
            if (res.status == "ok") {
                if (ad.user_like == 0) {
                    ad.user_like = 1;
                    _this.toast.show("Ajouté dans vos favoris", "2000", "bottom")
                        .subscribe(function (t) {
                        console.log(JSON.stringify(t));
                    });
                }
                else if (ad.user_like == 1) {
                    ad.user_like = 0;
                    _this.toast.show("Supprimé de vos favoris", "2000", "bottom")
                        .subscribe(function (t) {
                        console.log(JSON.stringify(t));
                    });
                }
            }
            else {
                _this.toast.show("Erreur lors d'ajout dans vos favoris", "2000", "bottom")
                    .subscribe(function (t) {
                    console.log(JSON.stringify(t));
                });
            }
        }, function (error) {
            console.log("Erreur d'acces au serveur");
        });
    };
    ASavoirPage.prototype.doInfinite = function (infiniteScroll) {
        this.offset += 1;
        this.getListActus(infiniteScroll);
    };
    ASavoirPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-a-savoir',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/a-savoir/a-savoir.html"*/'<ion-content class="pr">\n\n\n\n  <ion-row ion-fixed class="load-ctn" id="load" *ngIf="load == 1">\n    <ion-spinner class="loading-custom" name="crescent" color="vert_logo"></ion-spinner>\n  </ion-row>\n\n  <ion-row ion-fixed class="header">\n    <ion-col></ion-col>\n    <ion-col (click)="goToHome()">\n      <ion-label class="da">\n        <img class="logo" src="assets/imgs/da_image/logo-dentart.png">\n        <span class="bold">Dent</span><span class="fine">Art</span>\n      </ion-label>\n    </ion-col>\n    <ion-col></ion-col>\n\n  </ion-row>\n\n  <div class="container">\n\n    <ion-refresher (ionRefresh)="refresh($event)">\n      <ion-refresher-content pullingIcon="arrow-dropdown" pullingText="."\n        refreshingSpinner="none" refreshingText="" pullMin="120" pullMax="200" class="refresher">\n      </ion-refresher-content>\n    </ion-refresher>\n\n    <div style="color: #117bcf; background-color: #e0e0e000; width: 100%; margin: auto; padding: 20px;\n    display: flex; align-items: center; justify-content: center" *ngIf="list_as.length <= 0 && load == 0">\n      <!-- Aucun news trouvé ! -->\n    </div>\n\n    <div class="theBlock" *ngFor="let ad of list_as">\n      <div class="row1">\n        <div class="row1-col1 row-text" (click)="showDetails(ad);">\n          <div class="faq-ttl" [innerHtml]="ad.title"></div>\n          <div class="faq-desc" [innerHtml]="ad.char70"></div>\n          <div class="more" *ngIf="ad.char70.length > 199">Voir plus ...</div>\n        </div>\n        <div class="row1-col2">\n\n          <div class="drop-down-icon" (click)="displayPopover(\'popovernews1\'+ad.id)">\n            <div class="left-bar"></div>\n            <div class="right-bar"></div>\n          </div>\n          <div class="popover-ctn" id="popovernews1{{ad.id}}">\n            <div class="popover-tsingy">\n              <div class="half-transparent"></div>\n            </div>\n            <div class="list-ctn">\n              <div class="option-item" id="favicon{{ad.id}}" (click)="addToFav(ad, \'favicon\'+ad.id)">\n                <div class="op-it-icon">\n                  <img class="it-icon" src="../../assets/icon/heart-green-blue.svg" />\n                </div>\n                <div class="item-text">Favoris</div>\n              </div>\n              <div class="sep-popover"></div>\n              <div class="option-item" id="repicon{{ad.id}}" (click)="report(ad, \'repicon\'+ad.id)">\n                <div class="op-it-icon">\n                  <img class="it-icon" src="../../assets/icon/warning.svg" />\n                </div>\n                <div class="item-text">Signaler</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="row-text" (click)="showDetails(ad);">\n        <!-- <div class="faq-ttl" [innerHtml]="ad.title"></div>\n        <div class="faq-desc" [innerHtml]="ad.char70"></div> -->\n      </div>\n      <div *ngIf="ad.images_count > 0" class="row2" (click)="showDetails(ad);"\n        [style.background-image]="\'url(../../assets/imgs/load/Chargement.gif)\'">\n        <div *ngIf="ad.images_count > 0" class="loading-image"\n          [style.background-image]="\'url(\'+(ad.image_1 != null ? ad.image_1 : \'../../assets/imgs/da_image/Rectangle-05.jpg\')+\')\'"></div>\n        <div class="photo-badge">\n          {{ad.images_count}}\n          <img class="nb-photo-icon" src="../../assets/icon/photo-camera-white.svg" />\n        </div>\n      </div>\n      <div class="row3">\n        <div class="col-foot" (click)="addToFavorite(ad);">\n          <div class="foot-badge" *ngIf="ad.favorite_count == null">0</div>\n          <div class="foot-badge" *ngIf="ad.favorite_count < 100">{{ad.favorite_count}}</div>\n          <div class="foot-badge" *ngIf="ad.favorite_count >= 100">99+</div>\n          <div class="foot-block-icon-ctn">\n            <img class="foot-block-icon"\n              src="{{ad.user_favorite != 0 && ad.user_favorite != \'0\' ? \'../../assets/icon/like-fin-green.svg\' : \'../../assets/icon/like-fin-blue.svg\' }}" />\n          </div>\n          <div class="foot-label">J\'aime</div>\n        </div>\n        <div class="col-foot" (click)="shareViaApp(ad);">\n          <div class="foot-badge" *ngIf="ad.share_count == null">0</div>\n          <div class="foot-badge" *ngIf="ad.share_count < 100">{{ad.share_count}}</div>\n          <div class="foot-badge" *ngIf="ad.share_count >= 100">99+</div>\n          <div class="foot-block-icon-ctn">\n            <img class="foot-block-icon" src="../../assets/icon/share-blue.svg" />\n          </div>\n          <div class="foot-label">Partager</div>\n        </div>\n      </div>\n    </div>\n\n    <ion-infinite-scroll (ionInfinite)="doInfinite($event)">\n      <ion-infinite-scroll-content></ion-infinite-scroll-content>\n    </ion-infinite-scroll>\n\n  </div>\n\n  <ion-row ion-fixed class="tab-faq">\n    <ion-col (click)="openMenu()">\n      <img ion-fixed class="btn-menu" src="../../assets/icon/menu-button.svg">\n    </ion-col>\n    <ion-col></ion-col>\n    <ion-col (click)="goToHome()">\n      <img class="custom-icon-3" src="../../assets/icon/home-7.svg">\n    </ion-col>\n    <ion-col></ion-col>\n    <ion-col></ion-col>\n  </ion-row>\n\n</ion-content>'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/a-savoir/a-savoir.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["f" /* Events */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_8__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_13__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_14__ionic_native_toast__["a" /* Toast */],
            __WEBPACK_IMPORTED_MODULE_15__ionic_native_social_sharing__["a" /* SocialSharing */]])
    ], ASavoirPage);
    return ASavoirPage;
}());

//# sourceMappingURL=a-savoir.js.map

/***/ }),

/***/ 25:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UprofilPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__a_savoir_a_savoir__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__annonces_annonces__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__menu_menu__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__home_home__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__formations_formations__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__faqadd1_faqadd1__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ionic_native_toast__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__faqfilter_faqfilter__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__notifications_notifications__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__faqcom_faqcom__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__updateprofil_updateprofil__ = __webpack_require__(158);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__ionic_native_social_sharing__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__mesannonces_mesannonces__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__dentart_dentart__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__ionic_storage__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__faqadd3_faqadd3__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__sharemodal_sharemodal__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__annonce_add2_annonce_add2__ = __webpack_require__(55);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__formation_details_formation_details__ = __webpack_require__(91);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__annonce_details_annonce_details__ = __webpack_require__(46);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__a_savoir_details_a_savoir_details__ = __webpack_require__(86);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

























/**
 * Generated class for the UprofilPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var UprofilPage = /** @class */ (function () {
    function UprofilPage(navCtrl, navParams, modalCtrl, events, toast, globals, http, socialSharing, platform, storage) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.modalCtrl = modalCtrl;
        this.events = events;
        this.toast = toast;
        this.globals = globals;
        this.http = http;
        this.socialSharing = socialSharing;
        this.platform = platform;
        this.storage = storage;
        this.load = 1;
        this.paging = 0;
        this.favPaging = 0;
        this.displayedPopoverID = "";
        this.secondClassOfBtnFaQ = "secondClassOfBtnFaQ";
        this.secondClassOfBtnFav = "";
        this.activeList = "faq";
        this.user = {};
        this.listFaQTheme = [];
        this.listFaQSorted = [];
        this.listFaQ = [];
        this.selectedTheme = { id: '', slug: '', name: '' };
        this.listCat = [];
        this.listFav = [];
        this.showAvatar = false;
        this.result_list = 1;
        this.updateProfilInterval = null;
        this.user = navParams.get('user');
        this.user_id = this.user.id_User != null ? this.user.id_User : this.user.id;
        // this.getListFavorite(null);
        platform.registerBackButtonAction(function () {
            navCtrl.pop();
        });
        events.subscribe("faq:update", function (faq) {
            console.log("Faq ID event update :", faq.faq.id);
            var faq_id = faq.type == "faq" ? faq.faq.id : faq.id;
            // this.displayPopover("popover" + faq_id)
            // this.displayedPopoverID = ""
            _this.getListTheme(null);
        });
        events.subscribe("faq:delete", function (faq) {
            console.log("Faq ID event update :", faq.faq.id);
            var faq_id = faq.type == "faq" ? faq.faq.id : faq.id;
            // this.displayPopover("popover" + faq_id)
            // this.displayedPopoverID = ""
            _this.getListTheme(null);
        });
    }
    UprofilPage.prototype.ionViewDidLoad = function () {
        console.log('********************ionViewDidLoad UprofilPage');
        this.getListTheme(null);
    };
    UprofilPage.prototype.ionViewWillLeave = function () {
        clearInterval(this.updateProfilInterval);
        this.updateProfilInterval = null;
    };
    UprofilPage.prototype.ionViewWillEnter = function () {
        var _this = this;
        this.platform.registerBackButtonAction(function () {
            _this.navCtrl.pop();
        });
        this.updateProfilInterval = setInterval(function () {
            _this.updateUserInfo(_this.user_id);
        }, 5000);
    };
    UprofilPage.prototype.goBack = function () {
        this.navCtrl.pop();
    };
    UprofilPage.prototype.goHome = function () {
        // let adPage = HomePage;
        // this.navCtrl.setRoot(adPage, {
        //   user: this.user
        // },
        //   {
        //     animate: true
        //   });
        this.navCtrl.popToRoot();
    };
    UprofilPage.prototype.onContentScroll = function (events) {
        this.result_list = 1;
    };
    UprofilPage.prototype.openMenu = function () {
        var _this = this;
        var menu = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_4__menu_menu__["a" /* MenuPage */], {
            user: this.user
        }, {
            enterAnimation: 'modal-translate-up-enter',
            leaveAnimation: 'modal-translate-up-leave'
        });
        menu.onDidDismiss(function (page) {
            _this.platform.registerBackButtonAction(function () {
                _this.navCtrl.pop();
            });
            if (page.title == "Partages") {
                var adPage = __WEBPACK_IMPORTED_MODULE_5__home_home__["a" /* HomePage */];
                _this.navCtrl.setRoot(adPage, {
                    user: _this.user
                }, {
                    animate: true
                });
            }
            else if (page.title == "profil") {
                //
            }
            else if (page.title == "Annonces") {
                var adPage = __WEBPACK_IMPORTED_MODULE_3__annonces_annonces__["a" /* AnnoncesPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "AnnoncesPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "AnnoncesPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(adPage, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "Formations") {
                var actuPage = __WEBPACK_IMPORTED_MODULE_6__formations_formations__["a" /* FormationsPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "FormationsPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "FormationsPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(actuPage, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "News") {
                var actuPage = __WEBPACK_IMPORTED_MODULE_2__a_savoir_a_savoir__["a" /* ASavoirPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "ASavoirPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "ASavoirPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(actuPage, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "Mes alertes") {
                var notif = __WEBPACK_IMPORTED_MODULE_12__notifications_notifications__["a" /* NotificationsPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "NotificationsPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "NotificationsPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(notif, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == 'mesannonces') {
                var notif = __WEBPACK_IMPORTED_MODULE_16__mesannonces_mesannonces__["a" /* MesannoncesPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "MesannoncesPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "MesannoncesPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(notif, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "deconnexion") {
                _this.events.publish('user:logedOut', _this.user);
                _this.load = 1;
                _this.storage.set('user', null)
                    .then(function (data) {
                    console.log(JSON.stringify(data));
                    setTimeout(function () {
                        _this.load = 0;
                        _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_17__dentart_dentart__["a" /* DentartPage */], {}, {
                            animate: true
                        });
                    }, 500);
                }, function (error) {
                    console.log(JSON.stringify(error));
                });
            }
            else if (page.title == "") {
                //
            }
        });
        menu.present();
    };
    UprofilPage.prototype.showAvatarImg = function () {
        this.showAvatar = true;
    };
    UprofilPage.prototype.cloaseAvatarImg = function () {
        this.showAvatar = false;
    };
    UprofilPage.prototype.changeAvatar = function () {
        var _this = this;
        var newphoto = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_7__faqadd1_faqadd1__["a" /* Faqadd1Page */], {
            source: "profil",
            user: this.user
        });
        newphoto.onDidDismiss(function (data) {
            if (data != null && data.url != null) {
                _this.avatar = data;
                _this.user.avatar = data.url;
            }
            //console.log(JSON.stringify(data));
        });
        newphoto.present();
    };
    UprofilPage.prototype.comment = function (faq) {
        var fcom = __WEBPACK_IMPORTED_MODULE_13__faqcom_faqcom__["a" /* FaqcomPage */];
        this.navCtrl.push(fcom, {
            faq: faq,
            user: this.user,
            theme: this.listFaQTheme,
        });
    };
    UprofilPage.prototype.faqDetails = function (faq) {
        var fdet = __WEBPACK_IMPORTED_MODULE_13__faqcom_faqcom__["a" /* FaqcomPage */];
        this.navCtrl.push(fdet, {
            faq: faq,
            user: this.user
        });
    };
    UprofilPage.prototype.showFilter = function () {
        var _this = this;
        var filter = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_11__faqfilter_faqfilter__["a" /* FaqfilterPage */], {
            user: this.user,
            theme: this.listFaQTheme,
            title: "Filtres"
        });
        filter.onDidDismiss(function (data) {
            _this.selectedTheme = data;
            if (data.id == 'all') {
                _this.listFaQSorted = _this.listFaQ;
            }
            else {
                if (_this.selectedTheme.length > 0) {
                    _this.sortFaQByFilter();
                }
                else
                    _this.listFaQSorted = _this.listFaQ;
            }
            console.log("Selected theme :");
            //console.log(JSON.stringify(this.selectedTheme));
        });
        filter.present();
    };
    UprofilPage.prototype.sortFaQByFilter = function () {
        var _this = this;
        if (this.selectedTheme.length > 0) {
            this.listFaQSorted = this.listFaQ.filter(function (faq) {
                for (var z = 0; z < _this.selectedTheme.length; z++) {
                    if (faq.theme.id == _this.selectedTheme[z].id) {
                        return faq;
                    }
                }
            });
        }
        else {
            this.listFaQSorted = this.listFaQ;
        }
    };
    UprofilPage.prototype.newPub = function () {
        var faq1 = __WEBPACK_IMPORTED_MODULE_7__faqadd1_faqadd1__["a" /* Faqadd1Page */];
        this.navCtrl.push(faq1, {
            user: this.user,
            theme: this.listFaQTheme
        });
    };
    UprofilPage.prototype.getListFaQs = function (infiniteScroll) {
        var _this = this;
        console.log("Getting list FaQs");
        this.http.get(this.globals.variables.urls.listFaQByUser + '?offset=' + this.paging, {
            'user_id': "" + (this.user.id_User != null ? this.user.id_User : this.user.id)
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            if (res.length <= 0) {
                _this.load = 0;
                console.log('Async operation has ended');
                if (infiniteScroll != null)
                    infiniteScroll.complete();
                setTimeout(function () {
                    _this.result_list = 0;
                }, 500);
                // setTimeout(() => {
                //   this.result_list = 1;
                // }, 1000)
            }
            else {
                for (var i = 0; i < res.length; i++) {
                    if (res[i].comments) {
                        var coms = [];
                        for (var elem in res[i].comments) {
                            coms.push(res[i].comments[elem]);
                        }
                        var images_count = 0;
                        var char70 = "";
                        if (res[i].description.length > 70) {
                            char70 = "" + res[i].description.substr(0, 69) + "...";
                        }
                        else {
                            char70 = res[i].description;
                        }
                        if (res[i].faq_image_1 != '' && res[i].faq_image_1 != null)
                            images_count += 1;
                        if (res[i].faq_image_2 != '' && res[i].faq_image_2 != null)
                            images_count += 1;
                        if (res[i].faq_image_3 != '' && res[i].faq_image_3 != null)
                            images_count += 1;
                        if (res[i].faq_image_4 != '' && res[i].faq_image_4 != null)
                            images_count += 1;
                        res[i].images_count = images_count;
                        res[i].comments_count = coms.length;
                        res[i].coms = coms;
                        res[i].char70 = char70;
                        res[i].dateFR = res[i].date.substr(8, 2) + '/' + res[i].date.substr(5, 2) + '/' +
                            res[i].date.substr(0, 4) + ' ' + res[i].date.substr(11, 5);
                    }
                    for (var j = 0; j < _this.listFaQTheme.length; j++) {
                        if (_this.listFaQTheme[j].id == res[i].theme) {
                            var newFaQ = {
                                faq: res[i],
                                theme: _this.listFaQTheme[j],
                                type: 'faq'
                            };
                            _this.getFaQAuthor(res[i].author_id, i, res.length, newFaQ, infiniteScroll, "faq");
                        }
                    }
                }
            }
        }, function (error) {
            _this.load = 0;
            console.log(JSON.stringify(error));
        });
    };
    UprofilPage.prototype.getListCat = function (refresherEvent) {
        var _this = this;
        this.http.post(this.globals.variables.urls.listAnnonceCat, {}, {})
            .then(function (data) {
            _this.listCat = JSON.parse(data.data);
            // this.load = 0;
            console.log(JSON.stringify(_this.listCat));
        }, function (error) {
            // this.load = 0;
            console.log(JSON.stringify(error));
        });
    };
    UprofilPage.prototype.getListTheme = function (refresherEvent) {
        var _this = this;
        this.load = 1;
        this.listFaQTheme = [];
        this.listFaQ = [];
        this.listFav = [];
        this.listFaQSorted = [];
        this.paging = 0;
        this.favPaging = 0;
        // if (this.asyncInterval != null)
        //   clearInterval(this.asyncInterval)
        if (refresherEvent != null) {
            refresherEvent.complete();
        }
        console.log("Getting list theme");
        //document.getElementById('load').style.display = 'inline';
        this.http.post(this.globals.variables.urls.listFaQTheme, {}, {})
            .then(function (data) {
            _this.listFaQTheme = JSON.parse(data.data);
            //console.log(this.listFaQTheme);
            //document.getElementById('load').style.display = 'none';
            //this.showRPC();
            _this.getListFaQs(null);
            _this.getListFavorite(null);
        }, function (error) {
            _this.load = 0;
            console.log(JSON.stringify(error));
            //document.getElementById('load').style.display = 'none';
            //this.showRPC();
        });
    };
    UprofilPage.prototype.getFaQAuthor = function (author_id, index, listLength, newFaQ, infiniteScroll, topost) {
        var _this = this;
        console.log("Getting FaQ Author");
        //getUserInfo
        this.http.post(this.globals.variables.urls.getUserInfo + "?user_id=" + author_id, {
            "user_id": "" + author_id
        }, {})
            .then(function (data) {
            newFaQ.author = JSON.parse(data.data).info_utilisateur;
            if (topost == "faq") {
                _this.listFaQ.push(newFaQ);
            }
            else if (topost == "fav") {
                _this.listFav.push(newFaQ);
            }
            if (index == listLength - 1) {
                _this.load = 0;
                if (_this.activeList == "faq") {
                    _this.listFaQSorted = _this.listFaQ;
                }
                else if (_this.activeList == "fav") {
                    _this.listFaQSorted = _this.listFav;
                }
                if (infiniteScroll != null) {
                    console.log('Async operation has ended');
                    infiniteScroll.complete();
                }
            }
        }, function (error) {
            _this.load = 0;
            console.log(JSON.stringify(error));
        });
    };
    UprofilPage.prototype.addToFavorite = function (faq) {
        var _this = this;
        this.http.post(this.globals.variables.urls.addFavorite, {
            "user_id": this.user.id_User != null ? this.user.id_User : this.user.id,
            "post_id": faq.faq.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log(JSON.stringify(res));
            if (res.status == "ok") {
                // for (let u = 0; u < this.listFaQSorted.length; u++) {
                // if (faq.type == "faq") {
                if (faq.faq.user_favorite == 1) {
                    faq.faq.favorite_count = parseInt(faq.faq.favorite_count) - 1;
                    faq.faq.user_favorite = 0;
                    _this.toast.show("Vous avez annulé votre \"J'aime\"", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                    return;
                }
                else if (faq.faq.user_favorite == 0) {
                    faq.faq.favorite_count = parseInt(faq.faq.favorite_count) + 1;
                    faq.faq.user_favorite = 1;
                    _this.toast.show("Vous avez aimé ce partage", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                    return;
                }
                // }
                // }
                //faq.faq.comments_count = parseInt(faq.faq.comments_count) + 1;
            }
            else {
                console.log(JSON.stringify(res));
            }
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    UprofilPage.prototype.addToShare = function (faq) {
        var _this = this;
        //addToShare
        this.http.post(this.globals.variables.urls.addToShare, {
            "user_id": this.user.id_User != null ? this.user.id_User : this.user.id,
            "post_id": faq.faq.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log(JSON.stringify(res));
            if (res.status == "ok") {
                for (var u = 0; u < _this.listFaQ.length; u++) {
                    if (_this.listFaQ[u].faq.id == faq.faq.id) {
                        _this.listFaQ[u].faq.share_count = parseInt(_this.listFaQ[u].faq.share_count) + 1;
                        _this.toast.show("Vous avez partagé ce partage", "2000", "bottom").subscribe(function (toast) {
                            console.log(toast);
                        });
                    }
                }
                //faq.faq.comments_count = parseInt(faq.faq.comments_count) + 1;
            }
            else {
                console.log(JSON.stringify(res));
                _this.toast.show("Vous avez déjà partagé ce partage", "2000", "bottom").subscribe(function (toast) {
                    console.log(toast);
                });
            }
            //console.log(JSON.stringify(data.data));
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    UprofilPage.prototype.shareViaApp = function (faq) {
        var _this = this;
        console.log("URL :::: " + faq.faq.url);
        var file = [];
        var bodyText = "";
        var link = "";
        bodyText += "";
        var perma_link = faq.faq.url;
        bodyText += faq.author.pseudo + " a partagé : \n";
        bodyText += faq.faq.no_html_description;
        if (faq.faq.faq_image_1 != null && faq.faq.faq_image_1 != '') {
            file.push(faq.faq.faq_image_1);
        }
        if (faq.faq.faq_image_2 != null && faq.faq.faq_image_2 != '') {
            file.push(faq.faq.faq_image_2);
        }
        if (faq.faq.faq_image_3 != null && faq.faq.faq_image_3 != '') {
            file.push(faq.faq.faq_image_3);
        }
        if (faq.faq.faq_image_4 != null && faq.faq.faq_image_4 != '') {
            file.push(faq.faq.faq_image_4);
        }
        var shareModal = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_20__sharemodal_sharemodal__["a" /* SharemodalPage */], {
            file: file,
            bodyText: bodyText,
            link: link,
            perma_link: perma_link
        });
        shareModal.onDidDismiss(function (data) {
            _this.platform.registerBackButtonAction(function () {
                _this.navCtrl.pop();
            });
            console.log("Result from sharing : ");
            console.log(JSON.stringify(data));
            if (data.shared) {
                // else if (faq.type == "faq") {
                for (var u = 0; u < _this.listFaQSorted.length; u++) {
                    if (_this.listFaQSorted[u].type == 'faq' && _this.listFaQSorted[u].faq.id == faq.faq.id) {
                        _this.listFaQSorted[u].faq.share_count = parseInt(_this.listFaQSorted[u].faq.share_count) + 1;
                        _this.listFaQSorted[u].faq.user_shared = 1;
                        // this.toast.show("Vous avez partagé ce partage", "2000", "bottom").subscribe(
                        //   toast => {
                        //     console.log(toast);
                        //   }
                        // );
                    }
                }
                _this.http.post(_this.globals.variables.urls.addToShare, {
                    "user_id": (_this.user.id_User != null ? _this.user.id_User : _this.user.id),
                    "post_id": faq.faq.id
                }, {})
                    .then(function (data) {
                    var res = JSON.parse(data.data);
                    console.log(JSON.stringify(res));
                    if (res.status == "ok") {
                    }
                    else {
                        console.log(JSON.stringify(res));
                    }
                }, function (error) {
                    console.log(JSON.stringify(error));
                });
                // }
            }
        });
        shareModal.present();
    };
    UprofilPage.prototype.share = function (faq) {
        var _this = this;
        var file = [];
        if (faq.faq.faq_image_1 != null && faq.faq.faq_image_1 != '') {
            file.push(faq.faq.faq_image_1);
        }
        if (faq.faq.faq_image_2 != null && faq.faq.faq_image_2 != '') {
            file.push(faq.faq.faq_image_2);
        }
        if (faq.faq.faq_image_3 != null && faq.faq.faq_image_3 != '') {
            file.push(faq.faq.faq_image_3);
        }
        if (faq.faq.faq_image_4 != null && faq.faq.faq_image_4 != '') {
            file.push(faq.faq.faq_image_4);
        }
        this.socialSharing.share(faq.faq.description, faq.faq.title, file, '')
            .then(function (data) {
            _this.toast.show("C'est partagé", "2000", "bottom").subscribe(function (toast) {
                console.log(toast);
            });
            console.log("Share success");
            console.log(JSON.stringify(data));
            _this.http.post(_this.globals.variables.urls.addToShare, {
                "user_id": _this.user.id_User != null ? _this.user.id_User : _this.user.id,
                "post_id": faq.faq.id
            }, {})
                .then(function (data) {
                var res = JSON.parse(data.data);
                console.log(JSON.stringify(res));
                if (res.status == "ok") {
                    for (var u = 0; u < _this.listFaQ.length; u++) {
                        if (_this.listFaQ[u].faq.id == faq.faq.id) {
                            _this.listFaQ[u].faq.share_count = parseInt(_this.listFaQ[u].faq.share_count) + 1;
                            _this.toast.show("Vous avez partagé ce FaQ", "2000", "bottom").subscribe(function (toast) {
                                console.log(toast);
                            });
                        }
                    }
                    //faq.faq.comments_count = parseInt(faq.faq.comments_count) + 1;
                }
                else {
                    console.log(JSON.stringify(res));
                    /* this.toast.show("Vous avez déjà partagé ce FaQ", "2000", "center").subscribe(
                      toast => {
                        console.log(toast);
                      }
                    ); */
                }
                //console.log(JSON.stringify(data.data));
            }, function (error) {
                console.log(JSON.stringify(error));
            });
        }, function (error) {
            console.log("Share error");
            console.log(JSON.stringify(error));
        });
    };
    UprofilPage.prototype.showEdit = function () {
        var _this = this;
        var up = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_14__updateprofil_updateprofil__["a" /* UpdateprofilPage */], {
            user: this.user,
            source: "up"
        });
        up.onDidDismiss(function (data) {
            _this.platform.registerBackButtonAction(function () {
                _this.navCtrl.pop();
            });
            if (data.status == "upToDate") {
                _this.user = data.user;
                _this.user.mail = _this.user.user_email;
                _this.toast.show("Votre profil est à jour", '3000', 'bottom').subscribe(function (toast) {
                    console.log(JSON.stringify(toast));
                });
            }
            else if (data.status == 'no_update') {
                //
            }
            else {
                _this.toast.show("Erreur lors de mise à jour de votre profil", '3000', 'bottom').subscribe(function (toast) {
                    console.log(JSON.stringify(toast));
                });
            }
        });
        up.present();
    };
    UprofilPage.prototype.doInfinite = function (infiniteScroll) {
        console.log('Begin async operation');
        if (this.activeList == "faq") {
            this.paging += 1;
            this.getListFaQs(infiniteScroll);
        }
        else if (this.activeList == "fav") {
            this.favPaging += 1;
            this.getListFavorite(infiniteScroll);
        }
    };
    UprofilPage.prototype.deleteFaQ = function (faq) {
        var _this = this;
        //deleteFaQ, faq_id, user_id
        // document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay")
        // document.getElementById(this.displayedPopoverID).classList.add("popoverhide")
        // document.getElementById(this.displayedPopoverID).style.display = "none"
        this.displayPopover("popoverp" + faq.faq.id);
        this.http.post(this.globals.variables.urls.deleteFaQ, {
            "faq_id": faq.faq.id,
            "user_id": (this.user.id_User != null ? this.user.id_User : this.user.id)
        }, {})
            .then(function (data) {
            console.log("Resultat de suppression");
            console.log(JSON.stringify(data.data));
            var res = JSON.parse(data.data);
            _this.displayedPopoverID = "";
            if (res.status == 'ok') {
                _this.toast.show("Partage supprimé", "3000", "bottom")
                    .subscribe(function (toast) {
                    console.log(JSON.stringify(toast));
                });
                for (var i = 0; i < _this.listFaQSorted.length; i++) {
                    if (faq.faq.id == _this.listFaQSorted[i].faq.id) {
                        _this.listFaQSorted.splice(i, 1);
                    }
                }
                for (var i = 0; i < _this.listFaQ.length; i++) {
                    if (faq.faq.id == _this.listFaQ[i].faq.id) {
                        _this.listFaQ.splice(i, 1);
                    }
                }
            }
            else {
                _this.toast.show("Erreur de suppression de la partage", "3000", "bottom")
                    .subscribe(function (toast) {
                    console.log(JSON.stringify(toast));
                });
            }
        }, function (error) {
            console.log("Error trying to delete FaQ");
            console.log(JSON.stringify(error));
            _this.toast.show("Erreur de suppression de la partage", "3000", "bottom")
                .subscribe(function (toast) {
                console.log(JSON.stringify(toast));
            });
        });
    };
    UprofilPage.prototype.updateFaQ = function (faq) {
        var _this = this;
        // document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay")
        // document.getElementById(this.displayedPopoverID).classList.add("popoverhide")
        // document.getElementById(this.displayedPopoverID).style.display = "none"
        this.displayPopover("popoverp" + faq.faq.id);
        //
        var faqup = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_19__faqadd3_faqadd3__["a" /* Faqadd3Page */], {
            faq: faq,
            user: this.user,
            theme: this.listFaQTheme,
            source: 'update'
        });
        faqup.onDidDismiss(function (data) {
            _this.platform.registerBackButtonAction(function () {
                _this.navCtrl.pop();
            });
            console.log(JSON.stringify(data));
            if (data != null && data.id_faq != null) {
                console.log("Gettilg single faq updated");
                console.log(JSON.stringify(data.id_faq));
                // this.getSingleFaQUpdate(data.id_faq)
                _this.getListTheme(null);
            }
        });
        faqup.present();
    };
    UprofilPage.prototype.goToHome = function () {
        var adPage = __WEBPACK_IMPORTED_MODULE_5__home_home__["a" /* HomePage */];
        this.navCtrl.setRoot(adPage, {
            user: this.user
        }, {
            animate: true
        });
    };
    UprofilPage.prototype.reportNews = function (ad, iconItemID) {
        var _this = this;
        var selectedItem = document.getElementById(iconItemID);
        selectedItem.classList.add("fadeDown");
        selectedItem.style.opacity = "0.2";
        this.http.post(this.globals.variables.urls.repportFaQ, {
            "user_id": this.user.id_User != null ? this.user.id_User : this.user.id,
            "post_id": ad.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log(JSON.stringify(res));
            if (res.status == "ok") {
                if (ad.user_report == 1) {
                    ad.user_report = 0;
                    _this.toast.show("Votre signalisation a été annulée", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
                else {
                    ad.user_report = 1;
                    _this.toast.show("Vous avez signalé ce partage", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
            }
            else {
                console.log(JSON.stringify(res));
                _this.toast.show("Vous avez déjà signalé ce partage", "2000", "bottom").subscribe(function (toast) {
                    console.log(toast);
                });
            }
            selectedItem.classList.remove("fadeDown");
            selectedItem.style.opacity = "1";
            try {
                document.getElementById(_this.displayedPopoverID).classList.remove("popoverdisplay");
                document.getElementById(_this.displayedPopoverID).classList.add("popoverhide");
                document.getElementById(_this.displayedPopoverID).style.display = "none";
            }
            catch (error) {
            }
            // document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay")
            // document.getElementById(this.displayedPopoverID).classList.add("popoverhide")
            // document.getElementById(this.displayedPopoverID).style.display = "none"
            _this.displayedPopoverID = "";
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    UprofilPage.prototype.addToFavNews = function (ad, iconItemID) {
        // let selectedItem = document.getElementById(iconItemID);
        // selectedItem.classList.add("fadeDown")
        // selectedItem.style.opacity = "0.2"
        var _this = this;
        this.http.post(this.globals.variables.urls.addLike, {
            user_id: this.user.id_User != null ? this.user.id_User : this.user.id,
            post_id: ad.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log("Resultat du serveur");
            console.log(JSON.stringify(res));
            // selectedItem.classList.remove("fadeDown")
            // selectedItem.style.opacity = "1"
            console.log(_this.displayedPopoverID);
            // document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay")
            // document.getElementById(this.displayedPopoverID).classList.add("popoverhide")
            // document.getElementById(this.displayedPopoverID).style.display = "none"
            _this.displayedPopoverID = "";
            if (res.status == "ok") {
                if (ad.user_like == 0) {
                    ad.user_like = 1;
                    _this.toast.show("Ajouté dans vos favoris", "2000", "bottom")
                        .subscribe(function (t) {
                        console.log(JSON.stringify(t));
                    });
                }
                else if (ad.user_like == 1) {
                    ad.user_like = 0;
                    _this.toast.show("Supprimé de vos favoris", "2000", "bottom")
                        .subscribe(function (t) {
                        console.log(JSON.stringify(t));
                    });
                }
                _this.getListTheme(null);
            }
            else {
                _this.toast.show("Erreur lors d'ajout dans vos favoris", "2000", "bottom")
                    .subscribe(function (t) {
                    console.log(JSON.stringify(t));
                });
            }
        }, function (error) {
            console.log("Erreur d'acces au serveur");
        });
    };
    UprofilPage.prototype.addAsViewedNews = function (ad) {
        this.http.post(this.globals.variables.urls.addViewAd, {
            "id": ad.id
        }, {})
            .then(function (res) {
            console.log("Adding view result");
            console.log(JSON.stringify(res.data));
        }, function (error) {
            console.log("Error when adding view to ad");
            console.log(JSON.stringify(error));
        });
    };
    UprofilPage.prototype.showDetailsNews = function (asv) {
        this.addAsViewedNews(asv);
        var asdet = __WEBPACK_IMPORTED_MODULE_24__a_savoir_details_a_savoir_details__["a" /* ASavoirDetailsPage */];
        this.navCtrl.push(asdet, {
            user: this.user,
            asv: asv
        });
    };
    UprofilPage.prototype.addAsViewed = function (ad) {
        this.http.post(this.globals.variables.urls.addViewAd, {
            "id": ad.id
        }, {})
            .then(function (res) {
            console.log("Adding view result");
            console.log(JSON.stringify(res.data));
        }, function (error) {
            console.log("Error when adding view to ad");
            console.log(JSON.stringify(error));
        });
    };
    UprofilPage.prototype.showDetailsAd = function (ad) {
        this.addAsViewed(ad);
        var adPage = __WEBPACK_IMPORTED_MODULE_23__annonce_details_annonce_details__["a" /* AnnonceDetailsPage */];
        this.navCtrl.push(adPage, {
            user: this.user,
            ad: ad
        });
    };
    UprofilPage.prototype.addToFavAd = function (ad, iconItemID) {
        // let selectedItem = document.getElementById(iconItemID);
        // selectedItem.classList.add("fadeDown")
        // selectedItem.style.opacity = "0.2"
        var _this = this;
        this.http.post(this.globals.variables.urls.addLike, {
            user_id: this.user.id_User != null ? this.user.id_User : this.user.id,
            post_id: ad.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log("Resultat du serveur");
            console.log(JSON.stringify(res));
            // selectedItem.classList.remove("fadeDown")
            // selectedItem.style.opacity = "1"
            console.log("this.displayedPopoverID");
            console.log(_this.displayedPopoverID);
            // document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay")
            // document.getElementById(this.displayedPopoverID).classList.add("popoverhide")
            // document.getElementById(this.displayedPopoverID).style.display = "none"
            _this.displayedPopoverID = "";
            if (res.status == "ok") {
                if (ad.user_like == 0) {
                    ad.user_like = 1;
                    _this.toast.show("Ajouté dans vos favoris", "2000", "bottom")
                        .subscribe(function (t) {
                        console.log(JSON.stringify(t));
                    });
                }
                else if (ad.user_like == 1) {
                    ad.user_like = 0;
                    _this.toast.show("Supprimé de vos favoris", "2000", "bottom")
                        .subscribe(function (t) {
                        console.log(JSON.stringify(t));
                    });
                }
                _this.getListTheme(null);
            }
            else {
                _this.toast.show("Erreur lors d'ajout dans vos favoris", "2000", "bottom")
                    .subscribe(function (t) {
                    console.log(JSON.stringify(t));
                });
            }
        }, function (error) {
            console.log("Erreur d'acces au serveur");
        });
    };
    UprofilPage.prototype.reportAd = function (ad, iconItemID) {
        var _this = this;
        var selectedItem = document.getElementById(iconItemID);
        selectedItem.classList.add("fadeDown");
        selectedItem.style.opacity = "0.2";
        this.http.post(this.globals.variables.urls.repportFaQ, {
            "user_id": this.user.id_User != null ? this.user.id_User : this.user.id,
            "post_id": ad.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log(JSON.stringify(res));
            if (res.status == "ok") {
                if (ad.user_report == 1) {
                    ad.user_report = 0;
                    _this.toast.show("Votre signalisation a été annulée", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
                else {
                    ad.user_report = 1;
                    _this.toast.show("Vous avez signalé ce partage", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
            }
            else {
                console.log(JSON.stringify(res));
                _this.toast.show("Vous avez déjà signalé ce partage", "2000", "bottom").subscribe(function (toast) {
                    console.log(toast);
                });
            }
            selectedItem.classList.remove("fadeDown");
            selectedItem.style.opacity = "1";
            try {
                document.getElementById(_this.displayedPopoverID).classList.remove("popoverdisplay");
                document.getElementById(_this.displayedPopoverID).classList.add("popoverhide");
                document.getElementById(_this.displayedPopoverID).style.display = "none";
            }
            catch (error) {
            }
            // document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay")
            // document.getElementById(this.displayedPopoverID).classList.add("popoverhide")
            // document.getElementById(this.displayedPopoverID).style.display = "none"
            _this.displayedPopoverID = "";
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    UprofilPage.prototype.supAd = function (ad) {
        var _this = this;
        // document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay")
        // document.getElementById(this.displayedPopoverID).classList.add("popoverhide")
        // document.getElementById(this.displayedPopoverID).style.display = "none"
        // this.displayPopover("popoverad" + ad.id)
        this.displayedPopoverID = "";
        for (var c = 0; c < this.listFav.length; c++) {
            if (ad.id == this.listFav[c].faq.id) {
                this.listFav.splice(c, 1);
                break;
            }
        }
        this.http.post(this.globals.variables.urls.supAd, {
            "ad_id": "" + ad.id,
            "user_id": "" + (this.user.id_User != null ? this.user.id_User : this.user.id)
        }, {})
            .then(function (resp) {
            console.log(JSON.stringify(resp));
            var res = JSON.parse(resp.data);
            _this.displayedPopoverID = "";
            if (res.status == "ok") {
                _this.toast.show("Annonce supprimée", "2000", "bottom")
                    .subscribe(function (t) {
                    console.log(JSON.stringify(t));
                });
                // for (let c = 0; c < this.listAdsSorted.length; c++) {
                //   if (ad.id == this.listAdsSorted[c].id) {
                //     this.listAdsSorted.splice(c, 1);
                //     break;
                //   }
                // }
            }
            else {
                _this.toast.show("Erreur de suppression", "2000", "bottom")
                    .subscribe(function (t) {
                    console.log(JSON.stringify(t));
                });
            }
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    UprofilPage.prototype.showEditAd = function (ad) {
        var _this = this;
        // this.displayPopover("popoverad" + ad.id)
        this.displayedPopoverID = "";
        console.log("JSON.stringify(ad)");
        console.log(JSON.stringify(ad));
        var upPage = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_21__annonce_add2_annonce_add2__["a" /* AnnonceAdd2Page */], {
            user: this.user,
            listCat: this.listCat,
            sourcePage: "ads",
            source: "update",
            adtoup: ad
        });
        upPage.onDidDismiss(function (data) {
            _this.platform.registerBackButtonAction(function () {
                _this.navCtrl.pop();
            });
            _this.getListTheme(null);
        });
        upPage.present();
    };
    UprofilPage.prototype.showDetailsFormation = function (formation) {
        //
        var fDet = __WEBPACK_IMPORTED_MODULE_22__formation_details_formation_details__["a" /* FormationDetailsPage */];
        formation.user_infos = formation.author_infos;
        this.navCtrl.push(fDet, {
            user: this.user,
            formation: formation
        });
    };
    UprofilPage.prototype.addToFavFormation = function (ad, iconItemID) {
        // let selectedItem = document.getElementById(iconItemID);
        // selectedItem.classList.add("fadeDown")
        // selectedItem.style.opacity = "0.2"
        var _this = this;
        this.http.post(this.globals.variables.urls.addLike, {
            user_id: this.user.id_User != null ? this.user.id_User : this.user.id,
            post_id: ad.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log("Resultat du serveur");
            console.log(JSON.stringify(res));
            // selectedItem.classList.remove("fadeDown")
            // selectedItem.style.opacity = "1"
            // document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay")
            // document.getElementById(this.displayedPopoverID).classList.add("popoverhide")
            // document.getElementById(this.displayedPopoverID).style.display = "none"
            _this.displayedPopoverID = "";
            if (res.status == "ok") {
                if (ad.user_like == 0) {
                    ad.user_like = 1;
                    _this.toast.show("Ajouté dans vos favoris", "2000", "bottom")
                        .subscribe(function (t) {
                        console.log(JSON.stringify(t));
                    });
                }
                else if (ad.user_like == 1) {
                    ad.user_like = 0;
                    _this.toast.show("Supprimé de vos favoris", "2000", "bottom")
                        .subscribe(function (t) {
                        console.log(JSON.stringify(t));
                    });
                }
                _this.getListTheme(null);
            }
            else {
                _this.toast.show("Erreur lors d'ajout dans vos favoris", "2000", "bottom")
                    .subscribe(function (t) {
                    console.log(JSON.stringify(t));
                });
            }
        }, function (error) {
            console.log("Erreur d'acces au serveur");
        });
    };
    UprofilPage.prototype.reportFormation = function (ad, iconItemID) {
        var _this = this;
        var selectedItem = document.getElementById(iconItemID);
        selectedItem.classList.add("fadeDown");
        selectedItem.style.opacity = "0.2";
        this.http.post(this.globals.variables.urls.repportFaQ, {
            "user_id": this.user.id_User != null ? this.user.id_User : this.user.id,
            "post_id": ad.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log(JSON.stringify(res));
            if (res.status == "ok") {
                if (ad.user_report == 1) {
                    ad.user_report = 0;
                    _this.toast.show("Votre signalisation a été annulée", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
                else {
                    ad.user_report = 1;
                    _this.toast.show("Vous avez signalé ce partage", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
            }
            else {
                console.log(JSON.stringify(res));
                _this.toast.show("Vous avez déjà signalé ce partage", "2000", "bottom").subscribe(function (toast) {
                    console.log(toast);
                });
            }
            selectedItem.classList.remove("fadeDown");
            selectedItem.style.opacity = "1";
            try {
                document.getElementById(_this.displayedPopoverID).classList.remove("popoverdisplay");
                document.getElementById(_this.displayedPopoverID).classList.add("popoverhide");
                document.getElementById(_this.displayedPopoverID).style.display = "none";
            }
            catch (error) {
            }
            _this.displayedPopoverID = "";
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    UprofilPage.prototype.report = function (faq, iconItemID) {
        var _this = this;
        this.displayPopover("popoverp" + faq.faq.id);
        //repportFaQ
        var selectedItem = document.getElementById(iconItemID);
        selectedItem.classList.add("fadeDown");
        selectedItem.style.opacity = "0.2";
        this.http.post(this.globals.variables.urls.repportFaQ, {
            "user_id": this.user.id_User != null ? this.user.id_User : this.user.id,
            "post_id": faq.faq.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log(JSON.stringify(res));
            if (res.status == "ok") {
                if (faq.faq.user_report == 1) {
                    faq.faq.user_report = 0;
                    _this.toast.show("Votre signalisation a été annulée", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
                else {
                    faq.faq.user_report = 1;
                    _this.toast.show("Vous avez signalé ce partage", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
            }
            else {
                console.log(JSON.stringify(res));
                _this.toast.show("Vous avez déjà signalé ce partage", "2000", "bottom").subscribe(function (toast) {
                    console.log(toast);
                });
            }
            selectedItem.classList.remove("fadeDown");
            selectedItem.style.opacity = "1";
            try {
                document.getElementById(_this.displayedPopoverID).classList.remove("popoverdisplay");
                document.getElementById(_this.displayedPopoverID).classList.add("popoverhide");
                document.getElementById(_this.displayedPopoverID).style.display = "none";
            }
            catch (error) {
            }
            // document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay")
            // document.getElementById(this.displayedPopoverID).classList.add("popoverhide")
            // document.getElementById(this.displayedPopoverID).style.display = "none"
            _this.displayedPopoverID = "";
            //console.log(JSON.stringify(data.data));
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    UprofilPage.prototype.addToFav = function (faq, iconItemID) {
        var _this = this;
        this.displayPopover("popoverp" + faq.faq.id);
        //this.favFlash = "favFlashIn";
        // document.getElementById(iconId).style.animation = "flashFavIn";
        // let selectedItem = document.getElementById(iconItemID);
        // selectedItem.classList.add("fadeDown")
        // selectedItem.style.opacity = "0.2"
        this.http.post(this.globals.variables.urls.addLike, {
            user_id: this.user.id_User != null ? this.user.id_User : this.user.id,
            post_id: faq.faq.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log("Resultat du serveur");
            console.log(JSON.stringify(res));
            if (res.status == "ok") {
                if (faq.faq.user_like == 0) {
                    faq.faq.user_like = 1;
                    _this.listFav.push(faq);
                    _this.toast.show("Ajouté dans vos favoris", "2000", "bottom")
                        .subscribe(function (t) {
                        console.log(JSON.stringify(t));
                    });
                }
                else if (faq.faq.user_like == 1) {
                    faq.faq.user_like = 0;
                    _this.toast.show("Supprimé de vos favoris", "2000", "bottom")
                        .subscribe(function (t) {
                        console.log(JSON.stringify(t));
                    });
                    for (var d = 0; d < _this.listFav.length; d++) {
                        if (_this.listFav[d].faq.id == faq.faq.id) {
                            _this.listFav.splice(d, 1);
                            break;
                        }
                    }
                }
            }
            else {
                _this.toast.show("Erreur lors d'ajout dans vos favoris", "2000", "bottom")
                    .subscribe(function (t) {
                    console.log(JSON.stringify(t));
                });
            }
            // selectedItem.classList.remove("fadeDown")
            // selectedItem.style.opacity = "1"
            // document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay")
            // document.getElementById(this.displayedPopoverID).classList.add("popoverhide")
            // document.getElementById(this.displayedPopoverID).style.display = "none"
            _this.displayedPopoverID = "";
            _this.getListTheme(null);
        }, function (error) {
            console.log("Erreur d'acces au serveur");
        });
        // setTimeout(() => {
        //   this.favFlash = "";
        // }, 1000);
    };
    UprofilPage.prototype.getListFavorite = function (infiniteScroll) {
        var _this = this;
        console.log("Getting list Favorite");
        var user_id = this.user.id_User != null ? this.user.id_User : this.user.id;
        this.http.get(this.globals.variables.urls.listLiked + "?user_id=" + user_id +
            "&offset=" + this.favPaging, {}, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log(JSON.stringify(res));
            if (res.length <= 0) {
                _this.load = 0;
                console.log('Async operation has ended');
                if (infiniteScroll != null)
                    infiniteScroll.complete();
                _this.result_list = 0;
            }
            else {
                for (var i = 0; i < res.length; i++) {
                    if (res[i].post_type == "faqs") {
                        var date_fr = res[i].date.charAt(8) + res[i].date.charAt(9) + "/" + res[i].date.charAt(5) + res[i].date.charAt(6) +
                            "/" + res[i].date.charAt(0) + res[i].date.charAt(1) + res[i].date.charAt(2) +
                            res[i].date.charAt(3) + " " + res[i].date.charAt(11) + res[i].date.charAt(12) + ":" +
                            res[i].date.charAt(14) + res[i].date.charAt(15);
                        res[i].dateFR = date_fr;
                        if (res[i].comments) {
                            var coms = [];
                            for (var elem in res[i].comments) {
                                coms.push(res[i].comments[elem]);
                            }
                            var images_count = 0;
                            var char70 = "";
                            if (res[i].description.length > 70) {
                                char70 = "" + res[i].description.substr(0, 69) + "...";
                            }
                            else {
                                char70 = res[i].description;
                            }
                            if (res[i].faq_image_1 != '' && res[i].faq_image_1 != null)
                                images_count += 1;
                            if (res[i].faq_image_2 != '' && res[i].faq_image_2 != null)
                                images_count += 1;
                            if (res[i].faq_image_3 != '' && res[i].faq_image_3 != null)
                                images_count += 1;
                            if (res[i].faq_image_4 != '' && res[i].faq_image_4 != null)
                                images_count += 1;
                            res[i].images_count = images_count;
                            res[i].comments_count = coms.length;
                            res[i].coms = coms;
                            res[i].char70 = char70;
                        }
                        for (var j = 0; j < _this.listFaQTheme.length; j++) {
                            if (_this.listFaQTheme[j].id == res[i].theme) {
                                var newFaQ = {
                                    faq: res[i],
                                    theme: _this.listFaQTheme[j]
                                };
                                _this.getFaQAuthor(res[i].author_id, i, res.length, newFaQ, infiniteScroll, "fav");
                            }
                        }
                    }
                    else if (res[i].post_type == "ads") {
                        var r = i;
                        var date_fr = res[r].date.charAt(8) + res[r].date.charAt(9) + "/" + res[r].date.charAt(5) + res[r].date.charAt(6) +
                            "/" + res[r].date.charAt(0) + res[r].date.charAt(1) + res[r].date.charAt(2) +
                            res[r].date.charAt(3) + " " + res[r].date.charAt(11) + res[r].date.charAt(12) + ":" +
                            res[r].date.charAt(14) + res[r].date.charAt(15);
                        res[r].date_fr = date_fr;
                        res[r].images_count = 0;
                        if (res[r].faq_image_1 != '' && res[r].faq_image_1 != null)
                            res[r].images_count += 1;
                        if (res[r].faq_image_2 != '' && res[r].faq_image_2 != null)
                            res[r].images_count += 1;
                        if (res[r].faq_image_3 != '' && res[r].faq_image_3 != null)
                            res[r].images_count += 1;
                        if (res[r].faq_image_4 != '' && res[r].faq_image_4 != null)
                            res[r].images_count += 1;
                        var char70 = "";
                        if (res[r].description.length > 200) {
                            char70 = "" + res[r].description.substr(0, 199) + "...";
                        }
                        else {
                            char70 = res[r].description;
                        }
                        res[r].char70 = char70;
                        var newFaQ = {
                            faq: res[i]
                        };
                        _this.listFav.push(newFaQ);
                        if (i == res.length - 1) {
                            _this.load = 0;
                            if (_this.activeList == "faq") {
                                _this.listFaQSorted = _this.listFaQ;
                            }
                            else if (_this.activeList == "fav") {
                                _this.listFaQSorted = _this.listFav;
                            }
                            if (infiniteScroll != null) {
                                console.log('Async operation has ended');
                                infiniteScroll.complete();
                            }
                        }
                        //   if (infiniteScroll != null)
                        // infiniteScroll.complete();
                    }
                    else if (res[i].post_type == "formation") {
                        var c = i;
                        var annee = res[c].date.charAt(6) + res[c].date.charAt(7) + res[c].date.charAt(8) + res[c].date.charAt(9);
                        var mois = res[c].date.charAt(3) + res[c].date.charAt(4);
                        var jour = res[c].date.charAt(0) + res[c].date.charAt(1);
                        var dateEN = annee + '-' + mois + '-' + jour;
                        var images_count = 0;
                        if (res[c].faq_image_1 != null && res[c].faq_image_1 != "") {
                            images_count += 1;
                        }
                        res[c].images_count = images_count;
                        if (res[c].image != '' && res[c].image != null)
                            res[c].images_count += 1;
                        res[c].date_fr = jour + '/' + mois + '/' + annee;
                        var char70 = "";
                        if (res[c].description.length > 200) {
                            char70 = "" + res[c].description.substr(0, 199) + "...";
                        }
                        else {
                            char70 = res[c].description;
                        }
                        res[c].char70 = char70;
                        var newFaQ = {
                            faq: res[i]
                        };
                        _this.listFav.push(newFaQ);
                        if (i == res.length - 1) {
                            _this.load = 0;
                            if (_this.activeList == "faq") {
                                _this.listFaQSorted = _this.listFaQ;
                            }
                            else if (_this.activeList == "fav") {
                                _this.listFaQSorted = _this.listFav;
                            }
                            if (infiniteScroll != null) {
                                console.log('Async operation has ended');
                                infiniteScroll.complete();
                            }
                        }
                    }
                    else if (res[i].post_type == "asavoir") {
                        var c = i;
                        var images_count = 0;
                        if (res[c].faq_image_1 != null && res[c].faq_image_1 != '')
                            images_count += 1;
                        if (res[c].faq_image_2 != null && res[c].faq_image_2 != '')
                            images_count += 1;
                        if (res[c].faq_image_3 != null && res[c].faq_image_3 != '')
                            images_count += 1;
                        if (res[c].faq_image_4 != null && res[c].faq_image_4 != '')
                            images_count += 1;
                        res[c].images_count = images_count;
                        var char70 = "";
                        if (res[c].description.length > 200) {
                            char70 = "" + res[c].description.substr(0, 199) + "...";
                        }
                        else {
                            char70 = res[c].description;
                        }
                        res[c].char70 = char70;
                        var newFaQ = {
                            faq: res[i]
                        };
                        _this.listFav.push(newFaQ);
                        if (i == res.length - 1) {
                            _this.load = 0;
                            if (_this.activeList == "faq") {
                                _this.listFaQSorted = _this.listFaQ;
                            }
                            else if (_this.activeList == "fav") {
                                _this.listFaQSorted = _this.listFav;
                            }
                            if (infiniteScroll != null) {
                                console.log('Async operation has ended');
                                infiniteScroll.complete();
                            }
                        }
                    }
                }
            }
        }, function (error) {
            if (infiniteScroll != null) {
                infiniteScroll.complete();
            }
            console.log(JSON.stringify(error));
        });
    };
    UprofilPage.prototype.favClick = function () {
        this.result_list = 1;
        if (this.displayedPopoverID != "") {
            document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay");
            document.getElementById(this.displayedPopoverID).classList.remove("popoverhide");
            document.getElementById(this.displayedPopoverID).style.display = "none";
            this.displayedPopoverID = "";
        }
        if (this.activeList != 'fav') {
            this.activeList = 'fav';
        }
        this.secondClassOfBtnFaQ = "";
        this.secondClassOfBtnFav = "secondClassOfBtnFav";
        this.listFaQSorted = this.listFav;
    };
    UprofilPage.prototype.faqClick = function () {
        this.result_list = 1;
        if (this.displayedPopoverID != "") {
            // document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay")
            // document.getElementById(this.displayedPopoverID).classList.remove("popoverhide")
            // document.getElementById(this.displayedPopoverID).style.display = "none"
            this.displayedPopoverID = "";
        }
        if (this.activeList != 'faq') {
            this.activeList = 'faq';
        }
        this.secondClassOfBtnFaQ = "secondClassOfBtnFaQ";
        this.secondClassOfBtnFav = "";
        this.listFaQSorted = this.listFaQ;
    };
    UprofilPage.prototype.displayPopover = function (popoverid) {
        var classL = document.getElementById(popoverid).classList.toString();
        console.log(classL);
        console.log(classL.indexOf("popoverdisplay"));
        if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") === -1 && this.displayedPopoverID == "") {
            console.log("=====///===Displayed ", popoverid);
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") === -1 && this.displayedPopoverID != "") {
            console.log("=====///===Displayed ", popoverid);
            document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay");
            document.getElementById(this.displayedPopoverID).classList.add("popoverhide");
            document.getElementById(this.displayedPopoverID).style.display = "none";
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") !== -1 && classL.indexOf("popoverhide") === -1 && this.displayedPopoverID == popoverid) {
            console.log("=====///===Hiden ", popoverid);
            document.getElementById(popoverid).classList.remove("popoverdisplay");
            document.getElementById(popoverid).classList.add("popoverhide");
            document.getElementById(popoverid).style.display = "none";
            this.displayedPopoverID = "";
            console.log("=====///===Hiden ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") !== -1 && this.displayedPopoverID != popoverid && this.displayedPopoverID != "") {
            console.log("=====///===Displayed Other : => ", popoverid);
            document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay");
            document.getElementById(this.displayedPopoverID).classList.add("popoverhide");
            document.getElementById(this.displayedPopoverID).style.display = "none";
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.remove("popoverhide");
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed Other : => ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") !== -1 && this.displayedPopoverID == "") {
            console.log("=====///===Displayed Once : => ", popoverid);
            document.getElementById(popoverid).classList.remove("popoverhide");
            document.getElementById(popoverid).classList.remove("popoverdisplay");
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed Once : => ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") !== -1 && this.displayedPopoverID == popoverid) {
            // this.displayHide()
        }
    };
    UprofilPage.prototype.getSingleFaQUpdate = function (id_faq) {
        var _this = this;
        this.http.get(this.globals.variables.urls.getSingleFaQ + '?faq_id=' + id_faq, {}, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            if (res.comments) {
                var coms = [];
                for (var elem in res.comments) {
                    coms.push(res.comments[elem]);
                }
                var images_count = 0;
                var char70 = "";
                if (res.description.length > 70) {
                    char70 = "" + res.description.substr(0, 69) + "...";
                }
                else {
                    char70 = res.description;
                }
                if (res.faq_image_1 != '' && res.faq_image_1 != null)
                    images_count += 1;
                if (res.faq_image_2 != '' && res.faq_image_2 != null)
                    images_count += 1;
                if (res.faq_image_3 != '' && res.faq_image_3 != null)
                    images_count += 1;
                if (res.faq_image_4 != '' && res.faq_image_4 != null)
                    images_count += 1;
                res.images_count = images_count;
                res.comments_count = coms.length;
                res.coms = coms;
                res.char70 = char70;
                res.dateFR = res.date.substr(8, 2) + '/' + res.date.substr(5, 2) + '/' +
                    res.date.substr(0, 4) + ' ' + res.date.substr(11, 5);
            }
            for (var b = 0; b < _this.listFaQSorted.length; b++) {
                console.log("Faq type : " + _this.listFaQSorted[b].type);
                if (_this.listFaQSorted[b].type == 'faq') {
                    if (id_faq == _this.listFaQSorted[b].faq.id) {
                        console.log("Found faq :");
                        var newFaQ = {
                            faq: res,
                            theme: _this.listFaQSorted[b].theme,
                            author: _this.listFaQSorted[b].author,
                            type: "faq"
                        };
                        _this.listFaQSorted[b] = newFaQ;
                    }
                }
            }
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    UprofilPage.prototype.updateUserInfo = function (user_id) {
        var _this = this;
        this.http.get(this.globals.variables.urls.getUserInfo, {
            "user_id": "" + user_id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log("User info to update");
            console.log(JSON.stringify(res));
            _this.user = res.info_utilisateur;
            _this.saveSession(res.info_utilisateur);
            // let home = HomePage;
            // this.navCtrl.setRoot(home, {
            //   user: res.info_utilisateur
            // },
            //   {
            //     animate: true,
            //     animation: 'ios-transition',
            //     direction: 'forward',
            //     duration: 500
            //   }
            // );
        }, function (error) {
            console.log("Error updating user info");
            console.log(JSON.stringify(error));
        });
    };
    UprofilPage.prototype.saveSession = function (user) {
        this.storage.set('user', user)
            .then(function (data) {
            //
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["e" /* Content */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["e" /* Content */])
    ], UprofilPage.prototype, "content", void 0);
    UprofilPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-uprofil',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/uprofil/uprofil.html"*/'<ion-content (ionScroll)="onContentScroll($event)" class="pr">\n\n  <ion-row ion-fixed class="header">\n\n    <ion-col></ion-col>\n    <ion-col (click)="goToHome()">\n      <ion-label class="da">\n        <img class="logo" src="assets/imgs/da_image/logo-dentart.png">\n        <span class="bold">Dent</span><span class="fine">Art</span>\n\n      </ion-label>\n    </ion-col>\n    <ion-col></ion-col>\n\n  </ion-row>\n\n  <ion-row ion-fixed class="ctn-photo-profil" *ngIf="showAvatar">\n    <div class="head-photo-profil">\n      <img (click)="cloaseAvatarImg();" class="close-icon" src="../../assets/icon/close-white.svg">\n    </div>\n    <div class="div-photo-profil">\n      <img [src]="user.avatar || user.photo" class="photo-profil">\n    </div>\n  </ion-row>\n\n  <div class="container">\n\n    <ion-refresher (ionRefresh)="getListTheme($event)">\n      <ion-refresher-content pullingIcon="arrow-dropdown" pullingText="Tirez pour rafraîchir" refreshingSpinner="none"\n        refreshingText="" pullMin="120" pullMax="200" class="refresher">\n      </ion-refresher-content>\n    </ion-refresher>\n\n    <ion-row class="card-ctn-user">\n\n      <ion-col>\n\n        <div class="icon-edit" (click)="showEdit()">\n          <img class="icon-ed" src="../../assets/icon/edit-green.svg" />\n          Éditer\n        </div>\n\n        <!-- <ion-row class="img-profil-row" (click)="showAvatarImg();"\n          [style.background-image]="\'url(\'+(user.avatar != \'\' ? user.avatar : \'../../assets/imgs/avatar/avatar_h.png\')+\')\'">\n          \n          <img *ngIf="user.validate == 1" class="cert" src="../../assets/icon/certifie.png">\n        </ion-row> -->\n\n        <ion-row class="img-profil-row" (click)="showAvatarImg();"\n          [style.background-image]="\'url(\'+(user.avatarB64 != null ? user.avatarB64 : user.avatar)+\')\'">\n\n          <img *ngIf="user.validate == 1" class="cert" src="../../assets/icon/certifie.png">\n        </ion-row>\n\n        <ion-row class="user-info-row">\n\n          <div>\n            <span class="value-right">{{user.pseudo}}</span>\n          </div>\n          <div>\n            <span class="value-right grey-text">{{user.job}}</span>\n          </div>\n          <div>\n            <span class="value-right grey-text">{{user.address}}</span>\n          </div>\n          <div>\n            <span class="value-right grey-text">{{user.phone}}</span>\n          </div>\n          <div>\n            <span class="value-right grey-text">{{user.mail ? user.mail : user.user_email}}</span>\n          </div>\n\n        </ion-row>\n\n      </ion-col>\n\n    </ion-row>\n\n    <div class="separator"></div>\n\n    <ion-row class="my-pub">\n      <div (click)="faqClick()" class="my-pub-lab my-pub-lab-1 {{secondClassOfBtnFaQ}}">Mes partages</div>\n      <div (click)="favClick()" class="my-pub-lab my-pub-lab-2 {{secondClassOfBtnFav}}">Mes favoris</div>\n    </ion-row>\n\n    <div class="sep-grey"></div>\n\n    <div style="display: flex; flex-direction: column; align-items: center; width: 100%;">\n\n      <ion-row ion-fixed class="load-ctn" id="load" *ngIf="load == 1">\n        <ion-spinner class="loading-custom" name="crescent" color="vert_logo"></ion-spinner>\n      </ion-row>\n\n      <div *ngFor="let faq of listFaQSorted" style="width: 100%;">\n\n        <div class="theBlockNews" *ngIf="faq.faq.post_type == \'asavoir\'">\n          <div class="row1">\n            <div class="row1-col1 row-text" (click)="showDetailsNews(faq.faq);">\n              <div class="faq-ttl" [innerHtml]="faq.faq.title"></div>\n              <div class="faq-desc" [innerHtml]="faq.faq.char70"></div>\n              <div class="more" *ngIf="faq.faq.char70.length > 199">Voir plus ...</div>\n            </div>\n            <div class="row1-col2">\n\n              <div class="drop-down-icon" (click)="displayPopover(\'popover\'+faq.faq.id)">\n                <div class="left-bar"></div>\n                <div class="right-bar"></div>\n              </div>\n              <div class="popover-ctn" id="popover{{faq.faq.id}}">\n                <div class="popover-tsingy">\n                  <div class="half-transparent"></div>\n                </div>\n                <div class="list-ctn">\n                  <div class="option-item" id="favicon{{faq.faq.id}}" (click)="addToFavNews(faq.faq, \'favicon\'+faq.faq.id)">\n                    <div class="op-it-icon">\n                      <img class="it-icon" src="../../assets/icon/heart-green-blue.svg" />\n                    </div>\n                    <div class="item-text">Favoris</div>\n                  </div>\n                  <div class="sep-popover"></div>\n                  <div class="option-item" id="repicon{{faq.faq.id}}" (click)="reportNews(faq.faq, \'repicon\'+faq.faq.id)">\n                    <div class="op-it-icon">\n                      <img class="it-icon" src="../../assets/icon/warning.svg" />\n                    </div>\n                    <div class="item-text">Signaler</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class="row-text" (click)="showDetailsNews(faq.faq);">\n            <!-- <div class="faq-ttl" [innerHtml]="faq.faq.title"></div>\n                <div class="faq-desc" [innerHtml]="faq.faq.char70"></div> -->\n          </div>\n          <div *ngIf="faq.faq.images_count > 0" class="row2" (click)="showDetailsNews(faq.faq);"\n            [style.background-image]="\'url(\'+(faq.faq.faq_image_1 != null ? faq.faq.faq_image_1 : \'../../assets/imgs/da_image/Rectangle-05.jpg\')+\')\'">\n            <div class="photo-badge">\n              {{faq.faq.images_count}}\n              <img class="nb-photo-icon" src="../../assets/icon/photo-camera-white.svg" />\n            </div>\n          </div>\n          <div class="row3">\n            <div class="col-foot" (click)="addToFavorite(faq);">\n              <div class="foot-badge" *ngIf="faq.faq.favorite_count == null">0</div>\n              <div class="foot-badge" *ngIf="faq.faq.favorite_count < 100">{{faq.faq.favorite_count}}</div>\n              <div class="foot-badge" *ngIf="faq.faq.favorite_count >= 100">99+</div>\n              <div class="foot-block-icon-ctn">\n                <img class="foot-block-icon"\n                  src="{{faq.faq.user_favorite != 0 && faq.faq.user_favorite != \'0\' ? \'../../assets/icon/like-fin-green.svg\' : \'../../assets/icon/like-fin-blue.svg\' }}" />\n              </div>\n              <div class="foot-label">J\'aime</div>\n            </div>\n            <div class="col-foot" (click)="shareViaApp(faq.faq);">\n              <div class="foot-badge" *ngIf="faq.faq.share_count == null">0</div>\n              <div class="foot-badge" *ngIf="faq.faq.share_count < 100">{{faq.faq.share_count}}</div>\n              <div class="foot-badge" *ngIf="faq.faq.share_count >= 100">99+</div>\n              <div class="foot-block-icon-ctn">\n                <img class="foot-block-icon" src="../../assets/icon/share-blue.svg" />\n              </div>\n              <div class="foot-label">Partager</div>\n            </div>\n          </div>\n        </div>\n\n        <div class="theBlockFromation" *ngIf="faq.faq.post_type == \'formation\'">\n          <div class="row1">\n            <div class="row1-col1 row-text" (click)="showDetailsFormation(faq.faq);">\n              <div class="faq-ttl-bold" [innerHtml]="faq.faq.title"></div>\n              <div class="faq-ttl" [innerHtml]="faq.faq.categorie.name"></div>\n              <div class="faq-desc" [innerHtml]="faq.faq.char70"></div>\n              <div class="more" *ngIf="faq.faq.char70.length > 199">Voir plus ...</div>\n            </div>\n            <div class="row1-col2">\n\n              <div class="drop-down-icon" (click)="displayPopover(\'popoverfrm\'+faq.faq.id)">\n                <div class="left-bar"></div>\n                <div class="right-bar"></div>\n              </div>\n              <div class="popover-ctn" id="popoverfrm{{faq.faq.id}}">\n                <div class="popover-tsingy">\n                  <div class="half-transparent"></div>\n                </div>\n                <div class="list-ctn">\n                  <div class="option-item" id="faviconfrm{{faq.faq.id}}"\n                    (click)="addToFavFormation(faq.faq, \'faviconfrm\'+faq.faq.id)">\n                    <div class="op-it-icon">\n                      <img class="it-icon" src="../../assets/icon/heart-green-blue.svg" />\n                    </div>\n                    <div class="item-text">Favoris</div>\n                  </div>\n                  <div class="sep-popover"></div>\n                  <div class="option-item" id="repiconfrm{{faq.faq.id}}"\n                    (click)="reportFormation(faq.faq, \'repiconfrm\'+faq.faq.id)">\n                    <div class="op-it-icon">\n                      <img class="it-icon" src="../../assets/icon/warning.svg" />\n                    </div>\n                    <div class="item-text">Signaler</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class="row-text" (click)="showDetailsFormation(faq.faq);">\n            <!-- <div class="faq-ttl" [innerHtml]="faq.faq.categorie.name"></div>\n                <div class="faq-desc" [innerHtml]="faq.faq.char70"></div> -->\n          </div>\n          <div *ngIf="faq.faq.faq_image_1 == null || faq.faq.faq_image_1 != \'\' || faq.faq.faq_image_1 != false" class="row2"\n            (click)="showDetailsFormation(faq.faq);"\n            [style.background-image]="\'url(\'+(faq.faq.faq_image_1 != null && faq.faq.faq_image_1 != \'\' ? faq.faq.faq_image_1 : \'../../assets/imgs/da_image/Rectangle-05.jpg\')+\')\'">\n            <div class="photo-badge">\n              {{faq.faq.images_count}}\n              <img class="nb-photo-icon" src="../../assets/icon/photo-camera-white.svg" />\n            </div>\n          </div>\n          <div class="row3">\n            <div class="col-foot" (click)="addToFavorite(faq);">\n              <div class="foot-badge" *ngIf="faq.faq.favorite_count == null">0</div>\n              <div class="foot-badge" *ngIf="faq.faq.favorite_count < 100">{{faq.faq.favorite_count}}</div>\n              <div class="foot-badge" *ngIf="faq.faq.favorite_count >= 100">99+</div>\n              <div class="foot-block-icon-ctn">\n                <img class="foot-block-icon"\n                  src="{{faq.faq.user_favorite != 0 && faq.faq.user_favorite != \'0\' ? \'../../assets/icon/like-fin-green.svg\' : \'../../assets/icon/like-fin-blue.svg\' }}" />\n              </div>\n              <div class="foot-label">J\'aime</div>\n            </div>\n            <div class="col-foot" (click)="shareViaApp(faq.faq);">\n              <div class="foot-badge" *ngIf="faq.faq.share_count == null">0</div>\n              <div class="foot-badge" *ngIf="faq.faq.share_count < 100">{{faq.faq.share_count}}</div>\n              <div class="foot-badge" *ngIf="faq.faq.share_count >= 100">99+</div>\n              <div class="foot-block-icon-ctn">\n                <img class="foot-block-icon" src="../../assets/icon/share-blue.svg" />\n              </div>\n              <div class="foot-label">Partager</div>\n            </div>\n          </div>\n        </div>\n\n        <div class="theBlock theBlockAds" *ngIf="faq.faq.post_type == \'ads\'" >\n          <div class="row1">\n            <div class="row1-col1" (click)="showDetailsAd(faq.faq);">\n              <div class="user-avatar-ctn">\n                <img class="user-avatar"\n                  src="{{faq.faq.author_infos.avatar != \'\' ? faq.faq.author_infos.avatar : \'assets/imgs/avatar/avatar_f.png\'}}" />\n              </div>\n              <div class="user-info-cth">\n                <div class="user-pseudo">\n                  {{faq.faq.author_infos.pseudo}}\n                </div>\n                <div class="user-job">\n                  <!-- faq.faq.author_infos.address -->\n                  {{faq.faq.author_infos.job}} - {{faq.address}}\n                </div>\n                <div class="post-date">\n                  {{faq.faq.date_fr}}\n                </div>\n              </div>\n            </div>\n            <div class="row1-col2">\n\n              <div *ngIf="faq.faq != null" class="drop-down-icon" (click)="displayPopover(\'popoverad\'+faq.faq.id)">\n                <div class="left-bar"></div>\n                <div class="right-bar"></div>\n              </div>\n              <div *ngIf="faq.faq != null" class="popover-ctn" id="popoverad{{faq.faq.id}}">\n                <div class="popover-tsingy">\n                  <div class="half-transparent"></div>\n                </div>\n                <div class="list-ctn">\n                  <div class="option-item" id="faviconad{{faq.faq.id}}"\n                    (click)="addToFavAd(faq.faq, \'faviconad\'+faq.faq.id)">\n                    <div class="op-it-icon">\n                      <img class="it-icon" src="../../assets/icon/heart-green-blue.svg" />\n                    </div>\n                    <div class="item-text">Favoris</div>\n                  </div>\n                  <div class="sep-popover"></div>\n                  <div class="option-item" id="repiconad{{faq.faq.id}}"\n                    (click)="reportAd(faq.faq, \'repiconad\'+faq.faq.id)">\n                    <div class="op-it-icon">\n                      <img class="it-icon" src="../../assets/icon/warning.svg" />\n                    </div>\n                    <div class="item-text">Signaler</div>\n                  </div>\n\n                  <div *ngIf="user_id == faq.faq.author_id">\n                    <div class="sep-popover"></div>\n                    <div class="option-item" id="modiconad{{faq.faq.id}}" (click)="showEditAd(faq.faq)">\n                      <div class="op-it-icon">\n                        <img class="it-icon" src="../../assets/icon/edit-green.svg" />\n                      </div>\n                      <div class="item-text">Modifier</div>\n                    </div>\n                  </div>\n\n                  <div *ngIf="user_id == faq.faq.author_id">\n                    <div class="sep-popover"></div>\n                    <div class="option-item" id="supiconad{{faq.faq.id}}" (click)="supAd(faq.faq)">\n                      <div class="op-it-icon">\n                        <img class="it-icon" src="../../assets/icon/garbage.svg" />\n                      </div>\n                      <div class="item-text">Supprimer</div>\n                    </div>\n                  </div>\n\n\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class="row-text" (click)="showDetailsAd(faq.faq);">\n            <div class="faq-ttl" [innerHtml]="faq.faq.category.name"></div>\n            <div class="faq-desc" [innerHtml]="faq.faq.char70"></div>\n            <div class="more" *ngIf="faq.faq.char70.length > 199">Voir plus ...</div>\n          </div>\n          <div *ngIf="faq.faq.images_count > 0" class="row2" (click)="showDetailsAd(faq.faq);"\n            [style.background-image]="\'url(\'+(faq.faq.faq_image_1 != null ? faq.faq.faq_image_1 : \'../../assets/imgs/da_image/Rectangle-05.jpg\')+\')\'">\n            <div class="photo-badge">\n              {{faq.faq.images_count}}\n              <img class="nb-photo-icon" src="../../assets/icon/photo-camera-white.svg" />\n            </div>\n          </div>\n          <div class="row3">\n            <div class="col-foot" (click)="addToFavorite(faq);">\n              <div class="foot-badge" *ngIf="faq.faq.favorite_count == null">0</div>\n              <div class="foot-badge" *ngIf="faq.faq.favorite_count < 100">{{faq.faq.favorite_count}}</div>\n              <div class="foot-badge" *ngIf="faq.faq.favorite_count >= 100">99+</div>\n              <div class="foot-block-icon-ctn">\n                <img class="foot-block-icon"\n                  src="{{faq.faq.user_favorite != 0 && faq.faq.user_favorite != \'0\' ? \'../../assets/icon/like-fin-green.svg\' : \'../../assets/icon/like-fin-blue.svg\' }}" />\n              </div>\n              <div class="foot-label">J\'aime</div>\n            </div>\n            <div class="col-foot" (click)="shareViaApp(faq.faq);">\n              <div class="foot-badge" *ngIf="faq.faq.share_count == null">0</div>\n              <div class="foot-badge" *ngIf="faq.faq.share_count < 100">{{faq.faq.share_count}}</div>\n              <div class="foot-badge" *ngIf="faq.faq.share_count >= 100">99+</div>\n              <div class="foot-block-icon-ctn">\n                <img class="foot-block-icon" src="../../assets/icon/share-blue.svg" />\n              </div>\n              <div class="foot-label">Partager</div>\n            </div>\n          </div>\n        </div>\n\n        <div class="theBlock" *ngIf="faq.faq.post_type == \'faqs\'">\n          <div class="row1">\n            <div class="row1-col1" (click)="comment(faq,\'detail\');">\n              <div class="user-avatar-ctn">\n                <!-- [style.background-image]="\'url(\'+(user.avatar != null ? user.avatar : user.photo)+\')\'" -->\n                <img class="user-avatar"\n                  [src]="faq.author.avatarB64 != null ? faq.author.avatarB64 : faq.author.avatar" />\n              </div>\n              <div class="user-info-cth">\n                <div class="user-pseudo">\n                  {{faq.author.pseudo}}\n                </div>\n                <div class="user-job">\n                  {{faq.author.job}} - {{faq.author.address}}\n                </div>\n                <div class="post-date">\n                  {{faq.faq.dateFR}}\n                </div>\n              </div>\n            </div>\n            <div class="row1-col2">\n\n              <div class="drop-down-icon" (click)="displayPopover(\'popoverp\'+faq.faq.id)">\n                <div class="left-bar"></div>\n                <div class="right-bar"></div>\n              </div>\n              <div class="popover-ctn" id="popoverp{{faq.faq.id}}">\n                <div class="popover-tsingy">\n                  <div class="half-transparent"></div>\n                </div>\n                <div class="list-ctn">\n                  <div class="option-item" id="faviconp{{faq.faq.id}}" (click)="addToFav(faq, \'faviconp\'+faq.faq.id)">\n                    <div class="op-it-icon">\n                      <img class="it-icon" src="../../assets/icon/heart-green-blue.svg" />\n                    </div>\n                    <div class="item-text">Favoris</div>\n                  </div>\n                  <div class="sep-popover"></div>\n                  <div class="option-item" id="repiconp{{faq.faq.id}}" (click)="report(faq, \'repiconp\'+faq.faq.id)">\n                    <div class="op-it-icon">\n                      <img class="it-icon" src="../../assets/icon/warning.svg" />\n                    </div>\n                    <div class="item-text">Signaler</div>\n                  </div>\n\n                  <div *ngIf="user_id == faq.faq.author_id">\n                    <div class="sep-popover"></div>\n                    <div class="option-item" id="modiconp{{faq.faq.id}}" (click)="updateFaQ(faq)">\n                      <div class="op-it-icon">\n                        <img class="it-icon" src="../../assets/icon/edit-green.svg" />\n                      </div>\n                      <div class="item-text">Modifier</div>\n                    </div>\n                  </div>\n\n                  <div *ngIf="user_id == faq.faq.author_id">\n                    <div class="sep-popover"></div>\n                    <div class="option-item" id="supiconp{{faq.faq.id}}" (click)="deleteFaQ(faq)">\n                      <div class="op-it-icon">\n                        <img class="it-icon" src="../../assets/icon/garbage.svg" />\n                      </div>\n                      <div class="item-text">Supprimer</div>\n                    </div>\n\n                  </div>\n\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class="row-text" (click)="comment(faq,\'detail\');">\n            <div class="faq-ttl" [innerHtml]="faq.theme.name"></div>\n            <div class="faq-desc" [innerHtml]="faq.faq.char70"></div>\n            <div class="more" *ngIf="faq.faq.char70.length > 69">Voir plus ...</div>\n          </div>\n          <div *ngIf="faq.faq.images_count > 0" class="row2" (click)="comment(faq,\'detail\');"\n            [style.background-image]="\'url(\'+(faq.faq.faq_image_1 != null ? faq.faq.faq_image_1 : \'../../assets/imgs/da_image/Rectangle-05.jpg\')+\')\'">\n            <div class="photo-badge">\n              {{faq.faq.images_count}}\n              <img class="nb-photo-icon" src="../../assets/icon/photo-camera-white.svg" />\n            </div>\n          </div>\n          <div class="row3">\n            <div class="col-foot" (click)="addToFavorite(faq);">\n              <div class="foot-badge" *ngIf="faq.faq.favorite_count < 100">{{faq.faq.favorite_count}}</div>\n              <div class="foot-badge" *ngIf="faq.faq.favorite_count >= 100">99+</div>\n              <div class="foot-block-icon-ctn">\n                <img class="foot-block-icon"\n                  src="{{faq.faq.user_favorite != 0 && faq.faq.user_favorite != \'0\' ? \'../../assets/icon/like-fin-green.svg\' : \'../../assets/icon/like-fin-blue.svg\' }}" />\n              </div>\n              <div class="foot-label">J\'aime</div>\n            </div>\n            <div class="col-foot" (click)="comment(faq,\'com\');">\n              <div class="foot-badge" *ngIf="faq.faq.comments_count < 100">{{faq.faq.comments_count}}</div>\n              <div class="foot-badge" *ngIf="faq.faq.comments_count >= 100">99+</div>\n              <div class="foot-block-icon-ctn">\n                <img class="foot-block-icon" src="../../assets/icon/comment-rec-blue.svg" />\n              </div>\n              <div class="foot-label">Commentaire</div>\n            </div>\n            <div class="col-foot" (click)="shareViaApp(faq);">\n              <div class="foot-badge" *ngIf="faq.faq.share_count < 100">{{faq.faq.share_count}}</div>\n              <div class="foot-badge" *ngIf="faq.faq.share_count >= 100">99+</div>\n              <div class="foot-block-icon-ctn">\n                <img class="foot-block-icon" src="../../assets/icon/share-blue.svg" />\n              </div>\n              <div class="foot-label">Partager</div>\n            </div>\n          </div>\n          <div style="width: 100%; height: 20px; background-color: #e0e0e0;"></div>\n        </div>\n      </div>\n\n    </div>\n\n  </div>\n\n  <ion-infinite-scroll (ionInfinite)="doInfinite($event)">\n    <ion-infinite-scroll-content *ngIf="result_list == 1"></ion-infinite-scroll-content>\n  </ion-infinite-scroll>\n\n  <ion-row ion-fixed class="tab-faq">\n    <ion-col (click)="openMenu()">\n      <img ion-fixed class="btn-menu" src="../../assets/icon/menu-button.svg">\n    </ion-col>\n    <ion-col></ion-col>\n    <ion-col (click)="goHome()">\n      <img class="btn-home" src="../../assets/icon/home-7.svg">\n    </ion-col>\n    <ion-col></ion-col>\n    <ion-col></ion-col>\n  </ion-row>\n\n</ion-content>'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/uprofil/uprofil.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["f" /* Events */],
            __WEBPACK_IMPORTED_MODULE_8__ionic_native_toast__["a" /* Toast */],
            __WEBPACK_IMPORTED_MODULE_9__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_10__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_15__ionic_native_social_sharing__["a" /* SocialSharing */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_18__ionic_storage__["b" /* Storage */]])
    ], UprofilPage);
    return UprofilPage;
}());

//# sourceMappingURL=uprofil.js.map

/***/ }),

/***/ 26:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MesannoncesPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__annonce_add1_annonce_add1__ = __webpack_require__(156);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__annonce_details_annonce_details__ = __webpack_require__(46);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__home_home__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__menu_menu__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__dentart_dentart__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__formations_formations__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__a_savoir_a_savoir__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__uprofil_uprofil__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__notifications_notifications__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__ionic_native_toast__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__ionic_native_geolocation__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__ionic_native_diagnostic__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__annonces_annonces__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__annonce_add2_annonce_add2__ = __webpack_require__(55);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__ionic_storage__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__ionic_native_social_sharing__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__sharemodal_sharemodal__ = __webpack_require__(38);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





















var MesannoncesPage = /** @class */ (function () {
    function MesannoncesPage(navCtrl, navParams, modalCtrl, http, globals, events, toast, alertCtrl, geolocation, diagnostic, platform, storage, socialSharing) {
        // diagnostic.isGpsLocationAvailable()
        //   .then((data) => {
        //     console.log("GPS is available...=====");
        //     console.log(JSON.stringify(data));
        //     if (data == false) {
        //       diagnostic.requestLocationAuthorization()
        //         .then((resp) => {
        //           console.log("Demande d'auth GPS response");
        //           console.log(JSON.stringify(resp));
        //           if (resp == "GRANTED") {
        //             this.getUserPosition();
        //             this.watchMyPosition();
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.modalCtrl = modalCtrl;
        this.http = http;
        this.globals = globals;
        this.events = events;
        this.toast = toast;
        this.alertCtrl = alertCtrl;
        this.geolocation = geolocation;
        this.diagnostic = diagnostic;
        this.platform = platform;
        this.storage = storage;
        this.socialSharing = socialSharing;
        this.load = 1;
        this.paging = 0;
        this.user = {};
        this.listCat = [];
        this.listAds = [];
        this.listAdsSorted = [];
        this.selectedCat = {};
        this.selectedTri = {};
        this.userPos = {};
        this.pertinence = 0;
        this.proximite = 0;
        this.markers = [];
        this.displayedPopoverID = "";
        //           }
        //         })
        //         .catch((error) => {
        //           console.log("Erreur de demande d'auth GPS");
        //         })
        //     }
        //     else {
        //       this.getUserPosition();
        //       this.watchMyPosition();
        //     }
        //   })
        //   .catch((error) => {
        //     console.log(JSON.stringify(error));
        //     toast.show("Vous n'avez pas de GPS", "2000", "bottom")
        //       .subscribe(t => {
        //         console.log(JSON.stringify(t));
        //       })
        //   });
        this.user = navParams.get('user');
        this.user_id = this.user.id_User != null ? this.user.id_User : this.user.id;
        console.log(JSON.stringify(this.user));
        this.getListCat();
        this.getListAds(null);
        //this.doInfinite(null);
        platform.registerBackButtonAction(function () {
            navCtrl.pop();
        });
    }
    MesannoncesPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad MesannoncesPage');
    };
    MesannoncesPage.prototype.refresh = function (refresherEvent) {
        this.listAds = [];
        this.listAdsSorted = [];
        this.paging = 0;
        if (refresherEvent != null) {
            this.load = 1;
            setTimeout(function () {
                refresherEvent.complete();
            }, 200);
        }
        this.getListAds(null);
    };
    MesannoncesPage.prototype.goBack = function () {
        this.navCtrl.pop();
    };
    MesannoncesPage.prototype.goHome = function () {
        this.navCtrl.popToRoot();
    };
    MesannoncesPage.prototype.ionViewWillEnter = function () {
        // google.maps.event.trigger(this.map, 'resize');
    };
    MesannoncesPage.prototype.ionViewDidEnter = function () {
        // google.maps.event.trigger(this.map, 'resize');
    };
    MesannoncesPage.prototype.openMenu = function () {
        var _this = this;
        var menu = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_7__menu_menu__["a" /* MenuPage */], {
            user: this.user
        }, {
            enterAnimation: 'modal-translate-up-enter',
            leaveAnimation: 'modal-translate-up-leave'
        });
        menu.onDidDismiss(function (page) {
            _this.platform.registerBackButtonAction(function () {
                _this.navCtrl.pop();
            });
            if (page.title == "Partages") {
                var homePage = __WEBPACK_IMPORTED_MODULE_6__home_home__["a" /* HomePage */];
                _this.navCtrl.setRoot(homePage, {
                    user: _this.user
                }, {
                    animate: true
                });
            }
            else if (page.title == "profil") {
                var adPage = __WEBPACK_IMPORTED_MODULE_11__uprofil_uprofil__["a" /* UprofilPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "UprofilPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "UprofilPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(adPage, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "Annonces") {
                var adPage = __WEBPACK_IMPORTED_MODULE_16__annonces_annonces__["a" /* AnnoncesPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "AnnoncesPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "AnnoncesPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(adPage, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "Formations") {
                var actuPage = __WEBPACK_IMPORTED_MODULE_9__formations_formations__["a" /* FormationsPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "FormationsPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "FormationsPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(actuPage, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "News") {
                var actuPage = __WEBPACK_IMPORTED_MODULE_10__a_savoir_a_savoir__["a" /* ASavoirPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "ASavoirPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "ASavoirPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(actuPage, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "Mes alertes") {
                var notif = __WEBPACK_IMPORTED_MODULE_12__notifications_notifications__["a" /* NotificationsPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "NotificationsPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "NotificationsPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(notif, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == 'mesannonces') {
                //
            }
            else if (page.title == "deconnexion") {
                _this.events.publish('user:logedOut', _this.user);
                _this.load = 1;
                _this.storage.set('user', null)
                    .then(function (data) {
                    console.log(JSON.stringify(data));
                    setTimeout(function () {
                        _this.load = 0;
                        _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_8__dentart_dentart__["a" /* DentartPage */], {}, {
                            animate: true
                        });
                    }, 500);
                }, function (error) {
                    console.log(JSON.stringify(error));
                });
            }
        });
        menu.present();
    };
    MesannoncesPage.prototype.newAnnonce = function () {
        var faq1 = __WEBPACK_IMPORTED_MODULE_2__annonce_add1_annonce_add1__["a" /* AnnonceAdd1Page */];
        this.navCtrl.push(faq1, {
            user: this.user,
            listCat: this.listCat,
            sourcePage: 'mesannonces'
        });
    };
    MesannoncesPage.prototype.getListCat = function () {
        var _this = this;
        this.http.post(this.globals.variables.urls.listAnnonceCat, {}, {})
            .then(function (data) {
            _this.listCat = JSON.parse(data.data);
            _this.load = 0;
            console.log(JSON.stringify(_this.listCat));
        }, function (error) {
            _this.load = 0;
            console.log(JSON.stringify(error));
        });
    };
    MesannoncesPage.prototype.getListAds = function (infiniteScroll) {
        var _this = this;
        console.log("Getting Ads lists.");
        var id_user = this.user.id_User != null ? this.user.id_User : this.user.id;
        this.http.post(this.globals.variables.urls.listAdByUser + "?id_user=" + id_user + "&offset=" + this.paging + "&category=" + this.selectedCat.id + "&pertinence=" + this.pertinence + "&date=DESC", {}, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            if (res.length <= 0) {
                _this.load = 0;
                if (infiniteScroll != null) {
                    console.log('Async operation has ended');
                    infiniteScroll.complete();
                }
            }
            else {
                _this.load = 0;
                for (var r = 0; r < res.length; r++) {
                    var date_fr = res[r].date.charAt(8) + res[r].date.charAt(9) + "/" + res[r].date.charAt(5) + res[r].date.charAt(6) +
                        "/" + res[r].date.charAt(0) + res[r].date.charAt(1) + res[r].date.charAt(2) + res[r].date.charAt(3);
                    res[r].date_fr = date_fr;
                    // res[r].date_fr = date_fr;
                    res[r].images_count = 0;
                    if (res[r].ad_image_1 != '' && res[r].ad_image_1 != null)
                        res[r].images_count += 1;
                    if (res[r].ad_image_2 != '' && res[r].ad_image_2 != null)
                        res[r].images_count += 1;
                    if (res[r].ad_image_3 != '' && res[r].ad_image_3 != null)
                        res[r].images_count += 1;
                    if (res[r].ad_image_4 != '' && res[r].ad_image_4 != null)
                        res[r].images_count += 1;
                    var char70 = "";
                    if (res[r].description.length > 70) {
                        char70 = "" + res[r].description.substr(0, 69) + "...";
                    }
                    else {
                        char70 = res[r].description;
                    }
                    res[r].char70 = char70;
                    _this.listAdsSorted.push(res[r]);
                }
                if (infiniteScroll != null) {
                    console.log('Async operation has ended');
                    infiniteScroll.complete();
                }
                console.log("Getting user info (ad Author)");
            }
        }, function (error) {
            _this.load = 0;
            console.log(JSON.stringify(error));
        });
    };
    MesannoncesPage.prototype.addAsViewed = function (ad) {
        this.http.post(this.globals.variables.urls.addViewAd, {
            "id": ad.id
        }, {})
            .then(function (res) {
            console.log("Adding view result");
            console.log(JSON.stringify(res.data));
        }, function (error) {
            console.log("Error when adding view to ad");
            console.log(JSON.stringify(error));
        });
    };
    MesannoncesPage.prototype.getListAdsByGeolocation = function (infiniteScroll) {
        var _this = this;
        console.log("Getting Ads lists by geolocation.");
        console.log(JSON.parse(this.user.full_adresse).place_id);
        this.http.post(this.globals.variables.urls.listAdByGeolocate + "?offset=" + this.paging, {
            "place_id": JSON.parse(this.user.full_adresse).place_id,
            "offset": this.paging
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log(JSON.stringify(res));
            if (res.length <= 0) {
                _this.load = 0;
                if (infiniteScroll != null) {
                    console.log('Async operation has ended');
                    infiniteScroll.complete();
                    _this.toast.show("Fin de la liste des annonces", "3000", "bottom")
                        .subscribe(function (toast) {
                        console.log(JSON.stringify(toast));
                    });
                }
            }
            else {
                _this.load = 0;
                for (var r = 0; r < res.length; r++) {
                    var date_fr = res[r].date.charAt(8) + res[r].date.charAt(9) + "/" + res[r].date.charAt(5) + res[r].date.charAt(6) +
                        "/" + res[r].date.charAt(0) + res[r].date.charAt(1) + res[r].date.charAt(2) + res[r].date.charAt(3);
                    res[r].date_fr = date_fr;
                    _this.listAds.push(res[r]);
                    _this.listAdsSorted.push(res[r]);
                    _this.http.post(_this.globals.variables.urls.addViewAd, {
                        "id": res[r].id
                    }, {})
                        .then(function (res) {
                        console.log("Adding view result");
                        console.log(JSON.stringify(res.data));
                    }, function (error) {
                        console.log("Error when adding view to ad");
                        console.log(JSON.stringify(error));
                    });
                }
                if (infiniteScroll != null) {
                    console.log('Async operation has ended');
                    infiniteScroll.complete();
                }
                console.log("Getting user info (ad Author)");
            }
        }, function (error) {
            _this.load = 0;
            console.log(JSON.stringify(error));
        });
    };
    MesannoncesPage.prototype.showDetails = function (ad) {
        this.addAsViewed(ad);
        var adPage = __WEBPACK_IMPORTED_MODULE_5__annonce_details_annonce_details__["a" /* AnnonceDetailsPage */];
        this.navCtrl.push(adPage, {
            user: this.user,
            ad: ad
        });
    };
    MesannoncesPage.prototype.doInfinite = function (infiniteScroll) {
        console.log('Begin async operation');
        this.paging += 1;
        if (this.proximite == 1) {
            this.getListAdsByGeolocation(infiniteScroll);
        }
        else {
            this.getListAds(infiniteScroll);
        }
    };
    MesannoncesPage.prototype.getUserPosition = function () {
        var _this = this;
        console.log("Getting position");
        GPSLocation.getCurrentPosition(function (position) {
            console.log("Resultat du GPS");
            console.log(JSON.stringify(position));
            var pos = position.coords.latitude + ',' + position.coords.longitude;
            var lat = parseFloat(position.coords.latitude);
            var lng = parseFloat(position.coords.longitude);
            _this.userPos = {
                lat: lat,
                lng: lng
            };
        }, function (error) {
            console.log("Erreur du GPS");
            console.log(JSON.stringify(error));
            var alert = _this.alertCtrl.create({
                title: 'Information',
                subTitle: 'Activer votre GPS, SVP.',
                buttons: ['Ok']
            });
            alert.present();
        });
    };
    MesannoncesPage.prototype.watchMyPosition = function () {
        var _this = this;
        console.log("Watching position");
        GPSLocation.watchPosition(function (position) {
            console.log("Resultat du GPS");
            console.log(JSON.stringify(position));
            var pos = position.coords.latitude + ',' + position.coords.longitude;
            var lat = parseFloat(position.coords.latitude);
            var lng = parseFloat(position.coords.longitude);
            _this.userPos = {
                lat: lat,
                lng: lng
            };
        }, function (error) {
            console.log("Erreur du GPS");
            console.log(JSON.stringify(error));
            var alert = _this.alertCtrl.create({
                title: 'Information',
                subTitle: 'Activer votre GPS, SVP.',
                buttons: ['Ok']
            });
            alert.present();
        });
    };
    MesannoncesPage.prototype.deleteMarkers = function () {
        for (var i = 0; i < this.markers.length; i++) {
            this.markers[i].setMap(null);
        }
        this.markers = [];
    };
    MesannoncesPage.prototype.confirmSupAd = function (ad) {
        var _this = this;
        this.displayPopover("popoveradu" + ad.id);
        var alert = this.alertCtrl.create({
            title: "Confirmation ",
            message: "Voulez-vous vraiment supprimer cette annonce ?",
            buttons: [
                {
                    text: "Non",
                    role: "cancel",
                    handler: function () {
                        //
                    }
                },
                {
                    text: "Oui",
                    handler: function () {
                        _this.supAd(ad);
                    }
                }
            ]
        });
        alert.present();
    };
    MesannoncesPage.prototype.supAd = function (ad) {
        var _this = this;
        // document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay")
        // document.getElementById(this.displayedPopoverID).classList.add("popoverhide")
        // document.getElementById(this.displayedPopoverID).style.display = "none"
        this.displayPopover("popoveradu" + ad.id);
        this.http.post(this.globals.variables.urls.supAd, {
            "ad_id": "" + ad.id,
            "user_id": "" + (this.user.id_User != null ? this.user.id_User : this.user.id)
        }, {})
            .then(function (resp) {
            console.log(JSON.stringify(resp));
            var res = JSON.parse(resp.data);
            _this.displayedPopoverID = "";
            if (res.status == "ok") {
                _this.toast.show("Annonce supprimée", "2000", "bottom")
                    .subscribe(function (t) {
                    console.log(JSON.stringify(t));
                });
                for (var c = 0; c < _this.listAds.length; c++) {
                    if (ad.id == _this.listAds[c].id) {
                        _this.listAds.splice(c, 1);
                        break;
                    }
                }
                for (var c = 0; c < _this.listAdsSorted.length; c++) {
                    if (ad.id == _this.listAdsSorted[c].id) {
                        _this.listAdsSorted.splice(c, 1);
                        break;
                    }
                }
            }
            else {
                _this.toast.show("Erreur de suppression", "2000", "bottom")
                    .subscribe(function (t) {
                    console.log(JSON.stringify(t));
                });
            }
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    MesannoncesPage.prototype.showEditAd = function (ad) {
        var _this = this;
        this.displayPopover("popoveradu" + ad.id);
        var upPage = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_17__annonce_add2_annonce_add2__["a" /* AnnonceAdd2Page */], {
            user: this.user,
            listCat: this.listCat,
            sourcePage: "mesads",
            source: "update",
            adtoup: ad
        });
        upPage.onDidDismiss(function (data) {
            _this.platform.registerBackButtonAction(function () {
                _this.navCtrl.pop();
            });
            _this.load = 1;
            _this.listAds = [];
            _this.listAdsSorted = [];
            _this.paging = 0;
            _this.getListAds(null);
        });
        upPage.present();
    };
    MesannoncesPage.prototype.goToHome = function () {
        var adPage = __WEBPACK_IMPORTED_MODULE_6__home_home__["a" /* HomePage */];
        this.navCtrl.setRoot(adPage, {
            user: this.user
        }, {
            animate: true
        });
    };
    MesannoncesPage.prototype.shareViaApp = function (faq) {
        var _this = this;
        console.log("URL :::: " + faq.url);
        var file = [];
        var bodyText = "";
        var link = "";
        bodyText += "";
        var perma_link = faq.url;
        bodyText += faq.author_infos.pseudo + " a partagé : \n";
        bodyText += faq.no_html_description;
        if (faq.ad_image_1 != null && faq.ad_image_1 != '') {
            file.push(faq.ad_image_1);
        }
        if (faq.ad_image_2 != null && faq.ad_image_2 != '') {
            file.push(faq.ad_image_2);
        }
        if (faq.ad_image_3 != null && faq.ad_image_3 != '') {
            file.push(faq.ad_image_3);
        }
        if (faq.ad_image_4 != null && faq.ad_image_4 != '') {
            file.push(faq.ad_image_4);
        }
        var shareModal = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_20__sharemodal_sharemodal__["a" /* SharemodalPage */], {
            file: file,
            bodyText: bodyText,
            link: link,
            perma_link: perma_link
        });
        shareModal.onDidDismiss(function (data) {
            _this.platform.registerBackButtonAction(function () {
                _this.navCtrl.pop();
            });
            console.log("Result from sharing : ");
            console.log(JSON.stringify(data));
            if (data.shared) {
                for (var u = 0; u < _this.listAdsSorted.length; u++) {
                    if (_this.listAdsSorted[u].id == faq.id) {
                        _this.listAdsSorted[u].share_count = parseInt(_this.listAdsSorted[u].share_count) + 1;
                        _this.listAdsSorted[u].user_shared = 1;
                        // this.toast.show("Vous avez partagé cette annonce", "2000", "bottom").subscribe(
                        //   toast => {
                        //     console.log(toast);
                        //   }
                        // );
                    }
                }
                _this.http.post(_this.globals.variables.urls.addToShare, {
                    "user_id": _this.user.id_User != null ? _this.user.id_User : _this.user.id,
                    "post_id": faq.id
                }, {})
                    .then(function (data) {
                    var res = JSON.parse(data.data);
                    console.log(JSON.stringify(res));
                    if (res.status == "ok") {
                    }
                    else {
                        console.log(JSON.stringify(res));
                    }
                }, function (error) {
                    console.log(JSON.stringify(error));
                });
            }
        });
        shareModal.present();
    };
    MesannoncesPage.prototype.share = function (ad) {
        var _this = this;
        var file = [];
        if (ad.ad_image_1 != null && ad.ad_image_1 != '') {
            file.push(ad.ad_image_1);
        }
        if (ad.ad_image_2 != null && ad.ad_image_2 != '') {
            file.push(ad.ad_image_2);
        }
        if (ad.ad_image_3 != null && ad.ad_image_3 != '') {
            file.push(ad.ad_image_3);
        }
        if (ad.ad_image_4 != null && ad.ad_image_4 != '') {
            file.push(ad.ad_image_4);
        }
        this.socialSharing.share(ad.description, ad.title, file, '')
            .then(function (data) {
            console.log("Share success");
            console.log(JSON.stringify(data));
            _this.http.post(_this.globals.variables.urls.addToShare, {
                "user_id": _this.user.id_User != null ? _this.user.id_User : _this.user.id,
                "post_id": ad.id
            }, {})
                .then(function (data) {
                var res = JSON.parse(data.data);
                console.log(JSON.stringify(res));
                if (res.status == "ok") {
                    for (var u = 0; u < _this.listAdsSorted.length; u++) {
                        if (_this.listAdsSorted[u].id == ad.id) {
                            _this.listAdsSorted[u].share_count = parseInt(_this.listAdsSorted[u].share_count) + 1;
                            _this.listAdsSorted[u].user_shared = 1;
                            _this.toast.show("Vous avez partagé cette annonce", "2000", "bottom").subscribe(function (toast) {
                                console.log(toast);
                            });
                        }
                    }
                }
                else {
                    console.log(JSON.stringify(res));
                }
            }, function (error) {
                console.log(JSON.stringify(error));
            });
        }, function (error) {
            console.log("Share error");
            console.log(JSON.stringify(error));
        });
    };
    MesannoncesPage.prototype.addToFavorite = function (ad) {
        var _this = this;
        // this.displayPopover("popoveradu"+ ad.id)
        this.http.post(this.globals.variables.urls.addFavorite, {
            "user_id": this.user.id_User != null ? this.user.id_User : this.user.id,
            "post_id": ad.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log(JSON.stringify(res));
            if (res.status == "ok") {
                // for (let u = 0; u < this.listAdsSorted.length; u++) {
                if (ad.user_favorite == 1) {
                    ad.favorite_count = parseInt(ad.favorite_count) - 1;
                    ad.user_favorite = 0;
                    _this.toast.show("Vous avez annulé votre \"J'aime\"", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                    return;
                }
                else if (ad.user_favorite == 0) {
                    ad.favorite_count = parseInt(ad.favorite_count) + 1;
                    ad.user_favorite = 1;
                    _this.toast.show("Vous avez aimé cette annonce", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                    return;
                }
                // }
            }
            else {
                console.log(JSON.stringify(res));
            }
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    MesannoncesPage.prototype.displayPopover = function (popoverid) {
        var classL = document.getElementById(popoverid).classList.toString();
        console.log(classL);
        console.log(classL.indexOf("popoverdisplay"));
        if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") === -1 && this.displayedPopoverID == "") {
            console.log("=====///===Displayed ", popoverid);
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") === -1 && this.displayedPopoverID != "") {
            console.log("=====///===Displayed ", popoverid);
            document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay");
            document.getElementById(this.displayedPopoverID).classList.add("popoverhide");
            document.getElementById(this.displayedPopoverID).style.display = "none";
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") !== -1 && classL.indexOf("popoverhide") === -1 && this.displayedPopoverID == popoverid) {
            console.log("=====///===Hiden ", popoverid);
            document.getElementById(popoverid).classList.remove("popoverdisplay");
            document.getElementById(popoverid).classList.add("popoverhide");
            document.getElementById(popoverid).style.display = "none";
            this.displayedPopoverID = "";
            console.log("=====///===Hiden ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") !== -1 && this.displayedPopoverID != popoverid && this.displayedPopoverID != "") {
            console.log("=====///===Displayed Other : => ", popoverid);
            document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay");
            document.getElementById(this.displayedPopoverID).classList.add("popoverhide");
            document.getElementById(this.displayedPopoverID).style.display = "none";
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.remove("popoverhide");
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed Other : => ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") !== -1 && this.displayedPopoverID == "") {
            console.log("=====///===Displayed Once : => ", popoverid);
            document.getElementById(popoverid).classList.remove("popoverhide");
            document.getElementById(popoverid).classList.remove("popoverdisplay");
            document.getElementById(popoverid).style.display = "block";
            document.getElementById(popoverid).classList.add("popoverdisplay");
            this.displayedPopoverID = popoverid;
            console.log("=====///===Displayed Once : => ", popoverid);
        }
        else if (classL.indexOf("popoverdisplay") !== -1 && this.displayedPopoverID == popoverid) {
            // this.displayHide()
        }
    };
    MesannoncesPage.prototype.addToFav = function (ad, iconItemID) {
        var _this = this;
        var selectedItem = document.getElementById(iconItemID);
        selectedItem.classList.add("fadeDown");
        selectedItem.style.opacity = "0.2";
        this.http.post(this.globals.variables.urls.addLike, {
            user_id: this.user.id_User != null ? this.user.id_User : this.user.id,
            post_id: ad.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log("Resultat du serveur");
            console.log(JSON.stringify(res));
            selectedItem.classList.remove("fadeDown");
            selectedItem.style.opacity = "1";
            document.getElementById(_this.displayedPopoverID).classList.remove("popoverdisplay");
            document.getElementById(_this.displayedPopoverID).classList.add("popoverhide");
            document.getElementById(_this.displayedPopoverID).style.display = "none";
            _this.displayedPopoverID = "";
            if (res.status == "ok") {
                if (ad.user_like == 0) {
                    ad.user_like = 1;
                    _this.toast.show("Ajouté dans vos favoris", "2000", "bottom")
                        .subscribe(function (t) {
                        console.log(JSON.stringify(t));
                    });
                }
                else if (ad.user_like == 1) {
                    ad.user_like = 0;
                    _this.toast.show("Supprimé de vos favoris", "2000", "bottom")
                        .subscribe(function (t) {
                        console.log(JSON.stringify(t));
                    });
                }
            }
            else {
                _this.toast.show("Erreur lors d'ajout dans vos favoris", "2000", "bottom")
                    .subscribe(function (t) {
                    console.log(JSON.stringify(t));
                });
            }
        }, function (error) {
            console.log("Erreur d'acces au serveur");
        });
    };
    MesannoncesPage.prototype.report = function (ad, iconItemID) {
        var _this = this;
        this.displayPopover("popoveradu" + ad.id);
        var selectedItem = document.getElementById(iconItemID);
        selectedItem.classList.add("fadeDown");
        selectedItem.style.opacity = "0.2";
        this.http.post(this.globals.variables.urls.repportFaQ, {
            "user_id": this.user.id_User != null ? this.user.id_User : this.user.id,
            "post_id": ad.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log(JSON.stringify(res));
            if (res.status == "ok") {
                if (ad.user_report == 1) {
                    ad.user_report = 0;
                    _this.toast.show("Votre signalisation a été annulée", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
                else {
                    ad.user_report = 1;
                    _this.toast.show("Vous avez signalé ce partage", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
            }
            else {
                console.log(JSON.stringify(res));
                _this.toast.show("Vous avez déjà signalé ce partage", "2000", "bottom").subscribe(function (toast) {
                    console.log(toast);
                });
            }
            selectedItem.classList.remove("fadeDown");
            selectedItem.style.opacity = "1";
            // document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay")
            // document.getElementById(this.displayedPopoverID).classList.add("popoverhide")
            // document.getElementById(this.displayedPopoverID).style.display = "none"
            // this.displayedPopoverID = ""
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    MesannoncesPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-mesannonces',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/mesannonces/mesannonces.html"*/'<ion-content class="container">\n\n  <ion-row ion-fixed class="load-ctn" id="load" *ngIf="load == 1">\n    <ion-spinner class="loading-custom" name="crescent" color="vert_logo"></ion-spinner>\n  </ion-row>\n\n  <ion-row ion-fixed class="header">\n\n    <ion-col (click)="goToHome()">\n      <ion-label class="da">\n        <img class="logo" src="assets/imgs/da_image/logo-dentart.png">\n        <span class="bold">Dent</span><span class="fine">Art</span>\n      </ion-label>\n    </ion-col>\n\n  </ion-row>\n\n  <div class="to-bottom">\n\n    <ion-refresher (ionRefresh)="refresh($event)">\n      <ion-refresher-content pullingIcon="arrow-dropdown" pullingText="Tirez pour rafraîchir" refreshingSpinner="none"\n        refreshingText="Rechargement ..." pullMin="120" pullMax="200" class="refresher">\n      </ion-refresher-content>\n    </ion-refresher>\n\n\n    <div class="card-shape">\n\n      <ion-row class="no-ad-ctn" *ngIf="listAdsSorted.length <= 0">\n        <ion-label class="no-ad-lab">\n          <!-- Vous n\'avez aucune annonce publiée -->\n        </ion-label>\n      </ion-row>\n\n      <div class="theBlock" *ngFor="let ad of listAdsSorted">\n        <div class="row1">\n          <div class="row1-col1" (click)="showDetails(ad);">\n            <div class="user-avatar-ctn">\n              <img class="user-avatar"\n                src="{{ad.author_infos.avatar != \'\' ? ad.author_infos.avatar : \'assets/imgs/avatar/avatar_f.png\'}}" />\n            </div>\n            <div class="user-info-cth">\n              <div class="user-pseudo">\n                {{ad.author_infos.pseudo}}\n              </div>\n              <div class="user-job">\n                {{ad.author_infos.job}} - {{ad.author_infos.address}}\n              </div>\n              <div class="post-date">\n                {{ad.date_fr}}\n              </div>\n            </div>\n          </div>\n          <div class="row1-col2">\n\n            <div class="drop-down-icon" (click)="displayPopover(\'popoveradu\'+ad.id)">\n              <div class="left-bar"></div>\n              <div class="right-bar"></div>\n            </div>\n            <div class="popover-ctn" id="popoveradu{{ad.id}}">\n              <div class="popover-tsingy">\n                <div class="half-transparent"></div>\n              </div>\n              <div class="list-ctn">\n                <div class="option-item" id="faviconadu{{ad.id}}" (click)="addToFav(ad, \'faviconadu\'+ad.id)">\n                  <div class="op-it-icon">\n                    <img class="it-icon" src="../../assets/icon/heart-green-blue.svg" />\n                  </div>\n                  <div class="item-text">Favoris</div>\n                </div>\n                <div class="sep-popover"></div>\n                <div class="option-item" id="repiconadu{{ad.id}}" (click)="report(ad, \'repiconadu\'+ad.id)">\n                  <div class="op-it-icon">\n                    <img class="it-icon" src="../../assets/icon/warning.svg" />\n                  </div>\n                  <div class="item-text">Signaler</div>\n                </div>\n\n                <div *ngIf="user_id == ad.author_id">\n                  <div class="sep-popover"></div>\n                  <div class="option-item" id="modiconadu{{ad.id}}" (click)="showEditAd(ad)">\n                    <div class="op-it-icon">\n                      <img class="it-icon" src="../../assets/icon/edit-green.svg" />\n                    </div>\n                    <div class="item-text">Modifier</div>\n                  </div>\n                </div>\n\n                <div *ngIf="user_id == ad.author_id">\n                  <div class="sep-popover"></div>\n                  <div class="option-item" id="supiconadu{{ad.id}}" (click)="supAd(ad)">\n                    <div class="op-it-icon">\n                      <img class="it-icon" src="../../assets/icon/garbage.svg" />\n                    </div>\n                    <div class="item-text">Supprimer</div>\n                  </div>\n                </div>\n\n\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class="row-text" (click)="showDetails(ad);">\n          <div class="faq-ttl" [innerHtml]="ad.category.name"></div>\n          <div class="faq-desc" [innerHtml]="ad.char70"></div>\n          <div class="more" *ngIf="ad.char70.length > 69">Voir plus ...</div>\n        </div>\n        <div *ngIf="ad.images_count > 0" class="row2" (click)="showDetails(ad);"\n          [style.background-image]="\'url(\'+(ad.ad_image_1 != null ? ad.ad_image_1 : \'../../assets/imgs/da_image/Rectangle-05.jpg\')+\')\'">\n          <div class="photo-badge">\n            {{ad.images_count}}\n            <img class="nb-photo-icon" src="../../assets/icon/photo-camera-white.svg" />\n          </div>\n        </div>\n        <div class="row3">\n          <div class="col-foot" (click)="addToFavorite(ad);">\n            <div class="foot-badge" *ngIf="ad.favorite_count == null">0</div>\n            <div class="foot-badge" *ngIf="ad.favorite_count < 100">{{ad.favorite_count}}</div>\n            <div class="foot-badge" *ngIf="ad.favorite_count >= 100">99+</div>\n            <div class="foot-block-icon-ctn">\n              <img class="foot-block-icon"\n                src="{{ad.user_favorite != 0 && ad.user_favorite != \'0\' ? \'../../assets/icon/like-fin-green.svg\' : \'../../assets/icon/like-fin-blue.svg\' }}" />\n            </div>\n            <div class="foot-label">J\'aime</div>\n          </div>\n          <div class="col-foot" (click)="shareViaApp(ad);">\n            <div class="foot-badge" *ngIf="ad.share_count == null">0</div>\n            <div class="foot-badge" *ngIf="ad.share_count < 100">{{ad.share_count}}</div>\n            <div class="foot-badge" *ngIf="ad.share_count >= 100">99+</div>\n            <div class="foot-block-icon-ctn">\n              <img class="foot-block-icon" src="../../assets/icon/share-blue.svg" />\n            </div>\n            <div class="foot-label">Partager</div>\n          </div>\n        </div>\n      </div>\n\n      <ion-infinite-scroll (ionInfinite)="doInfinite($event)">\n        <ion-infinite-scroll-content></ion-infinite-scroll-content>\n      </ion-infinite-scroll>\n\n    </div>\n\n  </div>\n\n  <ion-row ion-fixed class="tab-faq">\n    <ion-col (click)="openMenu()">\n      <img ion-fixed class="btn-menu" src="../../assets/icon/menu-button.svg">\n    </ion-col>\n    <ion-col></ion-col>\n    <ion-col (click)="goHome()">\n      <img class="btn-home" src="../../assets/icon/home-7.svg">\n    </ion-col>\n    <ion-col></ion-col>\n    <ion-col></ion-col>\n  </ion-row>\n\n</ion-content>'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/mesannonces/mesannonces.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_4__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["f" /* Events */],
            __WEBPACK_IMPORTED_MODULE_13__ionic_native_toast__["a" /* Toast */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_14__ionic_native_geolocation__["a" /* Geolocation */],
            __WEBPACK_IMPORTED_MODULE_15__ionic_native_diagnostic__["a" /* Diagnostic */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_18__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_19__ionic_native_social_sharing__["a" /* SocialSharing */]])
    ], MesannoncesPage);
    return MesannoncesPage;
}());

//# sourceMappingURL=mesannonces.js.map

/***/ }),

/***/ 267:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CertphotoPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_file_transfer__ = __webpack_require__(122);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_file__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_globals_globals__ = __webpack_require__(7);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the CertphotoPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var CertphotoPage = /** @class */ (function () {
    function CertphotoPage(navCtrl, navParams, file, ptf, transfer, alertCtrl, viewCtrl, http, globals) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.file = file;
        this.ptf = ptf;
        this.transfer = transfer;
        this.alertCtrl = alertCtrl;
        this.viewCtrl = viewCtrl;
        this.http = http;
        this.globals = globals;
        this.listImage = [];
        this.user = {};
        this.user = navParams.get('user');
        var baseURL = file.externalRootDirectory;
        console.log(baseURL);
        var extURL = file.externalDataDirectory;
        console.log(extURL);
        file.checkDir(baseURL, 'Pictures/')
            .then(function (res) {
            console.log('Resolves ');
            console.log(JSON.stringify(res));
        })
            .catch(function (error) {
            console.log(JSON.stringify(error));
            file.createDir(baseURL, 'Pictures/', false)
                .then(function (res) {
                //console.log(JSON.stringify(res));
            })
                .catch(function (error) {
                console.log(JSON.stringify(error));
            });
        });
    }
    CertphotoPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad CertphotoPage');
        this.getImagesGalerie();
    };
    CertphotoPage.prototype.selectImage = function (img) {
        this.selectedImg = img;
    };
    CertphotoPage.prototype.getImagesGalerie = function () {
        var _this = this;
        var baseURL = this.file.externalRootDirectory;
        console.log(baseURL);
        var extURL = this.file.externalDataDirectory;
        console.log(extURL);
        this.file.listDir(baseURL, 'Pictures/')
            .then(function (listing) {
            var idImg = 0;
            listing.forEach(function (value) {
                console.log(JSON.stringify(value));
                if (value.isFile) {
                    _this.file.readAsDataURL(baseURL + 'Pictures', value.name)
                        .then(function (url) {
                        var img = {
                            id: idImg,
                            url: url,
                            data: value
                        };
                        _this.listImage.push(img);
                        idImg++;
                        _this.selectedImg = _this.listImage[0];
                    })
                        .catch(function (error) {
                        console.log(JSON.stringify(error));
                    });
                }
            });
        })
            .catch(function (ex) {
            console.log('error');
            console.log(JSON.stringify(ex));
        });
    };
    CertphotoPage.prototype.fermer = function () {
        this.navCtrl.pop();
    };
    CertphotoPage.prototype.fermerDismiss = function () {
        this.viewCtrl.dismiss();
    };
    CertphotoPage.prototype.dismiss = function () {
        //this.viewCtrl.dismiss(this.selectedImg);
    };
    CertphotoPage.prototype.uploadCertPhoto = function () {
        var _this = this;
        //certificate
        this.http.uploadFile(this.globals.variables.urls.certificate, {
            "user_id": "" + this.user.id_User != null ? this.user.id_User : this.user.id
        }, {}, this.selectedImg.data.nativeURL, 'file')
            .then(function (data) {
            var res = JSON.parse(data.data);
            if (res.status == "OK") {
                var alert_1 = _this.alertCtrl.create({
                    title: 'Information !',
                    message: 'Votre photo a été télécharger',
                    buttons: ['Ok']
                });
                alert_1.present();
                _this.viewCtrl.dismiss({
                    etat: "uploaded"
                });
            }
            console.log(JSON.stringify(data.data));
        }, function (error) {
            var alert = _this.alertCtrl.create({
                title: 'Information !',
                message: 'Une erreur c\'est produit lors de la téléchargement',
                buttons: ['Ok']
            });
            alert.present();
            _this.viewCtrl.dismiss({
                etat: "error"
            });
            console.log(JSON.stringify(error));
        });
    };
    CertphotoPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-certphoto',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/certphoto/certphoto.html"*/'<ion-content class="container">\n\n  <ion-grid class="ctnnn">\n    <ion-row class="top-margin"></ion-row>\n\n    <ion-row class="header">\n      <ion-icon class="ion-md-close back-gc" color="bleu" (click)="fermer();"></ion-icon>\n\n      <ion-label class="gc" (click)="uploadCertPhoto();">\n        <span class="fw-faq">Continuer</span>\n        <ion-icon class="ion-ios-arrow-forward forward" color="bleu"></ion-icon>\n      </ion-label>\n\n    </ion-row>\n\n    <ion-row *ngIf="selectedImg != null" class="ctn-selected-img">\n      <img src="{{selectedImg.url}}" class="img-sd" />\n    </ion-row>\n\n    <ion-row class="img-ctn">\n      <img *ngFor="let img of listImage" src="{{img.url}}" class="img-to" (click)="selectImage(img);" />\n    </ion-row>\n\n\n  </ion-grid>\n\n  <ion-row class="tab-faq">\n    <ion-col>\n      <ion-label>Galerie</ion-label>\n    </ion-col>\n    <ion-col>\n      <ion-label>Photo</ion-label>\n    </ion-col>\n  </ion-row>\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/certphoto/certphoto.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_file__["a" /* File */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_file_transfer__["a" /* FileTransfer */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_5__providers_globals_globals__["a" /* GlobalsProvider */]])
    ], CertphotoPage);
    return CertphotoPage;
}());

//# sourceMappingURL=certphoto.js.map

/***/ }),

/***/ 268:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FaqupdatePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_file__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__faqfilter_faqfilter__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__faqadd1_faqadd1__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__faqadd2_faqadd2__ = __webpack_require__(70);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ionic_native_toast__ = __webpack_require__(14);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









/**
 * Generated class for the FaqupdatePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var FaqupdatePage = /** @class */ (function () {
    function FaqupdatePage(navCtrl, navParams, modalCtrl, file, http, globals, alertCtrl, viewCtrl, toast, platform) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.modalCtrl = modalCtrl;
        this.file = file;
        this.http = http;
        this.globals = globals;
        this.alertCtrl = alertCtrl;
        this.viewCtrl = viewCtrl;
        this.toast = toast;
        this.platform = platform;
        this.load = 0;
        this.descRows = 5;
        this.imgs = [];
        this.faq_title = '';
        this.faq_theme = '';
        this.faq_description = '';
        this.listFaQTheme = [];
        this.selectedTheme = {};
        this.faq = {};
        this.faq = navParams.get('faq');
        this.user = navParams.get('user');
        this.listFaQTheme = navParams.get('theme');
        //console.log(JSON.stringify(img1));
        //this.imgs.push(img1);
        //this.getListTheme();
        if (this.faq.faq.faq_image_1 != null && this.faq.faq.faq_image_1 != '') {
            var img = {
                id: "",
                url: this.faq.faq.faq_image_1,
                data: ""
            };
            this.imgs.push(img);
        }
        if (this.faq.faq.faq_image_2 != null && this.faq.faq.faq_image_2 != '') {
            var img = {
                id: "",
                url: this.faq.faq.faq_image_1,
                data: ""
            };
            this.imgs.push(img);
        }
        if (this.faq.faq.faq_image_3 != null && this.faq.faq.faq_image_3 != '') {
            var img = {
                id: "",
                url: this.faq.faq.faq_image_1,
                data: ""
            };
            this.imgs.push(img);
        }
        if (this.faq.faq.faq_image_4 != null && this.faq.faq.faq_image_4 != '') {
            var img = {
                id: "",
                url: this.faq.faq.faq_image_1,
                data: ""
            };
            this.imgs.push(img);
        }
        this.load = 0;
        for (var i = 0; i < this.listFaQTheme.length; i++) {
            if (this.listFaQTheme[i].id == this.faq.theme.id) {
                this.selectedTheme = this.listFaQTheme[i];
            }
        }
        this.faq_title = this.faq.faq.title;
        this.faq_description = this.faq.faq.description;
        platform.registerBackButtonAction(function () {
            _this.viewCtrl.dismiss(_this.faq);
        });
    }
    FaqupdatePage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad FaqupdatePage');
        this.showRPC();
    };
    FaqupdatePage.prototype.updateFaQ = function () {
        //updateFaQ,  == faq_id, user_id, faq_description, faq_theme
    };
    FaqupdatePage.prototype.showRPC = function () {
        if (this.user.understand == '' || this.user.understand == '0') {
            var rpc = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_7__faqadd2_faqadd2__["a" /* Faqadd2Page */], {
                user: this.user
            });
            rpc.onDidDismiss(function (data) {
                console.log(JSON.stringify(data));
            });
            rpc.present();
        }
    };
    FaqupdatePage.prototype.addPhoto = function (img) {
        var _this = this;
        var newphoto = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_6__faqadd1_faqadd1__["a" /* Faqadd1Page */], {
            source: 2
        });
        if (img == 0 && this.imgs.length >= 1) {
            this.imgs.splice(0, 1);
            //this.imgs = this.imgs.values();
        }
        else if (img == 1 && this.imgs.length >= 2) {
            this.imgs.splice(1, 1);
            //this.imgs = this.imgs.values();
        }
        else if (img == 2 && this.imgs.length >= 3) {
            this.imgs.splice(2, 1);
            //this.imgs = this.imgs.values();
        }
        else if (img == 3 && this.imgs.length >= 4) {
            this.imgs.splice(3, 1);
            //this.imgs = this.imgs.values();
        }
        else {
            newphoto.onDidDismiss(function (data) {
                if (data != null)
                    _this.imgs.push(data);
                console.log(JSON.stringify(data));
            });
            newphoto.present();
        }
    };
    FaqupdatePage.prototype.annulerClick = function () {
        this.viewCtrl.dismiss(this.faq);
    };
    FaqupdatePage.prototype.publierUpdate = function () {
        var _this = this;
        //faq_id, user_id, faq_description, faq_theme
        this.load = 1;
        if (this.selectedTheme.id != null && this.faq_description != '') {
            this.http.post(this.globals.variables.urls.updateFaQ, {
                "faq_id": this.faq.faq.id,
                "user_id": this.user.id_User != null ? this.user.id_User : this.user.id,
                "faq_title": this.faq_title,
                "faq_theme": this.selectedTheme.id,
                "faq_description": this.faq_description
            }, {})
                .then(function (data) {
                var id_faq = JSON.parse(data.data).id;
                var error = JSON.parse(data.data).error;
                if (id_faq != '') {
                    _this.load = 0;
                    _this.toast.show("Partage à jour", "3000", "bottom")
                        .subscribe(function (t) {
                        console.log(JSON.stringify(t));
                    });
                    _this.http.get(_this.globals.variables.urls.getSingleFaQ + "?faq_id=" + _this.faq.faq.id, {}, {})
                        .then(function (data) {
                        var faqUp = JSON.parse(data.data);
                        console.log("Single faq");
                        console.log(JSON.stringify(data.data));
                        if (faqUp.error == null || faqUp.error == '') {
                            _this.viewCtrl.dismiss({
                                error: faqUp.error
                            });
                        }
                        else {
                            _this.viewCtrl.dismiss({
                                faq: faqUp
                            });
                        }
                    }, function (error) {
                        console.log("Error getting single faq");
                        console.log(JSON.stringify(error));
                        _this.viewCtrl.dismiss({
                            error: "Erreur d'accès au serveur"
                        });
                    });
                }
                else {
                    _this.load = 0;
                    _this.toast.show(error, "3000", "bottom")
                        .subscribe(function (t) {
                        console.log(JSON.stringify(t));
                    });
                }
                console.log(JSON.stringify(data.data));
            }, function (error) {
                _this.load = 0;
                var alert = _this.alertCtrl.create({
                    title: 'Information !',
                    subTitle: 'Une erruer c\'est produit !',
                    buttons: ['OK']
                });
                alert.present();
                console.log(JSON.stringify(error));
            });
        }
        else if (this.selectedTheme.id == null) {
            this.load = 0;
            var alert_1 = this.alertCtrl.create({
                title: 'Information !',
                subTitle: 'Choisir un tèhme !',
                buttons: ['OK']
            });
            alert_1.present();
        }
        else if (this.faq_description == '' || this.faq_description == null) {
            this.load = 0;
            var alert_2 = this.alertCtrl.create({
                title: 'Information !',
                subTitle: 'Vueillez decrire votre partage !',
                buttons: ['OK']
            });
            alert_2.present();
        }
    };
    FaqupdatePage.prototype.changeTheme = function () {
        console.log(this.faq_theme);
    };
    FaqupdatePage.prototype.ChooseTheme = function () {
        var _this = this;
        var filter = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_5__faqfilter_faqfilter__["a" /* FaqfilterPage */], {
            user: this.user,
            theme: this.listFaQTheme,
            title: "Thèmes"
        });
        filter.onDidDismiss(function (data) {
            _this.selectedTheme = data;
            console.log("Selected theme :");
            console.log(_this.selectedTheme);
        });
        filter.present();
    };
    FaqupdatePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-faqupdate',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/faqupdate/faqupdate.html"*/'<ion-content>\n\n    <div ion-fixed class="load-ctn" id="load" *ngIf="load == 1">\n      <img class="load-img" src="../../assets/icon/Spinner-load.svg" />\n    </div>\n  \n    <ion-grid class="container">\n  \n      <ion-row class="header">\n  \n        <ion-col class="col-cancel" (click)="annulerClick();">\n          <ion-label class="annuler">\n            <ion-icon class="ion-ios-arrow-back back-gc" color="white"></ion-icon>\n            <span class="back-faq">Annuler</span>\n          </ion-label>\n        </ion-col>\n  \n        <ion-col (click)="publierUpdate()">\n          <ion-label class="gc">\n            <span class="fw-faq">Publier</span>\n            <ion-icon class="ion-ios-arrow-forward forward" color="white"></ion-icon>\n          </ion-label>\n        </ion-col>\n  \n      </ion-row>\n  \n      <ion-row fixed class="faq-photo">\n        <ion-col>\n          <ion-row>\n            <ion-col (click)="addPhoto(0);">\n              <img class="img" *ngIf="imgs.length >= 1" src="{{imgs[0].url}}" alt="No image found" />\n              <img class="sup-icon" *ngIf="imgs.length >= 1" src="assets/imgs/da_image/waste-bin.png" />\n              <ion-row *ngIf="imgs.length < 1" class="alt-img">\n                <ion-icon name="md-add" class="icon-add" color="bleu"></ion-icon>\n              </ion-row>\n            </ion-col>\n            <ion-col (click)="addPhoto(1);">\n              <img class="img" *ngIf="imgs.length >= 2" src="{{imgs[1].url}}" alt="No image found" />\n              <img class="sup-icon" *ngIf="imgs.length >= 2" src="assets/imgs/da_image/waste-bin.png" />\n              <ion-row *ngIf="imgs.length < 2" class="alt-img">\n                <ion-icon name="md-add" class="icon-add" color="bleu"></ion-icon>\n              </ion-row>\n            </ion-col>\n            <ion-col (click)="addPhoto(2);">\n              <img class="img" *ngIf="imgs.length >= 3" src="{{imgs[2].url}}" />\n              <img class="sup-icon" *ngIf="imgs.length >= 3" src="assets/imgs/da_image/waste-bin.png" />\n              <ion-row *ngIf="imgs.length < 3" class="alt-img">\n                <ion-icon name="md-add" class="icon-add" color="bleu"></ion-icon>\n              </ion-row>\n            </ion-col>\n            <ion-col (click)="addPhoto(3);">\n              <img class="img" *ngIf="imgs.length >= 4" src="{{imgs[3].url}}" />\n              <img class="sup-icon" *ngIf="imgs.length >= 4" src="assets/imgs/da_image/waste-bin.png" />\n              <ion-row *ngIf="imgs.length < 4" class="alt-img">\n                <ion-icon name="md-add" class="icon-add" color="bleu"></ion-icon>\n              </ion-row>\n            </ion-col>\n          </ion-row>\n        </ion-col>\n      </ion-row>\n  \n      <ion-row class="sep"></ion-row>\n  \n      <ion-row class="ctn-faq-det">\n        <ion-col>\n  \n          <ion-row *ngIf="selectedTheme.id == null" class="img-ctn" (click)="ChooseTheme()">\n            <ion-label class="theme-txt">Th&#232;mes</ion-label>\n          </ion-row>\n  \n          <ion-row *ngIf="selectedTheme.id != null" class="img-ctn" (click)="ChooseTheme()">\n            <ion-label class="theme-txt">{{selectedTheme.name}}</ion-label>\n            <img class="check-icon" src="../../assets/imgs/da_image/Group.png" />\n          </ion-row>\n  \n          <ion-row class="ctn-faq-desc">\n            <ion-col>\n              <ion-textarea class="desc-faq" placeholder="Description" [(ngModel)]="faq_description" name="faq_description"\n                [attr.rows]="descRows"></ion-textarea>\n            </ion-col>\n          </ion-row>\n        </ion-col>\n      </ion-row>\n  \n    </ion-grid>\n  \n  </ion-content>\n  \n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/faqupdate/faqupdate.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_file__["a" /* File */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_3__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_8__ionic_native_toast__["a" /* Toast */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */]])
    ], FaqupdatePage);
    return FaqupdatePage;
}());

//# sourceMappingURL=faqupdate.js.map

/***/ }),

/***/ 269:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PaiementPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_paypal__ = __webpack_require__(123);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_globals_globals__ = __webpack_require__(7);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var PaiementPage = /** @class */ (function () {
    function PaiementPage(navCtrl, navParams, viewCtrl, payPal, globals) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.viewCtrl = viewCtrl;
        this.payPal = payPal;
        this.globals = globals;
        this.listCat = [
            {
                id: 0,
                name: 'PayPal'
            },
            {
                id: 1,
                name: 'Stripe'
            }
        ];
        this.cat = {};
        this.title = 'Payement';
        this.CVC = "";
        this.expYear = "";
        this.expMonth = "";
        this.cardnumber = "";
        this.card_error = "";
        this.paypalinfo = "";
        this.boost = {};
        this.user = {};
        this.stripe = Stripe('pk_test_4NRojqtRojW0K5QmuKuqNkaG');
        this.boost = navParams.get('boost');
        this.user = navParams.get('user');
        console.log(JSON.stringify(this.cat));
    }
    PaiementPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad PaiementPage');
        this.mountStripeElement();
        document.getElementById('payment-form').style.opacity = '0';
    };
    PaiementPage.prototype.selectFilter = function (idBtn, idIcon, selectedCat) {
        for (var i = 0; i < this.listCat.length; i++) {
            document.getElementById('btn' + this.listCat[i].id).style.fontWeight = '100';
            document.getElementById('icon_btn_' + this.listCat[i].id).style.display = 'none';
        }
        document.getElementById(idIcon).style.display = 'inline';
        document.getElementById(idBtn).style.fontWeight = 'bold';
        this.cat = selectedCat;
        if (this.cat.id == 1) {
            document.getElementById('payment-form').style.opacity = '1';
        }
        else {
            document.getElementById('payment-form').style.opacity = '0';
        }
    };
    PaiementPage.prototype.dismiss = function () {
        this.viewCtrl.dismiss(this.cat);
    };
    PaiementPage.prototype.noFilter = function () {
        this.viewCtrl.dismiss(null);
    };
    PaiementPage.prototype.retour = function () {
        this.viewCtrl.dismiss({ id: "retour", slug: "", name: "" });
    };
    PaiementPage.prototype.pay = function () {
        var _this = this;
        if (this.cat.id == 0) {
            this.payPal.init({
                PayPalEnvironmentProduction: '',
                PayPalEnvironmentSandbox: 'AQjoei0s06vInLQlhaAOoTDmB-LUTUqPxIqiyBty8W78OnQwk8ejMrO4VnFb-YXdWmQS47NI-dFEaikP'
            }).then(function () {
                console.log("PayPal init OK");
                // Environments: PayPalEnvironmentNoNetwork, PayPalEnvironmentSandbox, PayPalEnvironmentProduction
                _this.payPal.prepareToRender('PayPalEnvironmentSandbox', new __WEBPACK_IMPORTED_MODULE_2__ionic_native_paypal__["b" /* PayPalConfiguration */]({})).then(function () {
                    console.log("Peparing config OK");
                    var point = /./;
                    var price = '';
                    if (point.test("" + _this.boost.prix)) {
                        price = '' + _this.boost.prix;
                    }
                    else
                        price = '' + _this.boost.prix + '.00';
                    var payment = new __WEBPACK_IMPORTED_MODULE_2__ionic_native_paypal__["c" /* PayPalPayment */](price, 'USD', 'Description', 'sale');
                    _this.payPal.renderSinglePaymentUI(payment).then(function (response) {
                        console.log("Payment OK");
                        console.log(JSON.stringify(response));
                        _this.viewCtrl.dismiss({
                            error: '',
                            status: 'OK'
                        });
                    }, function (error) {
                        // Error or render dialog closed without being successful
                        console.log(JSON.stringify(error));
                        console.log("Payment NON-OK");
                        _this.viewCtrl.dismiss({
                            error: 'Erreur lors du payement',
                            status: 'error'
                        });
                    });
                }, function () {
                    // Error in configuration
                    console.log("Config NON-OK");
                    _this.viewCtrl.dismiss({
                        error: 'Erreur de configuration PayPal',
                        status: 'error'
                    });
                });
            }, function () {
                // Error in initialization, maybe PayPal isn't supported or something else
                console.log("Init NON-OK");
                _this.viewCtrl.dismiss({
                    error: 'Erreur d\'initialisation de PayPal',
                    status: 'error'
                });
            });
        }
        else if (this.cat.id == 1) {
            this.createCardSource(this.card);
        }
    };
    PaiementPage.prototype.mountStripeElement = function () {
        var elements = this.stripe.elements();
        var style = {
            base: {
                // Add your base input styles here. For example:
                fontSize: '16px',
                color: "#32325d",
            }
        };
        // Create an instance of the card Element.
        this.card = elements.create('card', { style: style });
        // Add an instance of the card Element into the `card-element` <div>.
        this.card.mount('#card-element');
        this.card.addEventListener('change', function (event) {
            var displayError = document.getElementById('card-errors');
            if (event.error) {
                displayError.textContent = event.error.message;
            }
            else {
                displayError.textContent = '';
            }
        });
    };
    PaiementPage.prototype.createCardSource = function (card) {
        var point = /./;
        var price = '';
        if (point.test("" + this.boost.prix)) {
            price = '' + this.boost.prix;
        }
        else
            price = '' + this.boost.prix + '.00';
        var paymentRequest = this.stripe.paymentRequest({
            country: 'FR',
            currency: 'eur',
            total: {
                label: this.user.pseudo,
                amount: parseInt(price),
            },
            requestPayerName: true,
            requestPayerEmail: true,
        });
        var elements = this.stripe.elements();
        var prButton = elements.create('paymentRequestButton', {
            paymentRequest: paymentRequest,
        });
        //prButton.mount('#payment-request-button');
        paymentRequest.canMakePayment().then(function (result) {
            console.log("Resultat de canMakePayment");
            console.log(result);
            prButton.mount('#payment-request-button');
            if (result) {
                prButton.mount('#payment-request-button');
            }
            else {
                document.getElementById('payment-request-button').style.display = 'none';
            }
        });
    };
    PaiementPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-paiement',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/paiement/paiement.html"*/'<ion-content>\n\n  <div class="container">\n\n    <ion-grid>\n\n      <ion-row class="top-gc" (click)="retour();">\n        <ion-icon class="ion-ios-arrow-back back-gc" color="white"></ion-icon>\n        <ion-label class="gc">\n          {{title}}\n        </ion-label>\n      </ion-row>\n\n      <ion-row *ngFor="let cat of listCat" class="btn-ctn-left">\n        <button id="btn{{cat.id}}" ion-button class="btn-blue-gradient" (click)="selectFilter(\'btn\'+cat.id,\'icon_btn_\'+cat.id,cat);">\n          {{cat.name}}\n          <ion-icon id="icon_btn_{{cat.id}}" class="icon-checked" color="gris">\n            <img class="check-icon" src="../../assets/imgs/da_image/Group.png" />\n          </ion-icon>\n        </button>\n      </ion-row>\n\n    </ion-grid>\n\n    <form action="/charge" method="post" id="payment-form">\n      <div class="form-row">\n        <label for="card-element">\n          Credit or debit card\n        </label>\n        <div id="card-element">\n        </div>\n\n        <div id="card-errors" role="alert"></div>\n      </div>\n      \n    </form>\n\n    <div id="payment-request-button">\n    </div>\n\n    <ion-row class="bottom-annuler">\n      <button ion-button round class="btn-blue-gradient-round" (click)="pay();">Valider</button>\n    </ion-row>\n\n  </div>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/paiement/paiement.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_paypal__["a" /* PayPal */],
            __WEBPACK_IMPORTED_MODULE_3__providers_globals_globals__["a" /* GlobalsProvider */]])
    ], PaiementPage);
    return PaiementPage;
}());

//# sourceMappingURL=paiement.js.map

/***/ }),

/***/ 270:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ShareFbPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the ShareFbPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ShareFbPage = /** @class */ (function () {
    function ShareFbPage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
    }
    ShareFbPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ShareFbPage');
    };
    ShareFbPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-share-fb',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/share-fb/share-fb.html"*/'<ion-content class="pr">\n\n  <div>\n    <div>Changer de compte</div>\n    <div [innerHtml]="shareURL"></div>\n  </div>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/share-fb/share-fb.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */]])
    ], ShareFbPage);
    return ShareFbPage;
}());

//# sourceMappingURL=share-fb.js.map

/***/ }),

/***/ 271:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser_dynamic__ = __webpack_require__(272);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__app_module__ = __webpack_require__(293);


Object(__WEBPACK_IMPORTED_MODULE_0__angular_platform_browser_dynamic__["a" /* platformBrowserDynamic */])().bootstrapModule(__WEBPACK_IMPORTED_MODULE_1__app_module__["a" /* AppModule */]);
//# sourceMappingURL=main.js.map

/***/ }),

/***/ 293:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_splash_screen__ = __webpack_require__(265);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_status_bar__ = __webpack_require__(266);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_storage__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_file_path__ = __webpack_require__(346);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_background_mode__ = __webpack_require__(125);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ionic_native_android_permissions__ = __webpack_require__(77);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ionic_native_instagram__ = __webpack_require__(221);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__app_component__ = __webpack_require__(347);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__pages_home_home__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__pages_dentart_dentart__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__pages_createacc1_createacc1__ = __webpack_require__(149);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__pages_createacc2_createacc2__ = __webpack_require__(150);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__pages_createacc3_createacc3__ = __webpack_require__(151);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__pages_createacc4_createacc4__ = __webpack_require__(152);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__pages_generalcnd_generalcnd__ = __webpack_require__(69);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__pages_connexion_connexion__ = __webpack_require__(153);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__pages_recoverpasswd_recoverpasswd__ = __webpack_require__(154);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__pages_popupcert_popupcert__ = __webpack_require__(148);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__pages_faqcom_faqcom__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__pages_faqfilter_faqfilter__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__pages_faqadd1_faqadd1__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__pages_faqadd2_faqadd2__ = __webpack_require__(70);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__pages_faqadd3_faqadd3__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__pages_cropper_cropper__ = __webpack_require__(348);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__pages_cropper2_cropper2__ = __webpack_require__(222);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__pages_faqadd4annuler_faqadd4annuler__ = __webpack_require__(155);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__pages_annonces_annonces__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__pages_certphoto_certphoto__ = __webpack_require__(267);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__pages_annonce_add1_annonce_add1__ = __webpack_require__(156);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__pages_annonce_add2_annonce_add2__ = __webpack_require__(55);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__pages_annonce_cat_annonce_cat__ = __webpack_require__(90);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__pages_annonce_add_annuler_annonce_add_annuler__ = __webpack_require__(147);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__pages_annonce_details_annonce_details__ = __webpack_require__(46);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__pages_annonce_boost_annonce_boost__ = __webpack_require__(157);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__pages_menu_menu__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__pages_formations_formations__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__pages_formation_details_formation_details__ = __webpack_require__(91);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__pages_formation_popup_formation_popup__ = __webpack_require__(159);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__pages_a_savoir_a_savoir__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__pages_a_savoir_details_a_savoir_details__ = __webpack_require__(86);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_43__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_45__ionic_native_geolocation__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_46__ionic_native_file__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_47__ionic_native_file_transfer__ = __webpack_require__(122);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_48__pages_uprofil_uprofil__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_49__ionic_native_toast__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_50__ionic_native_network__ = __webpack_require__(80);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_51__pages_nonetwork_nonetwork__ = __webpack_require__(88);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_52__ionic_native_diagnostic__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_53__ionic_native_camera__ = __webpack_require__(79);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_54__ionic_native_image_resizer__ = __webpack_require__(349);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_55__pages_notifications_notifications__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_56__pages_paiement_paiement__ = __webpack_require__(269);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_57__ionic_native_paypal__ = __webpack_require__(123);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_58__pages_mailto_mailto__ = __webpack_require__(87);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_59__ionic_native_call_number__ = __webpack_require__(76);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_60__ionic_native_browser_tab__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_61__pages_updateprofil_updateprofil__ = __webpack_require__(158);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_62__pages_formationadd_formationadd__ = __webpack_require__(160);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_63__ionic_native_social_sharing__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_64__ionic_native_sim__ = __webpack_require__(121);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_65__pages_faqupdate_faqupdate__ = __webpack_require__(268);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_66__ionic_native_push__ = __webpack_require__(81);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_67__ionic_native_local_notifications__ = __webpack_require__(65);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_68__ionic_native_stripe__ = __webpack_require__(350);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_69__ionic_native_photo_library__ = __webpack_require__(124);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_70__pages_mesannonces_mesannonces__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_71__ionic_native_native_page_transitions__ = __webpack_require__(224);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_72__ionic_native_keyboard__ = __webpack_require__(219);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_73__pages_imageviewer_imageviewer__ = __webpack_require__(67);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_74__ionic_native_image_picker__ = __webpack_require__(217);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_75__ionic_native_app_minimize__ = __webpack_require__(225);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_76__pages_mentl_mentl__ = __webpack_require__(161);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_77__pages_logoutpopup_logoutpopup__ = __webpack_require__(162);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_78__pages_contact_contact__ = __webpack_require__(163);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_79__pages_photopopup_photopopup__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_80__pages_authloading_authloading__ = __webpack_require__(164);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_81__animations_enter__ = __webpack_require__(351);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_82__animations_leave__ = __webpack_require__(352);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_83__ionic_native_crop__ = __webpack_require__(223);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_84__pages_sharemodal_sharemodal__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_85__pages_share_fb_share_fb__ = __webpack_require__(270);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_86__ionic_native_location_accuracy__ = __webpack_require__(220);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_87_angular_cropperjs__ = __webpack_require__(78);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_87_angular_cropperjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_87_angular_cropperjs__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

























































































var AppModule = /** @class */ (function () {
    function AppModule(config) {
        this.config = config;
        this.setCustomTransitions();
    }
    AppModule.prototype.setCustomTransitions = function () {
        this.config.setTransition('modal-translate-up-enter', __WEBPACK_IMPORTED_MODULE_81__animations_enter__["a" /* ModalTranslateEnterTransition */]);
        this.config.setTransition('modal-translate-up-leave', __WEBPACK_IMPORTED_MODULE_82__animations_leave__["a" /* ModalTranslateLeaveTransition */]);
    };
    AppModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_10__app_component__["a" /* MyApp */],
                __WEBPACK_IMPORTED_MODULE_11__pages_home_home__["a" /* HomePage */],
                __WEBPACK_IMPORTED_MODULE_12__pages_dentart_dentart__["a" /* DentartPage */],
                __WEBPACK_IMPORTED_MODULE_13__pages_createacc1_createacc1__["a" /* Createacc1Page */],
                __WEBPACK_IMPORTED_MODULE_14__pages_createacc2_createacc2__["a" /* Createacc2Page */],
                __WEBPACK_IMPORTED_MODULE_15__pages_createacc3_createacc3__["a" /* Createacc3Page */],
                __WEBPACK_IMPORTED_MODULE_16__pages_createacc4_createacc4__["a" /* Createacc4Page */],
                __WEBPACK_IMPORTED_MODULE_17__pages_generalcnd_generalcnd__["a" /* GeneralcndPage */],
                __WEBPACK_IMPORTED_MODULE_18__pages_connexion_connexion__["a" /* ConnexionPage */],
                __WEBPACK_IMPORTED_MODULE_19__pages_recoverpasswd_recoverpasswd__["a" /* RecoverpasswdPage */],
                __WEBPACK_IMPORTED_MODULE_20__pages_popupcert_popupcert__["a" /* PopupcertPage */],
                __WEBPACK_IMPORTED_MODULE_21__pages_faqcom_faqcom__["a" /* FaqcomPage */],
                __WEBPACK_IMPORTED_MODULE_22__pages_faqfilter_faqfilter__["a" /* FaqfilterPage */],
                __WEBPACK_IMPORTED_MODULE_23__pages_faqadd1_faqadd1__["a" /* Faqadd1Page */],
                __WEBPACK_IMPORTED_MODULE_24__pages_faqadd2_faqadd2__["a" /* Faqadd2Page */],
                __WEBPACK_IMPORTED_MODULE_25__pages_faqadd3_faqadd3__["a" /* Faqadd3Page */],
                __WEBPACK_IMPORTED_MODULE_28__pages_faqadd4annuler_faqadd4annuler__["a" /* Faqadd4annulerPage */],
                __WEBPACK_IMPORTED_MODULE_29__pages_annonces_annonces__["a" /* AnnoncesPage */],
                //AnnoncesFilterPage,
                __WEBPACK_IMPORTED_MODULE_30__pages_certphoto_certphoto__["a" /* CertphotoPage */],
                __WEBPACK_IMPORTED_MODULE_31__pages_annonce_add1_annonce_add1__["a" /* AnnonceAdd1Page */],
                __WEBPACK_IMPORTED_MODULE_32__pages_annonce_add2_annonce_add2__["a" /* AnnonceAdd2Page */],
                __WEBPACK_IMPORTED_MODULE_33__pages_annonce_cat_annonce_cat__["a" /* AnnonceCatPage */],
                __WEBPACK_IMPORTED_MODULE_34__pages_annonce_add_annuler_annonce_add_annuler__["a" /* AnnonceAddAnnulerPage */],
                __WEBPACK_IMPORTED_MODULE_35__pages_annonce_details_annonce_details__["a" /* AnnonceDetailsPage */],
                __WEBPACK_IMPORTED_MODULE_36__pages_annonce_boost_annonce_boost__["a" /* AnnonceBoostPage */],
                __WEBPACK_IMPORTED_MODULE_37__pages_menu_menu__["a" /* MenuPage */],
                __WEBPACK_IMPORTED_MODULE_38__pages_formations_formations__["a" /* FormationsPage */],
                __WEBPACK_IMPORTED_MODULE_39__pages_formation_details_formation_details__["a" /* FormationDetailsPage */],
                __WEBPACK_IMPORTED_MODULE_40__pages_formation_popup_formation_popup__["a" /* FormationPopupPage */],
                __WEBPACK_IMPORTED_MODULE_62__pages_formationadd_formationadd__["a" /* FormationaddPage */],
                __WEBPACK_IMPORTED_MODULE_41__pages_a_savoir_a_savoir__["a" /* ASavoirPage */],
                __WEBPACK_IMPORTED_MODULE_42__pages_a_savoir_details_a_savoir_details__["a" /* ASavoirDetailsPage */],
                __WEBPACK_IMPORTED_MODULE_48__pages_uprofil_uprofil__["a" /* UprofilPage */],
                __WEBPACK_IMPORTED_MODULE_51__pages_nonetwork_nonetwork__["a" /* NonetworkPage */],
                __WEBPACK_IMPORTED_MODULE_55__pages_notifications_notifications__["a" /* NotificationsPage */],
                __WEBPACK_IMPORTED_MODULE_56__pages_paiement_paiement__["a" /* PaiementPage */],
                __WEBPACK_IMPORTED_MODULE_58__pages_mailto_mailto__["a" /* MailtoPage */],
                __WEBPACK_IMPORTED_MODULE_61__pages_updateprofil_updateprofil__["a" /* UpdateprofilPage */],
                __WEBPACK_IMPORTED_MODULE_65__pages_faqupdate_faqupdate__["a" /* FaqupdatePage */],
                __WEBPACK_IMPORTED_MODULE_70__pages_mesannonces_mesannonces__["a" /* MesannoncesPage */],
                __WEBPACK_IMPORTED_MODULE_73__pages_imageviewer_imageviewer__["a" /* ImageviewerPage */],
                __WEBPACK_IMPORTED_MODULE_76__pages_mentl_mentl__["a" /* MentlPage */],
                __WEBPACK_IMPORTED_MODULE_77__pages_logoutpopup_logoutpopup__["a" /* LogoutpopupPage */],
                __WEBPACK_IMPORTED_MODULE_78__pages_contact_contact__["a" /* ContactPage */],
                __WEBPACK_IMPORTED_MODULE_79__pages_photopopup_photopopup__["a" /* PhotopopupPage */],
                __WEBPACK_IMPORTED_MODULE_80__pages_authloading_authloading__["a" /* AuthloadingPage */],
                __WEBPACK_IMPORTED_MODULE_84__pages_sharemodal_sharemodal__["a" /* SharemodalPage */],
                __WEBPACK_IMPORTED_MODULE_85__pages_share_fb_share_fb__["a" /* ShareFbPage */],
                __WEBPACK_IMPORTED_MODULE_26__pages_cropper_cropper__["a" /* CropperPage */],
                __WEBPACK_IMPORTED_MODULE_27__pages_cropper2_cropper2__["a" /* Cropper2Page */]
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_87_angular_cropperjs__["AngularCropperjsModule"],
                __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser__["a" /* BrowserModule */],
                __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["i" /* IonicModule */].forRoot(__WEBPACK_IMPORTED_MODULE_10__app_component__["a" /* MyApp */], {
                    tabsHideOnSubPages: true,
                    scrollAssist: false,
                    autoFocusAssist: false,
                }, {
                    links: [
                        { loadChildren: '../pages/a-savoir-details/a-savoir-details.module#ASavoirDetailsPageModule', name: 'ASavoirDetailsPage', segment: 'a-savoir-details', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/annonce-add-annuler/annonce-add-annuler.module#AnnonceAddAnnulerPageModule', name: 'AnnonceAddAnnulerPage', segment: 'annonce-add-annuler', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/annonce-boost/annonce-boost.module#AnnonceBoostPageModule', name: 'AnnonceBoostPage', segment: 'annonce-boost', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/annonce-cat/annonce-cat.module#AnnonceCatPageModule', name: 'AnnonceCatPage', segment: 'annonce-cat', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/annonce-details/annonce-details.module#AnnonceDetailsPageModule', name: 'AnnonceDetailsPage', segment: 'annonce-details', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/annonces-filter/annonces-filter.module#AnnoncesFilterPageModule', name: 'AnnoncesFilterPage', segment: 'annonces-filter', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/certphoto/certphoto.module#CertphotoPageModule', name: 'CertphotoPage', segment: 'certphoto', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/contact/contact.module#ContactPageModule', name: 'ContactPage', segment: 'contact', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/createacc1/createacc1.module#Createacc1PageModule', name: 'Createacc1Page', segment: 'createacc1', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/createacc2/createacc2.module#Createacc2PageModule', name: 'Createacc2Page', segment: 'createacc2', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/createacc4/createacc4.module#Createacc4PageModule', name: 'Createacc4Page', segment: 'createacc4', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/faqadd2/faqadd2.module#Faqadd2PageModule', name: 'Faqadd2Page', segment: 'faqadd2', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/faqadd4annuler/faqadd4annuler.module#Faqadd4annulerPageModule', name: 'Faqadd4annulerPage', segment: 'faqadd4annuler', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/faqupdate/faqupdate.module#FaqupdatePageModule', name: 'FaqupdatePage', segment: 'faqupdate', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/formation-details/formation-details.module#FormationDetailsPageModule', name: 'FormationDetailsPage', segment: 'formation-details', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/formation-popup/formation-popup.module#FormationPopupPageModule', name: 'FormationPopupPage', segment: 'formation-popup', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/formationadd/formationadd.module#FormationaddPageModule', name: 'FormationaddPage', segment: 'formationadd', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/generalcnd/generalcnd.module#GeneralcndPageModule', name: 'GeneralcndPage', segment: 'generalcnd', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/imageviewer/imageviewer.module#ImageviewerPageModule', name: 'ImageviewerPage', segment: 'imageviewer', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/logoutpopup/logoutpopup.module#LogoutpopupPageModule', name: 'LogoutpopupPage', segment: 'logoutpopup', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/mailto/mailto.module#MailtoPageModule', name: 'MailtoPage', segment: 'mailto', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/mentl/mentl.module#MentlPageModule', name: 'MentlPage', segment: 'mentl', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/menu/menu.module#MenuPageModule', name: 'MenuPage', segment: 'menu', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/nonetwork/nonetwork.module#NonetworkPageModule', name: 'NonetworkPage', segment: 'nonetwork', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/paiement/paiement.module#PaiementPageModule', name: 'PaiementPage', segment: 'paiement', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/popupcert/popupcert.module#PopupcertPageModule', name: 'PopupcertPage', segment: 'popupcert', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/recoverpasswd/recoverpasswd.module#RecoverpasswdPageModule', name: 'RecoverpasswdPage', segment: 'recoverpasswd', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/share-fb/share-fb.module#ShareFbPageModule', name: 'ShareFbPage', segment: 'share-fb', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/annonce-add1/annonce-add1.module#AnnonceAdd1PageModule', name: 'AnnonceAdd1Page', segment: 'annonce-add1', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/authloading/authloading.module#AuthloadingPageModule', name: 'AuthloadingPage', segment: 'authloading', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/connexion/connexion.module#ConnexionPageModule', name: 'ConnexionPage', segment: 'connexion', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/createacc3/createacc3.module#Createacc3PageModule', name: 'Createacc3Page', segment: 'createacc3', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/dentart/dentart.module#DentartPageModule', name: 'DentartPage', segment: 'dentart', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/faqadd1/faqadd1.module#Faqadd1PageModule', name: 'Faqadd1Page', segment: 'faqadd1', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/sharemodal/sharemodal.module#SharemodalPageModule', name: 'SharemodalPage', segment: 'sharemodal', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/a-savoir/a-savoir.module#ASavoirPageModule', name: 'ASavoirPage', segment: 'a-savoir', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/faqadd3/faqadd3.module#Faqadd3PageModule', name: 'Faqadd3Page', segment: 'faqadd3', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/faqfilter/faqfilter.module#FaqfilterPageModule', name: 'FaqfilterPage', segment: 'faqfilter', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/mesannonces/mesannonces.module#MesannoncesPageModule', name: 'MesannoncesPage', segment: 'mesannonces', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/notifications/notifications.module#NotificationsPageModule', name: 'NotificationsPage', segment: 'notifications', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/formations/formations.module#FormationsPageModule', name: 'FormationsPage', segment: 'formations', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/annonce-add2/annonce-add2.module#AnnonceAdd2PageModule', name: 'AnnonceAdd2Page', segment: 'annonce-add2', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/annonces/annonces.module#AnnoncesPageModule', name: 'AnnoncesPage', segment: 'annonces', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/faqcom/faqcom.module#FaqcomPageModule', name: 'FaqcomPage', segment: 'faqcom', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/updateprofil/updateprofil.module#UpdateprofilPageModule', name: 'UpdateprofilPage', segment: 'updateprofil', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/uprofil/uprofil.module#UprofilPageModule', name: 'UprofilPage', segment: 'uprofil', priority: 'low', defaultHistory: [] }
                    ]
                }),
                __WEBPACK_IMPORTED_MODULE_5__ionic_storage__["a" /* IonicStorageModule */].forRoot()
            ],
            bootstrap: [__WEBPACK_IMPORTED_MODULE_2_ionic_angular__["g" /* IonicApp */]],
            entryComponents: [
                __WEBPACK_IMPORTED_MODULE_10__app_component__["a" /* MyApp */],
                __WEBPACK_IMPORTED_MODULE_11__pages_home_home__["a" /* HomePage */],
                __WEBPACK_IMPORTED_MODULE_12__pages_dentart_dentart__["a" /* DentartPage */],
                __WEBPACK_IMPORTED_MODULE_13__pages_createacc1_createacc1__["a" /* Createacc1Page */],
                __WEBPACK_IMPORTED_MODULE_14__pages_createacc2_createacc2__["a" /* Createacc2Page */],
                __WEBPACK_IMPORTED_MODULE_15__pages_createacc3_createacc3__["a" /* Createacc3Page */],
                __WEBPACK_IMPORTED_MODULE_16__pages_createacc4_createacc4__["a" /* Createacc4Page */],
                __WEBPACK_IMPORTED_MODULE_17__pages_generalcnd_generalcnd__["a" /* GeneralcndPage */],
                __WEBPACK_IMPORTED_MODULE_18__pages_connexion_connexion__["a" /* ConnexionPage */],
                __WEBPACK_IMPORTED_MODULE_19__pages_recoverpasswd_recoverpasswd__["a" /* RecoverpasswdPage */],
                __WEBPACK_IMPORTED_MODULE_20__pages_popupcert_popupcert__["a" /* PopupcertPage */],
                __WEBPACK_IMPORTED_MODULE_21__pages_faqcom_faqcom__["a" /* FaqcomPage */],
                __WEBPACK_IMPORTED_MODULE_22__pages_faqfilter_faqfilter__["a" /* FaqfilterPage */],
                __WEBPACK_IMPORTED_MODULE_23__pages_faqadd1_faqadd1__["a" /* Faqadd1Page */],
                __WEBPACK_IMPORTED_MODULE_24__pages_faqadd2_faqadd2__["a" /* Faqadd2Page */],
                __WEBPACK_IMPORTED_MODULE_25__pages_faqadd3_faqadd3__["a" /* Faqadd3Page */],
                __WEBPACK_IMPORTED_MODULE_28__pages_faqadd4annuler_faqadd4annuler__["a" /* Faqadd4annulerPage */],
                __WEBPACK_IMPORTED_MODULE_29__pages_annonces_annonces__["a" /* AnnoncesPage */],
                //AnnoncesFilterPage,
                __WEBPACK_IMPORTED_MODULE_30__pages_certphoto_certphoto__["a" /* CertphotoPage */],
                __WEBPACK_IMPORTED_MODULE_31__pages_annonce_add1_annonce_add1__["a" /* AnnonceAdd1Page */],
                __WEBPACK_IMPORTED_MODULE_32__pages_annonce_add2_annonce_add2__["a" /* AnnonceAdd2Page */],
                __WEBPACK_IMPORTED_MODULE_33__pages_annonce_cat_annonce_cat__["a" /* AnnonceCatPage */],
                __WEBPACK_IMPORTED_MODULE_34__pages_annonce_add_annuler_annonce_add_annuler__["a" /* AnnonceAddAnnulerPage */],
                __WEBPACK_IMPORTED_MODULE_35__pages_annonce_details_annonce_details__["a" /* AnnonceDetailsPage */],
                __WEBPACK_IMPORTED_MODULE_36__pages_annonce_boost_annonce_boost__["a" /* AnnonceBoostPage */],
                __WEBPACK_IMPORTED_MODULE_37__pages_menu_menu__["a" /* MenuPage */],
                __WEBPACK_IMPORTED_MODULE_38__pages_formations_formations__["a" /* FormationsPage */],
                __WEBPACK_IMPORTED_MODULE_39__pages_formation_details_formation_details__["a" /* FormationDetailsPage */],
                __WEBPACK_IMPORTED_MODULE_40__pages_formation_popup_formation_popup__["a" /* FormationPopupPage */],
                __WEBPACK_IMPORTED_MODULE_62__pages_formationadd_formationadd__["a" /* FormationaddPage */],
                __WEBPACK_IMPORTED_MODULE_41__pages_a_savoir_a_savoir__["a" /* ASavoirPage */],
                __WEBPACK_IMPORTED_MODULE_42__pages_a_savoir_details_a_savoir_details__["a" /* ASavoirDetailsPage */],
                __WEBPACK_IMPORTED_MODULE_48__pages_uprofil_uprofil__["a" /* UprofilPage */],
                __WEBPACK_IMPORTED_MODULE_51__pages_nonetwork_nonetwork__["a" /* NonetworkPage */],
                __WEBPACK_IMPORTED_MODULE_55__pages_notifications_notifications__["a" /* NotificationsPage */],
                __WEBPACK_IMPORTED_MODULE_56__pages_paiement_paiement__["a" /* PaiementPage */],
                __WEBPACK_IMPORTED_MODULE_58__pages_mailto_mailto__["a" /* MailtoPage */],
                __WEBPACK_IMPORTED_MODULE_61__pages_updateprofil_updateprofil__["a" /* UpdateprofilPage */],
                __WEBPACK_IMPORTED_MODULE_65__pages_faqupdate_faqupdate__["a" /* FaqupdatePage */],
                __WEBPACK_IMPORTED_MODULE_70__pages_mesannonces_mesannonces__["a" /* MesannoncesPage */],
                __WEBPACK_IMPORTED_MODULE_73__pages_imageviewer_imageviewer__["a" /* ImageviewerPage */],
                __WEBPACK_IMPORTED_MODULE_76__pages_mentl_mentl__["a" /* MentlPage */],
                __WEBPACK_IMPORTED_MODULE_77__pages_logoutpopup_logoutpopup__["a" /* LogoutpopupPage */],
                __WEBPACK_IMPORTED_MODULE_78__pages_contact_contact__["a" /* ContactPage */],
                __WEBPACK_IMPORTED_MODULE_79__pages_photopopup_photopopup__["a" /* PhotopopupPage */],
                __WEBPACK_IMPORTED_MODULE_80__pages_authloading_authloading__["a" /* AuthloadingPage */],
                __WEBPACK_IMPORTED_MODULE_84__pages_sharemodal_sharemodal__["a" /* SharemodalPage */],
                __WEBPACK_IMPORTED_MODULE_85__pages_share_fb_share_fb__["a" /* ShareFbPage */],
                __WEBPACK_IMPORTED_MODULE_26__pages_cropper_cropper__["a" /* CropperPage */],
                __WEBPACK_IMPORTED_MODULE_27__pages_cropper2_cropper2__["a" /* Cropper2Page */]
            ],
            providers: [
                __WEBPACK_IMPORTED_MODULE_4__ionic_native_status_bar__["a" /* StatusBar */],
                __WEBPACK_IMPORTED_MODULE_3__ionic_native_splash_screen__["a" /* SplashScreen */],
                { provide: __WEBPACK_IMPORTED_MODULE_1__angular_core__["ErrorHandler"], useClass: __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["h" /* IonicErrorHandler */] },
                __WEBPACK_IMPORTED_MODULE_43__ionic_native_http__["a" /* HTTP */],
                __WEBPACK_IMPORTED_MODULE_44__providers_globals_globals__["a" /* GlobalsProvider */],
                __WEBPACK_IMPORTED_MODULE_8__ionic_native_android_permissions__["a" /* AndroidPermissions */],
                __WEBPACK_IMPORTED_MODULE_45__ionic_native_geolocation__["a" /* Geolocation */],
                __WEBPACK_IMPORTED_MODULE_46__ionic_native_file__["a" /* File */],
                __WEBPACK_IMPORTED_MODULE_6__ionic_native_file_path__["a" /* FilePath */],
                __WEBPACK_IMPORTED_MODULE_47__ionic_native_file_transfer__["a" /* FileTransfer */],
                __WEBPACK_IMPORTED_MODULE_49__ionic_native_toast__["a" /* Toast */],
                __WEBPACK_IMPORTED_MODULE_50__ionic_native_network__["a" /* Network */],
                __WEBPACK_IMPORTED_MODULE_52__ionic_native_diagnostic__["a" /* Diagnostic */],
                __WEBPACK_IMPORTED_MODULE_53__ionic_native_camera__["a" /* Camera */],
                __WEBPACK_IMPORTED_MODULE_54__ionic_native_image_resizer__["a" /* ImageResizer */],
                __WEBPACK_IMPORTED_MODULE_57__ionic_native_paypal__["a" /* PayPal */],
                __WEBPACK_IMPORTED_MODULE_59__ionic_native_call_number__["a" /* CallNumber */],
                __WEBPACK_IMPORTED_MODULE_60__ionic_native_browser_tab__["a" /* BrowserTab */],
                __WEBPACK_IMPORTED_MODULE_63__ionic_native_social_sharing__["a" /* SocialSharing */],
                __WEBPACK_IMPORTED_MODULE_64__ionic_native_sim__["a" /* Sim */],
                __WEBPACK_IMPORTED_MODULE_66__ionic_native_push__["a" /* Push */],
                __WEBPACK_IMPORTED_MODULE_67__ionic_native_local_notifications__["a" /* LocalNotifications */],
                __WEBPACK_IMPORTED_MODULE_68__ionic_native_stripe__["a" /* Stripe */],
                __WEBPACK_IMPORTED_MODULE_69__ionic_native_photo_library__["a" /* PhotoLibrary */],
                __WEBPACK_IMPORTED_MODULE_71__ionic_native_native_page_transitions__["a" /* NativePageTransitions */],
                __WEBPACK_IMPORTED_MODULE_72__ionic_native_keyboard__["a" /* Keyboard */],
                __WEBPACK_IMPORTED_MODULE_74__ionic_native_image_picker__["a" /* ImagePicker */],
                __WEBPACK_IMPORTED_MODULE_75__ionic_native_app_minimize__["a" /* AppMinimize */],
                __WEBPACK_IMPORTED_MODULE_7__ionic_native_background_mode__["a" /* BackgroundMode */],
                __WEBPACK_IMPORTED_MODULE_83__ionic_native_crop__["a" /* Crop */],
                __WEBPACK_IMPORTED_MODULE_9__ionic_native_instagram__["a" /* Instagram */],
                __WEBPACK_IMPORTED_MODULE_86__ionic_native_location_accuracy__["a" /* LocationAccuracy */]
            ]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2_ionic_angular__["d" /* Config */]])
    ], AppModule);
    return AppModule;
}());

//# sourceMappingURL=app.module.js.map

/***/ }),

/***/ 30:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NotificationsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__a_savoir_a_savoir__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__annonces_annonces__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__uprofil_uprofil__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__home_home__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__menu_menu__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__faqcom_faqcom__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__formations_formations__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__ionic_native_push__ = __webpack_require__(81);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__ionic_native_local_notifications__ = __webpack_require__(65);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__mesannonces_mesannonces__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__dentart_dentart__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__ionic_storage__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__annonce_details_annonce_details__ = __webpack_require__(46);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};

















/**
 * Generated class for the NotificationsPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var NotificationsPage = /** @class */ (function () {
    function NotificationsPage(navCtrl, navParams, globals, http, events, modalCtrl, push, localNotifications, platform, storage) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.globals = globals;
        this.http = http;
        this.events = events;
        this.modalCtrl = modalCtrl;
        this.push = push;
        this.localNotifications = localNotifications;
        this.platform = platform;
        this.storage = storage;
        this.load = 0;
        this.user = {};
        this.listForms = [];
        this.listNewNotifs = [];
        this.listOldNotifs = [];
        this.notifOffset = 0;
        this.notifNewPostOffset = 0;
        this.notifLikedOffset = 0;
        this.notifFavoriteOffset = 0;
        this.notifSharedoffset = 0;
        this.faqToShow = {};
        this.listFaQTheme = [];
        this.newNotifInterval = null;
        this.user = navParams.get('user');
        this.localNotifications.on('click')
            .subscribe(function (data) {
            console.log("Clicked notif");
            console.log(JSON.stringify(data));
        });
        this.getListNotifications(null, false);
        this.getListNotificationsNewPost(null, false);
        this.getNotificationByLiked(null, false);
        this.getNotificationByFavorite(null, false);
        this.getNotificationByShared(null, false);
        platform.registerBackButtonAction(function () {
            navCtrl.pop();
        });
        this.http.post(this.globals.variables.urls.listFaQTheme, {}, {})
            .then(function (data) {
            _this.listFaQTheme = JSON.parse(data.data);
            // this.load = 0;
        }, function (error) {
            _this.load = 0;
            console.log(JSON.stringify(error));
        });
    }
    NotificationsPage.prototype.getListTheme = function () {
        var _this = this;
        console.log("Getting list theme");
        //document.getElementById('load').style.display = 'inline';
        this.http.post(this.globals.variables.urls.listFaQTheme, {}, {})
            .then(function (data) {
            _this.listFaQTheme = JSON.parse(data.data);
        }, function (error) {
            _this.load = 0;
            console.log(JSON.stringify(error));
            //document.getElementById('load').style.display = 'none';
            //this.showRPC();
        });
    };
    NotificationsPage.prototype.ionViewWillEnter = function () {
        var _this = this;
        if (this.newNotifInterval != null) {
            clearInterval(this.newNotifInterval);
        }
        this.newNotifInterval = setInterval(function () {
            _this.getListNotifications_New(null);
            _this.getListNotificationsNewPost_New(null);
        }, 5000);
    };
    NotificationsPage.prototype.ionViewWillLeave = function () {
        console.log();
        if (this.newNotifInterval != null) {
            clearInterval(this.newNotifInterval);
            this.newNotifInterval = null;
        }
    };
    NotificationsPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad NotificationsPage');
    };
    NotificationsPage.prototype.goBack = function () {
        this.navCtrl.pop();
    };
    NotificationsPage.prototype.goHome = function () {
        this.navCtrl.popToRoot();
    };
    NotificationsPage.prototype.openMenu = function () {
        var _this = this;
        var menu = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_8__menu_menu__["a" /* MenuPage */], {
            user: this.user
        }, {
            enterAnimation: 'modal-translate-up-enter',
            leaveAnimation: 'modal-translate-up-leave'
        });
        menu.onDidDismiss(function (page) {
            _this.platform.registerBackButtonAction(function () {
                _this.navCtrl.pop();
            });
            if (page.title == "Partages") {
                var adPage = __WEBPACK_IMPORTED_MODULE_7__home_home__["a" /* HomePage */];
                _this.navCtrl.setRoot(adPage, {
                    user: _this.user
                }, {
                    animate: true
                });
            }
            else if (page.title == "profil") {
                var adPage = __WEBPACK_IMPORTED_MODULE_6__uprofil_uprofil__["a" /* UprofilPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "UprofilPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "UprofilPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(adPage, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "Annonces") {
                var adPage = __WEBPACK_IMPORTED_MODULE_5__annonces_annonces__["a" /* AnnoncesPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "AnnoncesPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "AnnoncesPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(adPage, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "Formations") {
                var actuPage = __WEBPACK_IMPORTED_MODULE_10__formations_formations__["a" /* FormationsPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "FormationsPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "FormationsPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(actuPage, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "News") {
                var actuPage = __WEBPACK_IMPORTED_MODULE_4__a_savoir_a_savoir__["a" /* ASavoirPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "ASavoirPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "ASavoirPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(actuPage, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "Mes alertes") {
            }
            else if (page.title == 'mesannonces') {
                var notif = __WEBPACK_IMPORTED_MODULE_13__mesannonces_mesannonces__["a" /* MesannoncesPage */];
                var viewsStackList = _this.navCtrl.getViews();
                for (var r = 0; r < viewsStackList.length; r++) {
                    console.log("component");
                    console.log(viewsStackList[r].name);
                    if (viewsStackList[r].name === "MesannoncesPage") {
                        _this.navCtrl.popTo(viewsStackList[r]);
                        break;
                    }
                    else if (viewsStackList[r].name != "MesannoncesPage" && r === (viewsStackList.length - 1)) {
                        console.log("Not in the stack");
                        _this.navCtrl.push(notif, {
                            user: _this.user
                        }, {
                            animate: true
                        });
                    }
                }
            }
            else if (page.title == "deconnexion") {
                _this.events.publish('user:logedOut', _this.user);
                _this.load = 1;
                _this.storage.set('user', null)
                    .then(function (data) {
                    console.log(JSON.stringify(data));
                    setTimeout(function () {
                        _this.load = 0;
                        _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_14__dentart_dentart__["a" /* DentartPage */], {}, {
                            animate: true
                        });
                    }, 500);
                }, function (error) {
                    console.log(JSON.stringify(error));
                });
            }
            else if (page.title == "") {
                //
            }
        });
        menu.present();
    };
    NotificationsPage.prototype.refresh = function (refresherEvent) {
        this.listNewNotifs = [];
        this.listOldNotifs = [];
        this.notifOffset = 0;
        this.notifNewPostOffset = 0;
        this.notifLikedOffset = 0;
        this.notifFavoriteOffset = 0;
        this.notifSharedoffset = 0;
        if (refresherEvent != null) {
            this.load = 1;
            // setTimeout(() => {
            refresherEvent.complete();
            // }, 200)
        }
        this.getListNotifications(null, true);
        this.getListNotificationsNewPost(null, true);
        this.getNotificationByLiked(null, true);
        this.getNotificationByFavorite(null, true);
        this.getNotificationByShared(null, true);
    };
    NotificationsPage.prototype.getListNotifications = function (infiniteScroll, isRefresh) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var user_id;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        //listFormations
                        if (infiniteScroll == null)
                            this.load = 1;
                        user_id = (this.user.id_User != null ? this.user.id_User : this.user.id);
                        return [4 /*yield*/, this.http.get(this.globals.variables.urls.getNotifications, {
                                "user_id": "" + user_id,
                                "limit": "7",
                                "offset": "" + this.notifOffset
                            }, {})
                                .then(function (data) {
                                var res = JSON.parse(data.data);
                                var notifs = [];
                                if (res.length <= 0) {
                                    _this.load = 0;
                                }
                                else {
                                    console.log("Notif object");
                                    console.log(JSON.stringify(res[0]));
                                    for (var f = 0; f < res.length; f++) {
                                        var notifTime = parseFloat(res[f].time) * 1000;
                                        var hour24 = 24 * 60 * 60 * 1000;
                                        var limitNotif = notifTime + hour24;
                                        var nowTime = new Date().getTime();
                                        if (parseInt(res[f].state) == 0 || parseInt(res[f].state) == 3) {
                                            var notif = {
                                                id: res[f].id,
                                                text: res[f].message,
                                                sound: 'assets/beep/beep.mp3',
                                                vibrate: true,
                                                data: res[f],
                                                foreground: true
                                            };
                                            if (limitNotif <= nowTime) {
                                                notifs.push(notif);
                                            }
                                            if (parseInt(res[f].state) == 3) {
                                                _this.updateNotifState(res[f], "4");
                                            }
                                            if (parseInt(res[f].state) == 0) {
                                                _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                                            }
                                        }
                                        else if (parseInt(res[f].state) < 2) {
                                            _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                                        }
                                        else if (parseInt(res[f].state) == 2) {
                                            _this.updateNotifState(res[f], "4");
                                        }
                                        _this.listForms.push(res[f]);
                                        if (limitNotif <= nowTime) {
                                            _this.listNewNotifs.push(res[f]);
                                        }
                                        else {
                                            _this.listOldNotifs.push(res[f]);
                                        }
                                        // if (parseInt(res[f].state) < 5) {
                                        //   this.listNewNotifs.push(res[f])
                                        // }
                                        // else {
                                        //   this.listOldNotifs.push(res[f])
                                        // }
                                        if (parseInt(res[f].state) < 5)
                                            _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                                        if (f == res.length - 1) {
                                            _this.load = 0;
                                        }
                                    }
                                    _this.listNewNotifs.sort(function (n1, n2) {
                                        return -(parseFloat(n1.time) - parseFloat(n2.time));
                                    });
                                    _this.listOldNotifs.sort(function (n1, n2) {
                                        return -(parseFloat(n1.time) - parseFloat(n2.time));
                                    });
                                    _this.localNotifications.schedule(notifs);
                                    // this.notifOffset += 1
                                }
                                if (infiniteScroll != null) {
                                    infiniteScroll.complete();
                                }
                            }, function (error) {
                                console.log(JSON.stringify(error));
                                _this.load = 0;
                            })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    NotificationsPage.prototype.getNotificationByShared = function (infiniteScroll, isRefresh) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var user_id;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        //listFormations
                        if (infiniteScroll == null)
                            this.load = 1;
                        user_id = (this.user.id_User != null ? this.user.id_User : this.user.id);
                        return [4 /*yield*/, this.http.get(this.globals.variables.urls.getNotificationByShared, {
                                "user_id": "" + user_id,
                                "limit": "7",
                                "offset": "" + this.notifSharedoffset
                            }, {})
                                .then(function (data) {
                                var res = JSON.parse(data.data);
                                var notifs = [];
                                if (res.length <= 0) {
                                    _this.load = 0;
                                }
                                else {
                                    console.log("Notif object");
                                    console.log(JSON.stringify(res[0]));
                                    for (var f = 0; f < res.length; f++) {
                                        var notifTime = parseFloat(res[f].time) * 1000;
                                        var hour24 = 24 * 60 * 60 * 1000;
                                        var limitNotif = notifTime + hour24;
                                        var nowTime = new Date().getTime();
                                        if (parseInt(res[f].state) == 0 || parseInt(res[f].state) == 3) {
                                            var notif = {
                                                id: res[f].id,
                                                text: res[f].message,
                                                sound: 'assets/beep/beep.mp3',
                                                vibrate: true,
                                                data: res[f],
                                                foreground: true
                                            };
                                            if (limitNotif <= nowTime) {
                                                notifs.push(notif);
                                            }
                                            if (parseInt(res[f].state) == 3) {
                                                _this.updateNotifState(res[f], "4");
                                            }
                                            if (parseInt(res[f].state) == 0) {
                                                _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                                            }
                                        }
                                        else if (parseInt(res[f].state) < 2) {
                                            _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                                        }
                                        else if (parseInt(res[f].state) == 2) {
                                            _this.updateNotifState(res[f], "4");
                                        }
                                        _this.listForms.push(res[f]);
                                        if (limitNotif <= nowTime) {
                                            _this.listNewNotifs.push(res[f]);
                                        }
                                        else {
                                            _this.listOldNotifs.push(res[f]);
                                        }
                                        // if (parseInt(res[f].state) < 5) {
                                        //   this.listNewNotifs.push(res[f])
                                        // }
                                        // else {
                                        //   this.listOldNotifs.push(res[f])
                                        // }
                                        if (parseInt(res[f].state) < 5)
                                            _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                                        if (f == res.length - 1) {
                                            _this.load = 0;
                                        }
                                    }
                                    _this.listNewNotifs.sort(function (n1, n2) {
                                        return -(parseFloat(n1.time) - parseFloat(n2.time));
                                    });
                                    _this.listOldNotifs.sort(function (n1, n2) {
                                        return -(parseFloat(n1.time) - parseFloat(n2.time));
                                    });
                                    _this.localNotifications.schedule(notifs);
                                    // this.notifOffset += 1
                                }
                                if (infiniteScroll != null) {
                                    infiniteScroll.complete();
                                }
                            }, function (error) {
                                console.log(JSON.stringify(error));
                                _this.load = 0;
                            })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    NotificationsPage.prototype.getNotificationByFavorite = function (infiniteScroll, isRefresh) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var user_id;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        //listFormations
                        if (infiniteScroll == null)
                            this.load = 1;
                        user_id = (this.user.id_User != null ? this.user.id_User : this.user.id);
                        return [4 /*yield*/, this.http.get(this.globals.variables.urls.getNotificationByFavorite, {
                                "user_id": "" + user_id,
                                "limit": "7",
                                "offset": "" + this.notifFavoriteOffset
                            }, {})
                                .then(function (data) {
                                var res = JSON.parse(data.data);
                                var notifs = [];
                                if (res.length <= 0) {
                                    _this.load = 0;
                                }
                                else {
                                    console.log("Notif object");
                                    console.log(JSON.stringify(res[0]));
                                    for (var f = 0; f < res.length; f++) {
                                        var notifTime = parseFloat(res[f].time) * 1000;
                                        var hour24 = 24 * 60 * 60 * 1000;
                                        var limitNotif = notifTime + hour24;
                                        var nowTime = new Date().getTime();
                                        if (parseInt(res[f].state) == 0 || parseInt(res[f].state) == 3) {
                                            var notif = {
                                                id: res[f].id,
                                                text: res[f].message,
                                                sound: 'assets/beep/beep.mp3',
                                                vibrate: true,
                                                data: res[f],
                                                foreground: true
                                            };
                                            if (limitNotif <= nowTime) {
                                                notifs.push(notif);
                                            }
                                            if (parseInt(res[f].state) == 3) {
                                                _this.updateNotifState(res[f], "4");
                                            }
                                            if (parseInt(res[f].state) == 0) {
                                                _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                                            }
                                        }
                                        else if (parseInt(res[f].state) < 2) {
                                            _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                                        }
                                        else if (parseInt(res[f].state) == 2) {
                                            _this.updateNotifState(res[f], "4");
                                        }
                                        _this.listForms.push(res[f]);
                                        if (limitNotif <= nowTime) {
                                            _this.listNewNotifs.push(res[f]);
                                        }
                                        else {
                                            _this.listOldNotifs.push(res[f]);
                                        }
                                        // if (parseInt(res[f].state) < 5) {
                                        //   this.listNewNotifs.push(res[f])
                                        // }
                                        // else {
                                        //   this.listOldNotifs.push(res[f])
                                        // }
                                        if (parseInt(res[f].state) < 5)
                                            _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                                        if (f == res.length - 1) {
                                            _this.load = 0;
                                        }
                                    }
                                    _this.listNewNotifs.sort(function (n1, n2) {
                                        return -(parseFloat(n1.time) - parseFloat(n2.time));
                                    });
                                    _this.listOldNotifs.sort(function (n1, n2) {
                                        return -(parseFloat(n1.time) - parseFloat(n2.time));
                                    });
                                    _this.localNotifications.schedule(notifs);
                                    // this.notifOffset += 1
                                }
                                if (infiniteScroll != null) {
                                    infiniteScroll.complete();
                                }
                            }, function (error) {
                                console.log(JSON.stringify(error));
                                _this.load = 0;
                            })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    NotificationsPage.prototype.getNotificationByLiked = function (infiniteScroll, isRefresh) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var user_id;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        //listFormations
                        if (infiniteScroll == null)
                            this.load = 1;
                        user_id = (this.user.id_User != null ? this.user.id_User : this.user.id);
                        return [4 /*yield*/, this.http.get(this.globals.variables.urls.getNotificationByLiked, {
                                "user_id": "" + user_id,
                                "limit": "7",
                                "offset": "" + this.notifLikedOffset
                            }, {})
                                .then(function (data) {
                                var res = JSON.parse(data.data);
                                var notifs = [];
                                if (res.length <= 0) {
                                    _this.load = 0;
                                }
                                else {
                                    console.log("Notif object");
                                    console.log(JSON.stringify(res[0]));
                                    for (var f = 0; f < res.length; f++) {
                                        var notifTime = parseFloat(res[f].time) * 1000;
                                        var hour24 = 24 * 60 * 60 * 1000;
                                        var limitNotif = notifTime + hour24;
                                        var nowTime = new Date().getTime();
                                        if (parseInt(res[f].state) == 0 || parseInt(res[f].state) == 3) {
                                            var notif = {
                                                id: res[f].id,
                                                text: res[f].message,
                                                sound: 'assets/beep/beep.mp3',
                                                vibrate: true,
                                                data: res[f],
                                                foreground: true
                                            };
                                            if (limitNotif <= nowTime) {
                                                notifs.push(notif);
                                            }
                                            if (parseInt(res[f].state) == 3) {
                                                _this.updateNotifState(res[f], "4");
                                            }
                                            if (parseInt(res[f].state) == 0) {
                                                _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                                            }
                                        }
                                        else if (parseInt(res[f].state) < 2) {
                                            _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                                        }
                                        else if (parseInt(res[f].state) == 2) {
                                            _this.updateNotifState(res[f], "4");
                                        }
                                        _this.listForms.push(res[f]);
                                        if (limitNotif <= nowTime) {
                                            _this.listNewNotifs.push(res[f]);
                                        }
                                        else {
                                            _this.listOldNotifs.push(res[f]);
                                        }
                                        // if (parseInt(res[f].state) < 5) {
                                        //   this.listNewNotifs.push(res[f])
                                        // }
                                        // else {
                                        //   this.listOldNotifs.push(res[f])
                                        // }
                                        if (parseInt(res[f].state) < 5)
                                            _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                                        if (f == res.length - 1) {
                                            _this.load = 0;
                                        }
                                    }
                                    _this.listNewNotifs.sort(function (n1, n2) {
                                        return -(parseFloat(n1.time) - parseFloat(n2.time));
                                    });
                                    _this.listOldNotifs.sort(function (n1, n2) {
                                        return -(parseFloat(n1.time) - parseFloat(n2.time));
                                    });
                                    _this.localNotifications.schedule(notifs);
                                    // this.notifOffset += 1
                                }
                                if (infiniteScroll != null) {
                                    infiniteScroll.complete();
                                }
                            }, function (error) {
                                console.log(JSON.stringify(error));
                                _this.load = 0;
                            })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    NotificationsPage.prototype.getListNotificationsNewPost = function (infiniteScroll, isRefresh) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.http.get(this.globals.variables.urls.getNotificationsNewPost, {
                            "user_id": "" + (this.user.id_User != null ? this.user.id_User : this.user.id),
                            "limit": "7",
                            "offset": "" + this.notifNewPostOffset
                        }, {})
                            .then(function (data) {
                            var res = JSON.parse(data.data);
                            var notifs = [];
                            console.log("Notif new post object :");
                            console.log(JSON.stringify(res[0]));
                            if (res.length <= 0) {
                                _this.load = 0;
                            }
                            else {
                                for (var f = 0; f < res.length; f++) {
                                    var notifTime = parseFloat(res[f].time) * 1000;
                                    var hour24 = 24 * 60 * 60 * 1000;
                                    var limitNotif = notifTime + hour24;
                                    var nowTime = new Date().getTime();
                                    if (parseInt(res[f].state) == 0 || parseInt(res[f].state) == 3) {
                                        var notif = {
                                            id: res[f].id,
                                            text: res[f].message,
                                            sound: 'assets/beep/beep.mp3',
                                            vibrate: true,
                                            data: res[f],
                                            foreground: true
                                        };
                                        if (nowTime <= limitNotif) {
                                            notifs.push(notif);
                                        }
                                        if (parseInt(res[f].state) == 3) {
                                            _this.updateNotifState(res[f], "4");
                                        }
                                        if (parseInt(res[f].state) == 0) {
                                            _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                                        }
                                    }
                                    else if (parseInt(res[f].state) < 2) {
                                        _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                                    }
                                    else if (parseInt(res[f].state) == 2) {
                                        _this.updateNotifState(res[f], "4");
                                    }
                                    _this.listForms.push(res[f]);
                                    if (nowTime <= limitNotif) {
                                        _this.listNewNotifs.push(res[f]);
                                    }
                                    else {
                                        _this.listOldNotifs.push(res[f]);
                                    }
                                    // if (parseInt(res[f].state) < 5) {
                                    //   this.listNewNotifs.push(res[f])
                                    // }
                                    // else {
                                    //   this.listOldNotifs.push(res[f])
                                    // }
                                    if (parseInt(res[f].state) < 5)
                                        _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                                    if (f == res.length - 1) {
                                        _this.load = 0;
                                    }
                                }
                                _this.listNewNotifs.sort(function (n1, n2) {
                                    return -(parseFloat(n1.time) - parseFloat(n2.time));
                                });
                                _this.listOldNotifs.sort(function (n1, n2) {
                                    return -(parseFloat(n1.time) - parseFloat(n2.time));
                                });
                                _this.localNotifications.schedule(notifs);
                                // this.notifNewPostOffset += 1
                            }
                            if (infiniteScroll != null) {
                                infiniteScroll.complete();
                            }
                        }, function (error) {
                            console.log(JSON.stringify(error));
                            _this.load = 0;
                        })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    NotificationsPage.prototype.getListNotifications_New = function (infiniteScroll) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var user_id;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        user_id = (this.user.id_User != null ? this.user.id_User : this.user.id);
                        return [4 /*yield*/, this.http.get(this.globals.variables.urls.getNotifications, {
                                "user_id": "" + user_id,
                                "limit": "7",
                                "offset": "" + this.notifOffset
                            }, {})
                                .then(function (data) {
                                var res = JSON.parse(data.data);
                                var notifs = [];
                                if (res.length <= 0) {
                                    _this.load = 0;
                                }
                                else {
                                    console.log("Notif object");
                                    console.log(JSON.stringify(res[0]));
                                    for (var f = 0; f < res.length; f++) {
                                        if (parseInt(res[f].state) == 0 || parseInt(res[f].state) == 3) {
                                            var notif = {
                                                id: res[f].id,
                                                text: res[f].message,
                                                sound: 'assets/beep/beep.mp3',
                                                vibrate: true,
                                                data: res[f],
                                                foreground: true
                                            };
                                            notifs.push(notif);
                                            _this.listNewNotifs.push(res[f]);
                                            if (parseInt(res[f].state) == 3) {
                                                _this.updateNotifState(res[f], "4");
                                            }
                                            if (parseInt(res[f].state) == 0) {
                                                _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                                            }
                                        }
                                        // else if (parseInt(res[f].state) < 2) {
                                        //   this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1))
                                        // }
                                        // else if (parseInt(res[f].state) == 2) {
                                        //   this.updateNotifState(res[f], "4")
                                        // }
                                        _this.listForms.push(res[f]);
                                        // if (parseInt(res[f].state) < 5) {
                                        //   this.listNewNotifs.push(res[f])
                                        // }
                                        // else {
                                        //   this.listOldNotifs.push(res[f])
                                        // }
                                        // if (parseInt(res[f].state) < 5)
                                        //   this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1))
                                        if (f == res.length - 1) {
                                            _this.load = 0;
                                        }
                                    }
                                    _this.listNewNotifs.sort(function (n1, n2) {
                                        return -(parseFloat(n1.time) - parseFloat(n2.time));
                                    });
                                    _this.listOldNotifs.sort(function (n1, n2) {
                                        return -(parseFloat(n1.time) - parseFloat(n2.time));
                                    });
                                    _this.localNotifications.schedule(notifs);
                                    // this.notifOffset += 1
                                }
                                if (infiniteScroll != null) {
                                    infiniteScroll.complete();
                                }
                            }, function (error) {
                                console.log(JSON.stringify(error));
                                _this.load = 0;
                            })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    NotificationsPage.prototype.getListNotificationsNewPost_New = function (infiniteScroll) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.http.get(this.globals.variables.urls.getNotificationsNewPost, {
                            "user_id": "" + (this.user.id_User != null ? this.user.id_User : this.user.id),
                            "limit": "5",
                            "offset": "0"
                        }, {})
                            .then(function (data) {
                            var res = JSON.parse(data.data);
                            var notifs = [];
                            console.log("Notif new post object :");
                            console.log(JSON.stringify(res[0]));
                            if (res.length <= 0) {
                                _this.load = 0;
                            }
                            else {
                                for (var f = 0; f < res.length; f++) {
                                    if (parseInt(res[f].state) == 0 || parseInt(res[f].state) == 3) {
                                        var notif = {
                                            id: res[f].id,
                                            text: res[f].message,
                                            sound: 'assets/beep/beep.mp3',
                                            vibrate: true,
                                            data: res[f],
                                            foreground: true
                                        };
                                        notifs.push(notif);
                                        _this.listNewNotifs.push(res[f]);
                                        if (parseInt(res[f].state) == 3) {
                                            _this.updateNotifState(res[f], "4");
                                        }
                                        if (parseInt(res[f].state) == 0) {
                                            _this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1));
                                        }
                                    }
                                    // else if (parseInt(res[f].state) < 2) {
                                    //   this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1))
                                    // }
                                    // else if (parseInt(res[f].state) == 2) {
                                    //   this.updateNotifState(res[f], "4")
                                    // }
                                    _this.listForms.push(res[f]);
                                    // if (parseInt(res[f].state) < 5) {
                                    //   this.listNewNotifs.push(res[f])
                                    // }
                                    // else {
                                    //   this.listOldNotifs.push(res[f])
                                    // }
                                    // if (parseInt(res[f].state) < 5)
                                    //   this.updateNotifState(res[f], "" + (parseInt(res[f].state) + 1))
                                    if (f == res.length - 1) {
                                        _this.load = 0;
                                    }
                                }
                                _this.listNewNotifs.sort(function (n1, n2) {
                                    return -(parseFloat(n1.time) - parseFloat(n2.time));
                                });
                                _this.listOldNotifs.sort(function (n1, n2) {
                                    return -(parseFloat(n1.time) - parseFloat(n2.time));
                                });
                                _this.localNotifications.schedule(notifs);
                                // this.notifNewPostOffset += 1
                            }
                            if (infiniteScroll != null) {
                                infiniteScroll.complete();
                            }
                        }, function (error) {
                            console.log(JSON.stringify(error));
                            _this.load = 0;
                        })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    NotificationsPage.prototype.showDetails = function (notif) {
        //updateNotifState: 'http://dentart.devforge.eu/ws-update-notification-state/',//notification_id, state (0 ou 1 ou ...)
        this.load = 1;
        var nextState = 6;
        console.log("Next state : " + nextState);
        console.log(JSON.stringify(notif.single_author));
        this.updateNotifState(notif, "" + nextState);
        notif.state = "" + nextState;
        if (notif.post_type == "faqs") {
            var vfaq = {
                faq: '',
                author: '',
                theme: '',
                com_author: ''
            };
            var faq = notif.single;
            var coms = [];
            for (var elem in faq.comments) {
                coms.push(faq.comments[elem]);
            }
            var images_count = 0;
            var char70 = "";
            if (faq.description.length > 70) {
                char70 = "" + faq.description.substr(0, 69) + "...";
            }
            else {
                char70 = faq.description;
            }
            if (faq.faq_image_1 != '' && faq.faq_image_1 != null)
                images_count += 1;
            if (faq.faq_image_2 != '' && faq.faq_image_2 != null)
                images_count += 1;
            if (faq.faq_image_3 != '' && faq.faq_image_3 != null)
                images_count += 1;
            if (faq.faq_image_4 != '' && faq.faq_image_4 != null)
                images_count += 1;
            faq.images_count = images_count;
            faq.comments_count = coms.length;
            faq.coms = coms;
            faq.char70 = char70;
            vfaq.faq = faq;
            // vfaq.com_author = com_author;
            vfaq.author = notif.single_author;
            for (var j = 0; j < this.listFaQTheme.length; j++) {
                if (this.listFaQTheme[j].id == faq.theme) {
                    vfaq.theme = this.listFaQTheme[j];
                    this.faqToShow = vfaq;
                    var faqdet = __WEBPACK_IMPORTED_MODULE_9__faqcom_faqcom__["a" /* FaqcomPage */];
                    this.load = 0;
                    this.navCtrl.push(faqdet, {
                        user: this.user,
                        faq: this.faqToShow,
                        source: "alert",
                        theme: this.listFaQTheme,
                    });
                }
            }
        }
        else if (notif.post_type == "ads") {
            this.load = 0;
            var ad = notif.single;
            var date_fr = ad.date.charAt(8) + ad.date.charAt(9) + "/" + ad.date.charAt(5) + ad.date.charAt(6) +
                "/" + ad.date.charAt(0) + ad.date.charAt(1) + ad.date.charAt(2) +
                ad.date.charAt(3) + " " + ad.date.charAt(11) + ad.date.charAt(12) + ":" +
                ad.date.charAt(14) + ad.date.charAt(15);
            ad.date_fr = date_fr;
            ad.images_count = 0;
            if (ad.ad_image_1 != '' && ad.ad_image_1 != null)
                ad.images_count += 1;
            if (ad.ad_image_2 != '' && ad.ad_image_2 != null)
                ad.images_count += 1;
            if (ad.ad_image_3 != '' && ad.ad_image_3 != null)
                ad.images_count += 1;
            if (ad.ad_image_4 != '' && ad.ad_image_4 != null)
                ad.images_count += 1;
            var char70 = "";
            if (ad.description.length > 70) {
                char70 = "" + ad.description.substr(0, 69) + "...";
            }
            else {
                char70 = ad.description;
            }
            ad.char70 = char70;
            ad.author_infos = notif.single_author;
            var adPage = __WEBPACK_IMPORTED_MODULE_16__annonce_details_annonce_details__["a" /* AnnonceDetailsPage */];
            this.navCtrl.push(adPage, {
                user: this.user,
                ad: ad
            });
        }
    };
    NotificationsPage.prototype.updateNotifState = function (notif, state) {
        console.log("New state : " + state);
        state = parseInt(state) == 3 ? 4 : state;
        this.http.get(this.globals.variables.urls.updateNotifState, {
            "notification_id": notif.notif_id,
            "state": state
        }, {})
            .then(function (data) {
            // notif.state = state;
            console.log("State of notif updated");
        }, function (error) {
            console.log("Error updating notif state");
        });
    };
    NotificationsPage.prototype.goToHome = function () {
        var adPage = __WEBPACK_IMPORTED_MODULE_7__home_home__["a" /* HomePage */];
        this.navCtrl.setRoot(adPage, {
            user: this.user
        }, {
            animate: true
        });
    };
    NotificationsPage.prototype.doInfinite = function (infiniteScroll) {
        this.notifOffset += 1;
        this.notifNewPostOffset += 1;
        this.notifLikedOffset += 1;
        this.notifFavoriteOffset += 1;
        this.notifSharedoffset += 1;
        this.getListNotifications(infiniteScroll, false);
        this.getListNotificationsNewPost(infiniteScroll, false);
        this.getNotificationByLiked(infiniteScroll, false);
        this.getNotificationByFavorite(infiniteScroll, false);
        this.getNotificationByShared(infiniteScroll, false);
    };
    NotificationsPage.prototype.parse2Int = function (str) {
        return parseInt(str);
    };
    NotificationsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-notifications',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/notifications/notifications.html"*/'<ion-content class="pr">\n\n  <ion-row ion-fixed class="load-ctn" id="load" *ngIf="load == 1">\n    <ion-spinner class="loading-custom" name="crescent" color="vert_logo"></ion-spinner>\n  </ion-row>\n\n  <ion-row ion-fixed class="header">\n    <ion-col></ion-col>\n    <ion-col (click)="goToHome()">\n      <ion-label class="da">\n        <img class="logo" src="assets/imgs/da_image/logo-dentart.png">\n        <span class="bold">Dent</span><span class="fine">Art</span>\n      </ion-label>\n    </ion-col>\n    <ion-col></ion-col>\n\n  </ion-row>\n\n  <div class="container">\n\n    <ion-refresher (ionRefresh)="refresh($event)">\n      <ion-refresher-content pullingIcon="arrow-dropdown" pullingText="Tirez pour rafraîchir"\n        refreshingSpinner="none" refreshingText="Rechargement ..." pullMin="120" pullMax="200" class="refresher">\n      </ion-refresher-content>\n    </ion-refresher>\n\n    <ion-row class="card-ctn">\n\n      <ion-col>\n\n        <!-- <ion-row *ngIf="listNewNotifs.length <= 0" class="card-ttl-ctn">\n          <ion-label>\n            Vous n\'avez aucune notification !\n          </ion-label>\n        </ion-row> -->\n\n        <div class="notif-band">\n          Récents\n        </div>\n\n        <div *ngIf="listNewNotifs.length <= 0" class="when-0">Nouvelles notifications (0)</div>\n\n        <div *ngFor="let form1 of listNewNotifs" class="card-ttl-ctn {{parse2Int(form1.state) < 6 ? \'grey-bg\' : \'white-bg\'}}"\n          (click)="showDetails(form1);">\n          <div class="com-author-avatar">\n            <img class="avatar" src="{{form1.com_author.avatar}}" />\n          </div>\n          <div class="com-message" [innerHtml]="form1.message"></div>\n        </div>\n\n        <div class="notif-band">\n          Plus anciens\n        </div>\n\n        <div *ngIf="listOldNotifs.length <= 0" class="when-0">Anciennes notifications (0)</div>\n\n        <div *ngFor="let form1 of listOldNotifs" class="card-ttl-ctn {{parse2Int(form1.state) < 6 ? \'grey-bg\' : \'white-bg\'}}"\n          (click)="showDetails(form1);">\n          <div class="com-author-avatar">\n            <img class="avatar" src="{{form1.com_author.avatar}}" />\n          </div>\n          <div class="com-message" [innerHtml]="form1.message"></div>\n        </div>\n\n      </ion-col>\n    </ion-row>\n\n    <ion-infinite-scroll (ionInfinite)="doInfinite($event)">\n      <ion-infinite-scroll-content></ion-infinite-scroll-content>\n    </ion-infinite-scroll>\n\n  </div>\n\n  <ion-row ion-fixed class="tab-faq">\n    <ion-col (click)="openMenu()">\n      <img ion-fixed class="btn-menu" src="../../assets/icon/menu-button.svg">\n    </ion-col>\n    <ion-col></ion-col>\n    <ion-col (click)="goHome()">\n      <img class="btn-home" src="../../assets/icon/home-7.svg">\n    </ion-col>\n    <ion-col></ion-col>\n    <ion-col></ion-col>\n  </ion-row>\n\n</ion-content>'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/notifications/notifications.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["f" /* Events */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_11__ionic_native_push__["a" /* Push */],
            __WEBPACK_IMPORTED_MODULE_12__ionic_native_local_notifications__["a" /* LocalNotifications */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_15__ionic_storage__["b" /* Storage */]])
    ], NotificationsPage);
    return NotificationsPage;
}());

//# sourceMappingURL=notifications.js.map

/***/ }),

/***/ 347:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MyApp; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_status_bar__ = __webpack_require__(266);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_splash_screen__ = __webpack_require__(265);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_file__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_network__ = __webpack_require__(80);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__pages_nonetwork_nonetwork__ = __webpack_require__(88);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ionic_native_local_notifications__ = __webpack_require__(65);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__pages_authloading_authloading__ = __webpack_require__(164);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__ionic_storage__ = __webpack_require__(15);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var MyApp = /** @class */ (function () {
    function MyApp(platform, statusBar, splashScreen, events, file, network, http, globals, localNotifications, app, storage) {
        // this.backgroundMode.enable();
        var _this = this;
        this.file = file;
        this.network = network;
        this.http = http;
        this.globals = globals;
        this.localNotifications = localNotifications;
        this.app = app;
        this.storage = storage;
        this.load = 0;
        this.rootPage = __WEBPACK_IMPORTED_MODULE_10__pages_authloading_authloading__["a" /* AuthloadingPage */];
        this.isDentArt = 0;
        this.listForms = [];
        platform.ready().then(function () {
            statusBar.styleDefault();
            splashScreen.hide();
            platform.registerBackButtonAction(function () {
                var nav = _this.app.getActiveNav();
                if (nav.canGoBack()) {
                    nav.pop();
                }
                else {
                    platform.exitApp(); //Exit from app
                }
            });
        });
        events.subscribe("user:logedIn", function (userIn) {
            _this.user = userIn;
            // this.updateSessionInfos()
        });
        events.subscribe("user:logedOut", function (userOut) {
            _this.user = null;
            _this.testConnectedUser(userOut);
            clearTimeout(_this.notifTimeout);
        });
        events.subscribe("app:exit", function () {
        });
        this.testConnectivity();
        if (this.user != null && this.user.id_User != null) {
        }
    }
    MyApp.prototype.testConnectedUser = function (user) {
        var _this = this;
        this.file.checkDir(this.file.dataDirectory, 'user')
            .then(function (data) {
            console.log("User directory found.");
            console.log(JSON.stringify(data));
            _this.file.checkFile(_this.file.dataDirectory + "user", "user.json")
                .then(function (data) {
                console.log("File user exist");
                _this.file.removeFile(_this.file.dataDirectory + "user", "user.json")
                    .then(function (data) {
                    console.log("User loged out and removed");
                }, function (error) {
                    console.log("User loged out but not removed");
                });
            }, function (error) {
                console.log("File user does not exist");
                _this.file.createFile(_this.file.dataDirectory + "user", "user.json", true)
                    .then(function (data) {
                    _this.file.removeFile(_this.file.dataDirectory + "user", "user.json")
                        .then(function (data) {
                        console.log("User loged out and removed");
                    }, function (error) {
                        console.log("User connected but not removed");
                    });
                }, function (error) {
                    console.log("Can not create file user");
                });
            });
        }, function (error) {
            console.log("User directory not found.");
            console.log(JSON.stringify(error));
            _this.file.createDir(_this.file.dataDirectory, "user", true)
                .then(function (data) {
                console.log("User directory creadted");
                _this.file.createFile(_this.file.dataDirectory + "user", "user.json", true)
                    .then(function (data) {
                    _this.file.removeFile(_this.file.dataDirectory + "user", "user.json")
                        .then(function (data) {
                        console.log("User loged out and removed");
                    }, function (error) {
                        console.log("User connected but not removed");
                    });
                }, function (error) {
                    console.log("Can not create file user");
                });
            }, function (error) {
                console.log("Can not create user directory");
            });
        });
    };
    MyApp.prototype.testConnectivity = function () {
        var _this = this;
        console.log("Testing network");
        if (this.network.type == 'none' || this.network.type == 'unknown') {
            this.rootPage = __WEBPACK_IMPORTED_MODULE_6__pages_nonetwork_nonetwork__["a" /* NonetworkPage */];
            this.isDentArt = 1;
        }
        else {
            if (this.isDentArt == 1) {
                this.rootPage = __WEBPACK_IMPORTED_MODULE_10__pages_authloading_authloading__["a" /* AuthloadingPage */];
                this.isDentArt = 0;
            }
        }
        setTimeout(function () {
            _this.testConnectivity();
        }, 5000);
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* Nav */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* Nav */])
    ], MyApp.prototype, "nav", void 0);
    MyApp = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/app/app.html"*/'<ion-nav [root]="rootPage"></ion-nav>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/app/app.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_status_bar__["a" /* StatusBar */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_splash_screen__["a" /* SplashScreen */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["f" /* Events */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_file__["a" /* File */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_native_network__["a" /* Network */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_8__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_9__ionic_native_local_notifications__["a" /* LocalNotifications */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* App */],
            __WEBPACK_IMPORTED_MODULE_11__ionic_storage__["b" /* Storage */]])
    ], MyApp);
    return MyApp;
}());

//# sourceMappingURL=app.component.js.map

/***/ }),

/***/ 348:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CropperPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_cropperjs__ = __webpack_require__(78);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_cropperjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_angular_cropperjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_camera__ = __webpack_require__(79);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var CropperPage = /** @class */ (function () {
    function CropperPage(navCtrl, viewCtrl, camera) {
        this.navCtrl = navCtrl;
        this.viewCtrl = viewCtrl;
        this.camera = camera;
        this.croppedImage = null;
        this.myImage = null;
        this.scaleValX = 1;
        this.scaleValY = 1;
        this.cropperOptions = {
            dragMode: 'crop',
            aspectRatio: 1,
            autoCrop: true,
            movable: true,
            zoomable: true,
            scalable: true,
            autoCropArea: 0.8,
        };
    }
    CropperPage.prototype.captureImage = function () {
        var _this = this;
        var options = {
            quality: 100,
            targetWidth: 800,
            targetHeight: 800,
            destinationType: this.camera.DestinationType.DATA_URL,
            encodingType: this.camera.EncodingType.JPEG,
            mediaType: this.camera.MediaType.PICTURE,
            sourceType: this.camera.PictureSourceType.CAMERA,
            correctOrientation: true
        };
        this.camera.getPicture(options).then(function (imageData) {
            _this.myImage = 'data:image/jpeg;base64,' + imageData;
        });
    };
    CropperPage.prototype.captureGallery = function () {
        var _this = this;
        var options = {
            quality: 100,
            targetWidth: 800,
            targetHeight: 800,
            destinationType: this.camera.DestinationType.DATA_URL,
            encodingType: this.camera.EncodingType.JPEG,
            mediaType: this.camera.MediaType.PICTURE,
            sourceType: this.camera.PictureSourceType.PHOTOLIBRARY,
            correctOrientation: true
        };
        this.camera.getPicture(options).then(function (imageData) {
            _this.myImage = 'data:image/jpeg;base64,' + imageData;
        });
    };
    CropperPage.prototype.reset = function () {
        this.angularCropper.cropper.reset();
    };
    CropperPage.prototype.clear = function () {
        // this.angularCropper.cropper.clear();
        this.viewCtrl.dismiss(null);
    };
    CropperPage.prototype.rotate = function () {
        this.angularCropper.cropper.rotate(90);
    };
    CropperPage.prototype.zoom = function (zoomIn) {
        var factor = zoomIn ? 0.1 : -0.1;
        this.angularCropper.cropper.zoom(factor);
    };
    CropperPage.prototype.scaleX = function () {
        this.scaleValX = this.scaleValX * -1;
        this.angularCropper.cropper.scaleX(this.scaleValX);
    };
    CropperPage.prototype.scaleY = function () {
        this.scaleValY = this.scaleValY * -1;
        this.angularCropper.cropper.scaleY(this.scaleValY);
    };
    CropperPage.prototype.move = function (x, y) {
        this.angularCropper.cropper.move(x, y);
    };
    CropperPage.prototype.save = function () {
        var imageData = this.angularCropper.cropper.getCroppedCanvas().toDataURL('image/jpeg', (100 / 100));
        // this.croppedImage = croppedImgB64String;
        if (JSON.stringify(imageData) != "[]") {
            console.log(JSON.stringify(imageData).substr(0, 20));
            var img = {
                id: new Date().getTime(),
                url: imageData,
                data: { nativeURL: imageData },
                base64: imageData,
                source: "galery"
            };
            this.viewCtrl.dismiss(img);
        }
        else {
            this.viewCtrl.dismiss(null);
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('angularCropper'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_2_angular_cropperjs__["AngularCropperjsComponent"])
    ], CropperPage.prototype, "angularCropper", void 0);
    CropperPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-cropper',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/cropper/cropper.html"*/'<ion-header>\n  <ion-toolbar>\n    <ion-buttons start>\n      <button ion-button color="danger" (click)="reset()">\n        Reset\n      </button>\n    </ion-buttons>\n    <ion-buttons end>\n      <button ion-button icon-only color="danger" (click)="clear()">\n        <ion-icon name="close"></ion-icon>\n      </button>\n      <button ion-button icon-only color="secondary" (click)="save()">\n        <ion-icon name="checkmark"></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n \n<ion-content>\n    <button ion-button full (click)="captureGallery()" *ngIf="!myImage">Depuis la galerie</button>\n    <button ion-button full (click)="captureImage()" *ngIf="!myImage">Depuis la camera</button>\n  \n  <angular-cropper #angularCropper [cropperOptions]="cropperOptions" [imageUrl]="myImage" *ngIf="myImage"></angular-cropper>\n \n  <ion-row *ngIf="myImage">\n    <ion-col col-4>\n      <button ion-button outline icon-left color="primary" (click)="zoom(true)">\n        <ion-icon name="add"></ion-icon> Zoom\n      </button>\n    </ion-col>\n    <ion-col col-4>\n      <button ion-button outline icon-left color="primary" (click)="zoom(false)">\n        <ion-icon name="remove"></ion-icon> Zoom\n      </button>\n    </ion-col>\n    <ion-col col-4>\n      <button ion-button outline icon-left (click)="rotate()">\n        <ion-icon name="refresh"></ion-icon> 90 deg\n      </button>\n    </ion-col>\n \n    <ion-col col-2>\n      <button ion-button clear (click)="scaleX()">\n        Flip X\n      </button>\n    </ion-col>\n    <ion-col col-2>\n      <button ion-button clear (click)="scaleY()">\n        Flip Y\n      </button>\n    </ion-col>\n \n    <ion-col col-2>\n      <button ion-button clear icon-only (click)="move(0, -10)">\n        <ion-icon name="arrow-round-up"></ion-icon>\n      </button>\n    </ion-col>\n    <ion-col col-2>\n      <button ion-button clear icon-only (click)="move(0, 10)">\n        <ion-icon name="arrow-round-down"></ion-icon>\n      </button>\n    </ion-col>\n    <ion-col col-2>\n      <button ion-button clear icon-only (click)="move(-10, 0)">\n        <ion-icon name="arrow-round-back"></ion-icon>\n      </button>\n    </ion-col>\n    <ion-col col-2>\n      <button ion-button clear icon-only (click)="move(10, 0)">\n        <ion-icon name="arrow-round-forward"></ion-icon>\n      </button>\n    </ion-col>\n  </ion-row>\n \n  <ion-card *ngIf="croppedImage">\n    <ion-card-header>My Result</ion-card-header>\n    <ion-card-content>\n      <img [src]="croppedImage">\n    </ion-card-content>\n  </ion-card>\n \n</ion-content>'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/cropper/cropper.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_camera__["a" /* Camera */]])
    ], CropperPage);
    return CropperPage;
}());

//# sourceMappingURL=cropper.js.map

/***/ }),

/***/ 351:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ModalTranslateEnterTransition; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_ionic_angular__ = __webpack_require__(3);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var ModalTranslateEnterTransition = /** @class */ (function (_super) {
    __extends(ModalTranslateEnterTransition, _super);
    function ModalTranslateEnterTransition() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ModalTranslateEnterTransition.prototype.init = function () {
        var ele = this.enteringView.pageRef().nativeElement;
        var wrapper = new __WEBPACK_IMPORTED_MODULE_0_ionic_angular__["b" /* Animation */](this.plt, ele.querySelector('.modal-wrapper'));
        wrapper.beforeStyles({ 'transform': 'translateX(100%) scaleX(100%);', 'opacity': 1 });
        wrapper.fromTo('transform', 'translateX(-100%)', 'translateX(0)');
        // wrapper.fromTo('transform', 'scaleX(100%)', 'scaleX(0)');
        wrapper.fromTo('opacity', 1, 1);
        this
            .element(this.enteringView.pageRef())
            .duration(300)
            .easing('cubic-bezier(.1, .7, .1, 1)')
            .add(wrapper);
    };
    return ModalTranslateEnterTransition;
}(__WEBPACK_IMPORTED_MODULE_0_ionic_angular__["p" /* PageTransition */]));

//# sourceMappingURL=enter.js.map

/***/ }),

/***/ 352:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ModalTranslateLeaveTransition; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_ionic_angular__ = __webpack_require__(3);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var ModalTranslateLeaveTransition = /** @class */ (function (_super) {
    __extends(ModalTranslateLeaveTransition, _super);
    function ModalTranslateLeaveTransition() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ModalTranslateLeaveTransition.prototype.init = function () {
        var ele = this.leavingView.pageRef().nativeElement;
        var wrapper = new __WEBPACK_IMPORTED_MODULE_0_ionic_angular__["b" /* Animation */](this.plt, ele.querySelector('.modal-wrapper'));
        var contentWrapper = new __WEBPACK_IMPORTED_MODULE_0_ionic_angular__["b" /* Animation */](this.plt, ele.querySelector('.wrapper'));
        wrapper.beforeStyles({ 'transform': 'translateX(100%)', 'opacity': 1 });
        wrapper.fromTo('transform', 'translateX(0)', 'translateX(-100%)');
        // wrapper.fromTo('width', '0px', '100%');
        wrapper.fromTo('opacity', 1, 1);
        contentWrapper.fromTo('opacity', 1, 0);
        this
            .element(this.leavingView.pageRef())
            .duration(300)
            .easing('cubic-bezier(.1, .7, .1, 1)')
            .add(contentWrapper)
            .add(wrapper);
    };
    return ModalTranslateLeaveTransition;
}(__WEBPACK_IMPORTED_MODULE_0_ionic_angular__["p" /* PageTransition */]));

//# sourceMappingURL=leave.js.map

/***/ }),

/***/ 37:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FaqfilterPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dentart_dentart__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mesannonces_mesannonces__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__notifications_notifications__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__a_savoir_a_savoir__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__formations_formations__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__annonces_annonces__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__uprofil_uprofil__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__menu_menu__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ionic_storage__ = __webpack_require__(15);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











/**
 * Generated class for the FaqfilterPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var FaqfilterPage = /** @class */ (function () {
    function FaqfilterPage(navCtrl, navParams, viewCtrl, platform, modalCtrl, storage, events) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.viewCtrl = viewCtrl;
        this.platform = platform;
        this.modalCtrl = modalCtrl;
        this.storage = storage;
        this.events = events;
        this.theme = [];
        this.selectedTheme = { id: "", slug: "", name: "" };
        this.selectedTypes = { id: "", slug: "", name: "" };
        this.moreTheme = [];
        this.title = "";
        this.activeMulti = 0;
        this.isInMT = 0;
        this.listTyp = [];
        this.isInMTTyp = 0;
        this.moreTyp = [];
        this.activeMultiTyp = 0;
        this.selectBefore = [];
        this.selectCate = [];
        this.selectType = [];
        this.source = '';
        this.user = null;
        this.load = 0;
        this.otherJob = "";
        this.user = navParams.get('user');
        this.theme = navParams.get('theme');
        this.title = navParams.get('title');
        this.selectBefore = navParams.get('selectBefore');
        this.selectCate = navParams.get('selectCate');
        this.selectType = navParams.get('selectType');
        this.listTyp = navParams.get('listTyp');
        this.source = navParams.get('source');
        if (this.source == 'profil_job' && this.selectBefore != null && this.selectBefore.id == 7) {
            this.selectBefore = this.theme[5];
        }
        console.log("selectBefore ==== selectBefore");
        console.log(JSON.stringify(this.selectBefore));
        console.log(this.selectBefore);
        platform.registerBackButtonAction(function () {
            _this.viewCtrl.dismiss({ id: "retour", slug: "", name: "" });
        });
    }
    FaqfilterPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad FaqfilterPage');
        if (this.source != "profil_job") {
            if (this.selectBefore != null && this.selectBefore.length > 0) {
                if (this.selectBefore.id == 'all') {
                    this.selectedTheme = this.selectBefore;
                    this.selectFilter('btn_all', 'icon_btn_all', { id: "all", slug: "", name: "" });
                }
                else if (this.selectBefore.id == 'retour') {
                    //
                }
                else if (this.selectBefore.length > 0) {
                    //this.moreTheme = this.selectBefore;
                    if (this.source == 'form_filter') {
                        // for (let r = 0; r < this.selectBefore.length; r++) {
                        //   if (this.selectBefore[r].id != null && this.selectBefore[r].id != "") {
                        //     console.log("Selecting filter : ")
                        //     this.selectFilterTyp('typ_btn' + this.selectBefore[r].id, 'typ_icon_btn_' + this.selectBefore[r].id, this.selectBefore[r]);
                        //     this.selectFilter('btn' + this.selectBefore[r].id, 'icon_btn_' + this.selectBefore[r].id, this.selectBefore[r]);
                        //   }
                        // }
                        console.log("*************SELECTCAT************");
                        console.log(JSON.stringify(this.selectCate));
                        if (this.selectCate.length > 0) {
                            for (var r = 0; r < this.selectCate.length; r++) {
                                if (this.selectCate[r].id != null && this.selectCate[r].id != "") {
                                    this.selectFilter('btn' + this.selectCate[r].id, 'icon_btn_' + this.selectCate[r].id, this.selectCate[r]);
                                }
                            }
                        }
                        console.log("*************SELECTTYPE************");
                        console.log(JSON.stringify(this.selectType));
                        if (this.selectType.length > 0) {
                            for (var r = 0; r < this.selectType.length; r++) {
                                if (this.selectType[r].id != null && this.selectType[r].id != "") {
                                    this.selectFilterTyp('typ_btn' + this.selectType[r].id, 'typ_icon_btn_' + this.selectType[r].id, this.selectType[r]);
                                }
                            }
                        }
                    }
                    else {
                        for (var r = 0; r < this.selectBefore.length; r++) {
                            this.selectFilter('btn' + this.selectBefore[r].id, 'icon_btn_' + this.selectBefore[r].id, this.selectBefore[r]);
                        }
                    }
                }
                else if (this.selectBefore.id != null && this.selectBefore.id != '') {
                    //this.listFaQSorted = this.listFaQ;
                    this.selectFilter('btn' + this.selectBefore.id, 'icon_btn_' + this.selectBefore.id, this.selectBefore);
                }
            }
        }
        else if (this.selectBefore != null) {
            // this.selectedTheme = this.selectBefore;
        }
    };
    FaqfilterPage.prototype.openMenu = function () {
        var _this = this;
        var menu = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_9__menu_menu__["a" /* MenuPage */], {
            user: this.user
        });
        //let menu = MenuPage;
        menu.onDidDismiss(function (page) {
            _this.platform.registerBackButtonAction(function () {
                _this.viewCtrl.dismiss({ id: "retour", slug: "", name: "" });
            });
            if (page.title == "Partages") {
                //
            }
            else if (page.title == "profil") {
                var adPage = __WEBPACK_IMPORTED_MODULE_8__uprofil_uprofil__["a" /* UprofilPage */];
                _this.navCtrl.push(adPage, {
                    user: _this.user
                }, {
                    animate: true
                });
            }
            else if (page.title == "Annonces") {
                var adPage = __WEBPACK_IMPORTED_MODULE_7__annonces_annonces__["a" /* AnnoncesPage */];
                _this.navCtrl.push(adPage, {
                    user: _this.user
                }, {
                    animate: true
                });
            }
            else if (page.title == "Formations") {
                var formPage = __WEBPACK_IMPORTED_MODULE_6__formations_formations__["a" /* FormationsPage */];
                _this.navCtrl.push(formPage, {
                    user: _this.user
                }, {
                    animate: true
                });
            }
            else if (page.title == "News") {
                var actuPage = __WEBPACK_IMPORTED_MODULE_5__a_savoir_a_savoir__["a" /* ASavoirPage */];
                _this.navCtrl.push(actuPage, {
                    user: _this.user
                }, {
                    animate: true
                });
            }
            else if (page.title == "Mes alertes") {
                var notif = __WEBPACK_IMPORTED_MODULE_4__notifications_notifications__["a" /* NotificationsPage */];
                _this.navCtrl.push(notif, {
                    user: _this.user
                }, {
                    animate: true
                });
            }
            else if (page.title == 'mesannonces') {
                var notif = __WEBPACK_IMPORTED_MODULE_3__mesannonces_mesannonces__["a" /* MesannoncesPage */];
                _this.navCtrl.push(notif, {
                    user: _this.user
                }, {
                    animate: true
                });
            }
            else if (page.title == "deconnexion") {
                _this.events.publish('user:logedOut', _this.user);
                _this.load = 1;
                _this.storage.set('user', null)
                    .then(function (data) {
                    console.log(JSON.stringify(data));
                    setTimeout(function () {
                        _this.load = 0;
                        _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_2__dentart_dentart__["a" /* DentartPage */], {}, {
                            animate: true
                        });
                    }, 500);
                }, function (error) {
                    console.log(JSON.stringify(error));
                });
            }
            else if (page.title == "") {
                //
            }
        });
        menu.present();
    };
    FaqfilterPage.prototype.selectFilter = function (idBtn, idIcon, th) {
        try {
            console.log("**********in theme***********");
            if (this.source == "profil_job") {
                for (var i = 0; i < this.theme.length; i++) {
                    document.getElementById("btn" + this.theme[i].id).style.fontWeight = '100';
                    document.getElementById("icon_btn_" + this.theme[i].id).style.display = 'none';
                    document.getElementById("btn" + this.theme[i].id).style.color = '#a5a5a5';
                }
                if (this.selectedTheme.id == th.id) {
                    // this.otherJob = ""
                    this.selectedTheme = { id: "", slug: "", name: "" };
                }
                else {
                    // this.otherJob = ""
                    console.log("Id BTN === " + idBtn);
                    console.log("Id ICO === " + idIcon);
                    document.getElementById(idIcon).style.display = 'inline';
                    document.getElementById(idBtn).style.fontWeight = 'bold';
                    document.getElementById(idBtn).style.color = '#4ce4b1';
                    this.selectedTheme = th;
                }
            }
            else if (this.title == "Thèmes" || this.title == "Types de formation" || this.title == "Catégories") {
                // if (this.source == "form_filter") {
                document.getElementById('btn_all').style.fontWeight = '100';
                document.getElementById('icon_btn_all').style.display = 'none';
                document.getElementById('btn_all').style.color = '#a5a5a5';
                // }
                for (var i = 0; i < this.theme.length; i++) {
                    document.getElementById("btn" + this.theme[i].id).style.fontWeight = '100';
                    document.getElementById("icon_btn_" + this.theme[i].id).style.display = 'none';
                    document.getElementById("btn" + this.theme[i].id).style.color = '#a5a5a5';
                }
                if (this.selectedTheme.id == th.id) {
                    this.selectedTheme = { id: "", slug: "", name: "" };
                }
                else {
                    console.log("Id BTN === " + idBtn);
                    console.log("Id ICO === " + idIcon);
                    document.getElementById(idIcon).style.display = 'inline';
                    document.getElementById(idBtn).style.fontWeight = 'bold';
                    document.getElementById(idBtn).style.color = '#4ce4b1';
                    this.selectedTheme = th;
                }
            }
            else {
                this.isInMT = 0;
                if (th.id == 'all') {
                    this.moreTheme = [];
                    this.activeMulti = 0;
                    for (var i = 0; i < this.theme.length; i++) {
                        document.getElementById("btn" + this.theme[i].id).style.fontWeight = '100';
                        document.getElementById("icon_btn_" + this.theme[i].id).style.display = 'none';
                        document.getElementById("btn" + this.theme[i].id).style.color = '#a5a5a5';
                    }
                    document.getElementById(idIcon).style.display = 'inline';
                    document.getElementById(idBtn).style.fontWeight = 'bold';
                    document.getElementById(idBtn).style.color = '#4ce4b1';
                    this.selectedTheme = {
                        id: 'all',
                        slug: "",
                        name: ""
                    };
                }
                else {
                    //icon_btn_all
                    document.getElementById('btn_all').style.fontWeight = '100';
                    document.getElementById('icon_btn_all').style.display = 'none';
                    document.getElementById('btn_all').style.color = '#a5a5a5';
                    this.selectedTheme = {
                        id: '',
                        slug: "",
                        name: ""
                    };
                    this.activeMulti = 1;
                    console.log(idBtn + " =*********= " + idIcon);
                    console.log(JSON.stringify(this.moreTheme));
                    if (this.moreTheme.length == 0) {
                        this.moreTheme.push(th);
                        document.getElementById(idIcon).style.display = 'inline';
                        document.getElementById(idBtn).style.fontWeight = 'bold';
                        document.getElementById(idBtn).style.color = '#4ce4b1';
                    }
                    else if (this.moreTheme.length > 0) {
                        var lim = this.moreTheme.length;
                        for (var c = 0; c < lim; c++) {
                            if (th.id == this.moreTheme[c].id) {
                                console.log("**************ENLEVER************", th.id);
                                document.getElementById(idBtn).style.fontWeight = '100';
                                document.getElementById(idIcon).style.display = 'none';
                                document.getElementById(idBtn).style.color = '#a5a5a5';
                                this.moreTheme.splice(c, 1);
                                this.isInMT = 1;
                                break;
                            }
                            else if (th.id != this.moreTheme[c].id && c == (lim - 1)) {
                                console.log("Found");
                                this.moreTheme.splice((this.moreTheme.length - 1), 0, th);
                                document.getElementById(idIcon).style.display = 'inline';
                                document.getElementById(idBtn).style.fontWeight = 'bold';
                                document.getElementById(idBtn).style.color = '#4ce4b1';
                                this.isInMT = 3;
                            }
                        }
                    }
                    console.log("**************MORE THEME************");
                    console.log(JSON.stringify(this.moreTheme));
                }
            }
        }
        catch (error) {
            console.log(JSON.stringify(error));
        }
    };
    FaqfilterPage.prototype.selectFilterTyp = function (idBtn, idIcon, th) {
        try {
            console.log("Selected btn : " + idBtn + " ===== icon " + idIcon);
            this.isInMTTyp = 0;
            console.log(th.id + " | " + idBtn + " == " + idIcon);
            if (th.id == 'all') {
                this.moreTyp = [];
                this.activeMultiTyp = 0;
                for (var i = 0; i < this.listTyp.length; i++) {
                    document.getElementById("typ_btn" + this.listTyp[i].id).style.fontWeight = '100';
                    document.getElementById("typ_icon_btn_" + this.listTyp[i].id).style.display = 'none';
                    document.getElementById("typ_btn" + this.listTyp[i].id).style.color = '#a5a5a5';
                }
                if (this.selectedTypes.id == 'all') {
                    this.selectedTypes = { id: "", slug: "", name: "" };
                }
                else {
                    document.getElementById(idIcon).style.display = 'inline';
                    document.getElementById(idBtn).style.fontWeight = 'bold';
                    document.getElementById(idBtn).style.color = '#4ce4b1';
                    this.selectedTypes = {
                        id: 'all',
                        slug: "",
                        name: ""
                    };
                }
                this.moreTheme = [];
                this.activeMulti = 0;
                for (var i = 0; i < this.theme.length; i++) {
                    document.getElementById("btn" + this.theme[i].id).style.fontWeight = '100';
                    document.getElementById("icon_btn_" + this.theme[i].id).style.display = 'none';
                    document.getElementById("btn" + this.theme[i].id).style.color = '#a5a5a5';
                }
                document.getElementById(idIcon).style.display = 'inline';
                document.getElementById(idBtn).style.fontWeight = 'bold';
                document.getElementById(idBtn).style.color = '#4ce4b1';
                this.selectedTheme = {
                    id: 'all',
                    slug: "",
                    name: ""
                };
            }
            else {
                //icon_btn_all
                document.getElementById('btn_all').style.fontWeight = '100';
                document.getElementById('icon_btn_all').style.display = 'none';
                document.getElementById('btn_all').style.color = '#a5a5a5';
                this.selectedTypes = {
                    id: '',
                    slug: "",
                    name: ""
                };
                this.activeMultiTyp = 1;
                if (this.moreTyp.length == 0) {
                    this.moreTyp.push(th);
                    document.getElementById(idIcon).style.display = 'inline';
                    document.getElementById(idBtn).style.fontWeight = 'bold';
                    document.getElementById(idBtn).style.color = '#4ce4b1';
                }
                else if (this.moreTyp.length > 0) {
                    var lim = this.moreTyp.length;
                    for (var c = 0; c < lim; c++) {
                        if (th.id == this.moreTyp[c].id) {
                            document.getElementById(idBtn).style.fontWeight = '100';
                            document.getElementById(idIcon).style.display = 'none';
                            document.getElementById(idBtn).style.color = '#a5a5a5';
                            this.moreTyp.splice(c, 1);
                            this.isInMTTyp = 1;
                            break;
                        }
                        else if (th.id != this.moreTyp[c].id && c == (lim - 1)) {
                            console.log("Found");
                            this.moreTyp.splice((this.moreTyp.length - 1), 0, th);
                            document.getElementById(idIcon).style.display = 'inline';
                            document.getElementById(idBtn).style.fontWeight = 'bold';
                            document.getElementById(idBtn).style.color = '#4ce4b1';
                            this.isInMTTyp = 3;
                            break;
                        }
                    }
                    console.log(JSON.stringify(this.moreTyp));
                }
            }
            console.log("Selected types");
            console.log(JSON.stringify(this.moreTyp));
        }
        catch (error) {
            console.log(JSON.stringify(error));
        }
    };
    //retour
    FaqfilterPage.prototype.retour = function () {
        this.viewCtrl.dismiss(this.selectBefore);
    };
    FaqfilterPage.prototype.dismiss = function () {
        if (this.source == 'profil_job') {
            if (this.selectedTheme.id == 6) {
                this.viewCtrl.dismiss({
                    job: { id: 7, slug: '', name: this.otherJob }
                });
            }
            else {
                this.viewCtrl.dismiss({
                    job: this.selectedTheme
                });
            }
        }
        else if (this.source == 'form_filter') {
            var selectCat = this.selectedTheme;
            var selectTyp = this.selectedTypes;
            if (this.activeMulti == 1) {
                selectCat = this.moreTheme;
            }
            if (this.activeMultiTyp == 1) {
                selectTyp = this.moreTyp;
            }
            this.viewCtrl.dismiss({
                selectedCat: selectCat,
                selectedTyp: selectTyp
            });
        }
        else if (this.title == "Thèmes" || this.title == "Types de formation" || this.title == "Catégories") {
            this.viewCtrl.dismiss(this.selectedTheme);
        }
        else {
            console.log("***************DISMISS*************");
            console.log(this.activeMulti);
            if (this.activeMulti == 0) {
                console.log(JSON.stringify(this.selectedTheme));
                this.viewCtrl.dismiss(this.selectedTheme);
            }
            else {
                if (this.moreTheme !== null && this.moreTheme.length == 0) {
                    this.viewCtrl.dismiss({ "id": "all", "slug": "", "name": "" });
                }
                else {
                    this.viewCtrl.dismiss(this.moreTheme);
                }
            }
        }
    };
    FaqfilterPage.prototype.noFilter = function () {
        if (this.source == 'form_filter') {
            this.viewCtrl.dismiss({
                selectedCat: { id: "", slug: "", name: "" },
                selectedTyp: { id: "", slug: "", name: "" }
            });
        }
        else {
            this.viewCtrl.dismiss({ id: "all", slug: "", name: "" });
        }
    };
    FaqfilterPage.prototype.otherJobText = function () {
        console.log(this.otherJob);
    };
    FaqfilterPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-faqfilter',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/faqfilter/faqfilter.html"*/'<ion-content class="pr">\n\n  <ion-row ion-fixed class="header">\n    <ion-col></ion-col>\n    <ion-col>\n      <ion-label class="da">\n        <img class="logo" src="assets/imgs/da_image/logo-dentart.png">\n        <span class="bold">Dent</span><span class="fine">Art</span>\n      </ion-label>\n    </ion-col>\n    <ion-col></ion-col>\n\n  </ion-row>\n\n  <ion-grid class="container">\n\n    <ion-row *ngIf="source != \'profil_job\'" class="filter-title-ctn-to-center">\n      <ion-label class="filter-title">\n        Catégories\n      </ion-label>\n    </ion-row>\n\n    <div *ngIf="source == \'form_filter\' && listTyp.length > 1">\n      <ion-row class="btn-ctn-left">\n        <button id="btn_all" ion-button class="btn-blue-gradient" (click)="selectFilterTyp(\'btn_all\',\'icon_btn_all\', {id: \'all\', slug: \'\', name: \'\'});">\n          Tous\n          <ion-icon id="icon_btn_all" class="icon-checked" color="gris">\n            <img class="check-icon" src="../../assets/imgs/da_image/Group.png" />\n          </ion-icon>\n        </button>\n      </ion-row>\n\n      <ion-row *ngFor="let th1 of listTyp" class="btn-ctn-left">\n        <button id="typ_btn{{th1.id}}" ion-button class="btn-blue-gradient" (click)="selectFilterTyp(\'typ_btn\'+th1.id,\'typ_icon_btn_\'+th1.id, th1);">\n          {{th1.name}}\n          <ion-icon id="typ_icon_btn_{{th1.id}}" class="icon-checked" color="gris">\n            <img class="check-icon" src="../../assets/imgs/da_image/Group.png" />\n          </ion-icon>\n        </button>\n      </ion-row>\n\n    </div>\n\n    <ion-row class="btn-ctn-left" *ngIf="source != \'profil_job\' && source != \'form_filter\'">\n      <button id="btn_all" ion-button class="btn-blue-gradient" (click)="selectFilter(\'btn_all\',\'icon_btn_all\', {id: \'all\', slug: \'\', name: \'\'});">\n        Tous\n        <ion-icon id="icon_btn_all" class="icon-checked" color="gris">\n          <img class="check-icon" src="../../assets/imgs/da_image/Group.png" />\n        </ion-icon>\n      </button>\n    </ion-row>\n\n    <ion-row *ngFor="let th of theme" class="btn-ctn-left">\n      <button id="btn{{th.id}}" ion-button class="btn-blue-gradient" (click)="selectFilter(\'btn\'+th.id,\'icon_btn_\'+th.id, th);">\n        {{th.name}}\n        <ion-icon id="icon_btn_{{th.id}}" class="icon-checked" color="gris">\n          <img class="check-icon" src="../../assets/imgs/da_image/Group.png" />\n        </ion-icon>\n      </button>\n    </ion-row>\n\n  </ion-grid>\n\n  <ion-row *ngIf="source == \'profil_job\' && selectedTheme.id == 6" class="other-job-row">\n    <ion-input #myInput type="text" class="classJob" id="myInput" placeholder="Votre profession" [(ngModel)]="otherJob"\n      name="otherJob" (input)="otherJobText();"></ion-input>\n  </ion-row>\n\n  <ion-row class="bottom-valider">\n\n    <button ion-button round class="btn-blue-gradient-round anl" (click)="noFilter();">Annuler</button>\n    <button ion-button round class="btn-blue-gradient-round vld" (click)="dismiss();">Valider</button>\n\n  </ion-row>\n\n  <ion-row class="bottom-annuler">\n\n  </ion-row>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/faqfilter/faqfilter.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_10__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["f" /* Events */]])
    ], FaqfilterPage);
    return FaqfilterPage;
}());

//# sourceMappingURL=faqfilter.js.map

/***/ }),

/***/ 38:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SharemodalPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_social_sharing__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_instagram__ = __webpack_require__(221);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_http__ = __webpack_require__(6);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the SharemodalPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var SharemodalPage = /** @class */ (function () {
    function SharemodalPage(navCtrl, navParams, viewCtrl, platform, socialSharing, modalCtrl, instagram, http) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.viewCtrl = viewCtrl;
        this.platform = platform;
        this.socialSharing = socialSharing;
        this.modalCtrl = modalCtrl;
        this.instagram = instagram;
        this.http = http;
        this.canShareViaInstagram = false;
        this.canShareViaFacebook = false;
        this.canShareViaWhatsapp = false;
        this.canShareViaTwitter = false;
        this.file = [];
        this.bodyText = "";
        this.link = "";
        this.perma_link = "";
        this.dentart_icon = "https://www.dentart.fr/wp-content/uploads/2018/11/logo.jpg";
        this.file = navParams.get("file");
        this.bodyText = navParams.get("bodyText");
        this.link = navParams.get("link");
        this.perma_link = navParams.get("perma_link");
        platform.registerBackButtonAction(function () {
            _this.viewCtrl.dismiss({
                shared: false
            });
        });
        this.socialSharing.canShareVia('instagram')
            .then(function (data) {
            console.log("Can we share via instagram");
            console.log(JSON.stringify(data));
            _this.canShareViaInstagram = true;
        }, function (error) {
            console.log("We can't share via instagram");
            console.log(JSON.stringify(error));
        });
        this.socialSharing.canShareVia('facebook')
            .then(function (data) {
            console.log("Can we share via facebook");
            console.log(JSON.stringify(data));
            _this.canShareViaFacebook = true;
        }, function (error) {
            console.log("We can't share via facebook");
            console.log(JSON.stringify(error));
        });
        this.socialSharing.canShareVia('com.facebook.lite')
            .then(function (data) {
            console.log("Can we share via facebook lite");
            console.log(JSON.stringify(data));
            _this.canShareViaFacebook = true;
        }, function (error) {
            console.log("We can't share via facebook lite");
            console.log(JSON.stringify(error));
        });
        this.socialSharing.canShareVia('whatsapp')
            .then(function (data) {
            console.log("Can we share via whatsapp");
            console.log(JSON.stringify(data));
            _this.canShareViaWhatsapp = true;
        }, function (error) {
            console.log("We can't share via whatsapp");
            console.log(JSON.stringify(error));
        });
        this.socialSharing.canShareVia('twitter')
            .then(function (data) {
            console.log("Can we share via twitter");
            console.log(JSON.stringify(data));
            _this.canShareViaTwitter = true;
        }, function (error) {
            console.log("We can't share via twitter");
            console.log(JSON.stringify(error));
        });
    }
    SharemodalPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad SharemodalPage');
    };
    SharemodalPage.prototype.share = function () {
        var _this = this;
        this.socialSharing.share(this.bodyText, "DentArt", null, this.perma_link)
            .then(function (data) {
            _this.viewCtrl.dismiss({
                shared: true
            });
        })
            .catch(function (error) {
            _this.viewCtrl.dismiss({
                shared: false
            });
        });
    };
    SharemodalPage.prototype.shareViaInstagramStory = function () {
        var urlFileToShare = "";
        if (this.file.length > 0) {
            urlFileToShare = this.file[0];
        }
        if (urlFileToShare != "") {
            var img = this.http.downloadFile(urlFileToShare, {}, {}, new Date().getTime() + ".png")
                .then(function (entryFile) { }, function (error) {
                console.log("Error downloading the image");
                console.log(JSON.stringify(error));
            });
            this.instagram.share(null, this.bodyText)
                .then(function () {
                console.log('Shared!');
            })
                .catch(function (error) {
                console.error(JSON.stringify(error));
            });
        }
    };
    SharemodalPage.prototype.shareViaFacebookSharer = function () {
        console.log("Body Text");
        console.log(this.escapeHtml2(this.bodyText));
        console.log("Files : ");
        console.log(JSON.stringify(this.file));
        var quote = this.escapeHtml2(this.bodyText);
        var fbHostSharer = "https://www.facebook.com/sharer/sharer.php?kid_directed_site=0&sdk=joey&u=" + this.perma_link + "&display=popup&ref=plugin&src=share_button&quote=" + quote;
        var urlToOpen = "https://www.facebook.com/sharer/sharer.php?kid_directed_site=0&sdk=joey&u=http%3A%2F%2Fdentart.devforge.eu%2Ffaqs%2F28290-2%2F&display=popup&ref=plugin&src=share_button";
        console.log(fbHostSharer);
        var sharingWin = window.open(fbHostSharer, '_blank');
        this.viewCtrl.dismiss({
            shared: true
        });
    };
    SharemodalPage.prototype.escapeHtml2 = function (unsafe) {
        return unsafe
            .replace(/&/g, "&amp;")
            .replace(/</g, "&lt;")
            .replace(/>/g, "&gt;")
            .replace(/"/g, "&quot;");
        // .replace(/'/g, "&#039;");
    };
    SharemodalPage.prototype.escapeHtml = function (html) {
        var text = document.createTextNode(html);
        var p = document.createElement('div');
        p.innerText = html;
        return p.innerHTML;
    };
    SharemodalPage.prototype.shareViaFacebook = function () {
        var _this = this;
        console.log(JSON.stringify(this.file));
        console.log(this.bodyText);
        console.log(this.link);
        var fileToShare = this.file.length > 0 ? this.file[0] : null;
        var linkToShare = this.link != "" ? this.link : null;
        this.socialSharing.shareViaFacebookWithPasteMessageHint(this.bodyText, null, fileToShare, this.bodyText)
            .then(function (data) {
            console.log("Shared in facebook ");
            console.log(JSON.stringify(data));
            _this.viewCtrl.dismiss({
                shared: true
            });
        }, function (error) {
            console.log("Error sharing to facebook");
            console.log(JSON.stringify(error));
            _this.viewCtrl.dismiss({
                shared: false
            });
        });
    };
    SharemodalPage.prototype.shareViaTwitter = function () {
        var _this = this;
        console.log(JSON.stringify(this.file));
        console.log(this.bodyText);
        console.log(this.link);
        var fileToShare = this.file.length > 0 ? this.file[0] : null;
        var linkToShare = this.link != "" ? this.link : null;
        this.socialSharing.shareViaTwitter(this.bodyText, fileToShare, this.perma_link)
            .then(function (data) {
            console.log("Shared in Twitter ");
            console.log(JSON.stringify(data));
            _this.viewCtrl.dismiss({
                shared: true
            });
        }, function (error) {
            console.log("Error sharing to facebook");
            console.log(JSON.stringify(error));
            _this.viewCtrl.dismiss({
                shared: false
            });
        });
    };
    SharemodalPage.prototype.shareViaWhatsapp = function () {
        var _this = this;
        console.log(JSON.stringify(this.file));
        console.log(this.bodyText);
        console.log(this.link);
        var fileToShare = this.file.length > 0 ? this.file[0] : null;
        var linkToShare = this.link != "" ? this.link :
            this.socialSharing.shareViaWhatsApp(this.bodyText, fileToShare, this.perma_link)
                .then(function (data) {
                console.log("Shared in Whatsapp ");
                console.log(JSON.stringify(data));
                _this.viewCtrl.dismiss({
                    shared: true
                });
            }, function (error) {
                console.log("Error sharing to facebook");
                console.log(JSON.stringify(error));
                _this.viewCtrl.dismiss({
                    shared: false
                });
            });
    };
    SharemodalPage.prototype.shareViaInstagram = function () {
        var _this = this;
        console.log(JSON.stringify(this.file));
        console.log(this.bodyText);
        console.log(this.link);
        var fileToShare = this.file.length > 0 ? this.file[0] : null;
        var linkToShare = this.link != "" ? this.link : null;
        // let quote = " << " + this.perma_link + " >> "
        // quote += (fileToShare != null ? " << " + fileToShare + " >> " : "")
        var quote = "";
        // quote += (fileToShare != null ? " << " + fileToShare + " >> " : "")
        quote += this.bodyText + " ";
        quote += " " + this.perma_link + " ";
        this.socialSharing.shareViaInstagram(quote, null)
            .then(function (data) {
            console.log("Shared in Instagram ");
            console.log(JSON.stringify(data));
            _this.viewCtrl.dismiss({
                shared: true
            });
        }, function (error) {
            console.log("Error sharing to facebook");
            console.log(JSON.stringify(error));
            _this.viewCtrl.dismiss({
                shared: false
            });
        });
    };
    SharemodalPage.prototype.shareViaSMS = function () {
        var _this = this;
        this.socialSharing.shareViaSMS(this.bodyText + " " + this.perma_link, "")
            .then(function (data) {
            _this.viewCtrl.dismiss({
                shared: true
            });
        }, function (error) {
            _this.viewCtrl.dismiss({
                shared: false
            });
        });
    };
    SharemodalPage.prototype.shareViaGMAIL = function () {
        var _this = this;
        this.socialSharing.shareViaEmail(this.bodyText + " " + this.perma_link, "DentArt", [""], [""], [""], this.file)
            .then(function (data) {
            _this.viewCtrl.dismiss({
                shared: true
            });
        }, function (error) {
            _this.viewCtrl.dismiss({
                shared: false
            });
        });
    };
    SharemodalPage.prototype.anniler = function () {
        this.viewCtrl.dismiss({
            shared: false
        });
    };
    SharemodalPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-sharemodal',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/sharemodal/sharemodal.html"*/'<ion-content class="pr">\n\n  <div class="container">\n\n    <div class="share-title">Partager sur les réseaux sociaux</div>\n    <div class="share-ctn">\n      <div class="share-elem" (click)="shareViaFacebookSharer()">\n        <img class="share-icon" src="../../assets/icon/facebook-share.png" />\n        <div class="share-name">Facebook</div>\n      </div>\n      <div class="share-elem" *ngIf="canShareViaTwitter" (click)="shareViaTwitter()">\n        <img class="share-icon" src="../../assets/icon/twitter.svg" />\n        <div class="share-name">Twitter</div>\n      </div>\n      <div class="share-elem" *ngIf="canShareViaWhatsapp" (click)="shareViaWhatsapp()">\n        <img class="share-icon" src="../../assets/icon/whatsapp-share.png" />\n        <div class="share-name">WhatsAPP</div>\n      </div>\n      <div class="share-elem" *ngIf="canShareViaInstagram" (click)="shareViaInstagram()">\n        <img class="share-icon" src="../../assets/icon/instagram-share.png" />\n        <div class="share-name">Instagram</div>\n      </div>\n      <!-- <div class="share-elem" *ngIf="canShareViaInstagram" (click)="shareViaInstagramStory()">\n        <img class="share-icon" src="../../assets/icon/instagram-share.png" />\n        <div class="share-name">Message</div>\n      </div> -->\n      <div class="share-elem" (click)="shareViaSMS()">\n        <img class="share-icon" src="../../assets/icon/sms.bubble.png" />\n        <div class="share-name">SMS</div>\n      </div>\n      <div class="share-elem" (click)="shareViaGMAIL()">\n        <img class="share-icon" src="../../assets/icon/mail.icon.png" />\n        <div class="share-name">E-Mail</div>\n      </div>\n    </div>\n    <div class="autre-btn" (click)="share()">\n      Autres ?\n    </div>\n    <div class="btn-annuler" (click)="anniler()">Annuler</div>\n  </div>\n\n</ion-content>'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/sharemodal/sharemodal.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_social_sharing__["a" /* SocialSharing */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_instagram__["a" /* Instagram */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_http__["a" /* HTTP */]])
    ], SharemodalPage);
    return SharemodalPage;
}());

//# sourceMappingURL=sharemodal.js.map

/***/ }),

/***/ 46:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AnnonceDetailsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mailto_mailto__ = __webpack_require__(87);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_call_number__ = __webpack_require__(76);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_toast__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__imageviewer_imageviewer__ = __webpack_require__(67);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








/**
 * Generated class for the AnnonceDetailsPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AnnonceDetailsPage = /** @class */ (function () {
    function AnnonceDetailsPage(navCtrl, navParams, modalCtrl, callNumber, globals, http, toast, platform) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.modalCtrl = modalCtrl;
        this.callNumber = callNumber;
        this.globals = globals;
        this.http = http;
        this.toast = toast;
        this.platform = platform;
        this.nb_img_ad = [];
        this.active_image = 1;
        this.contactAuthor = false;
        this.user = navParams.get('user');
        this.ad = navParams.get('ad');
        this.ad.images_count = 0;
        console.log(JSON.stringify(this.user));
        console.log(JSON.stringify(this.ad));
        // faq_image_1
        if (this.ad.ad_image_1 != null && this.ad.ad_image_1 != '') {
            this.nb_img_ad.push('1');
            this.ad.images_count += 1;
        }
        if (this.ad.ad_image_2 != null && this.ad.ad_image_2 != '') {
            this.nb_img_ad.push('2');
            this.ad.images_count += 1;
        }
        if (this.ad.ad_image_3 != null && this.ad.ad_image_3 != '') {
            this.nb_img_ad.push('3');
            this.ad.images_count += 1;
        }
        if (this.ad.ad_image_4 != null && this.ad.ad_image_4 != '') {
            this.nb_img_ad.push('4');
            this.ad.images_count += 1;
        }
        ///
        if (this.ad.faq_image_1 != null && this.ad.faq_image_1 != '') {
            this.nb_img_ad.push('1');
            this.ad.images_count += 1;
        }
        if (this.ad.faq_image_2 != null && this.ad.faq_image_2 != '') {
            this.nb_img_ad.push('2');
            this.ad.images_count += 1;
        }
        if (this.ad.faq_image_3 != null && this.ad.faq_image_3 != '') {
            this.nb_img_ad.push('3');
            this.ad.images_count += 1;
        }
        if (this.ad.faq_image_4 != null && this.ad.faq_image_4 != '') {
            this.nb_img_ad.push('4');
            this.ad.images_count += 1;
        }
        this.active_image = parseInt(this.nb_img_ad[0]);
        platform.registerBackButtonAction(function () {
            navCtrl.pop();
        });
    }
    AnnonceDetailsPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AnnonceDetailsPage');
    };
    AnnonceDetailsPage.prototype.slideChanged = function () {
        console.log(this.mySlider.getActiveIndex());
        if (this.mySlider.getActiveIndex() < this.nb_img_ad.length) {
            this.active_image = parseInt(this.nb_img_ad[this.mySlider.getActiveIndex()]);
        }
    };
    AnnonceDetailsPage.prototype.precedent = function () {
        this.navCtrl.pop();
    };
    AnnonceDetailsPage.prototype.showMailTo = function () {
        var _this = this;
        var mailto = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_2__mailto_mailto__["a" /* MailtoPage */], {
            user: this.user,
            ad: this.ad,
            mail: this.ad.author_infos.user_email,
            post_id: this.ad.id,
            object: this.ad.title
        });
        mailto.onDidDismiss(function (data) {
            _this.platform.registerBackButtonAction(function () {
                _this.navCtrl.pop();
            });
            console.log(JSON.stringify(data));
        });
        mailto.present();
    };
    AnnonceDetailsPage.prototype.callAuthor = function () {
        if (this.ad.phone != '') {
            this.callNumber.callNumber(this.ad.phone, true)
                .then(function (res) { return console.log('Launched dialer!', res); })
                .catch(function (err) { return console.log('Error launching dialer', err); });
        }
        else {
            this.toast.show("Pas de téléphone pour cette annonce !", "3000", "bottom")
                .subscribe(function (t) {
                console.log(JSON.stringify(t));
            });
        }
    };
    AnnonceDetailsPage.prototype.report = function () {
        var _this = this;
        //
        //repportFaQ
        this.http.post(this.globals.variables.urls.repportFaQ, {
            "user_id": this.user.id_User != null ? this.user.id_User : this.user.id,
            "post_id": this.ad.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log(JSON.stringify(res));
            if (res.status == "ok") {
                if (_this.ad.user_report == 0) {
                    _this.ad.user_report = 1;
                    _this.toast.show("Vous avez signalé cette annonce", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
                else {
                    _this.ad.user_report = 0;
                    _this.toast.show("Votre signalisation a été annulée", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
            }
            else {
                console.log(JSON.stringify(res));
            }
            //console.log(JSON.stringify(data.data));
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    AnnonceDetailsPage.prototype.viewImage = function (img) {
        var _this = this;
        var iv = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_7__imageviewer_imageviewer__["a" /* ImageviewerPage */], {
            img: img
        });
        iv.onDidDismiss(function () {
            _this.platform.registerBackButtonAction(function () {
                _this.navCtrl.pop();
            });
        });
        iv.present();
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('mySlider'),
        __metadata("design:type", Object)
    ], AnnonceDetailsPage.prototype, "mySlider", void 0);
    AnnonceDetailsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-annonce-details',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/annonce-details/annonce-details.html"*/'<ion-content class="pr">\n\n  <ion-row ion-fixed class="top-gc">\n    <div (click)="precedent();" class="back-ctn-1">\n      <img class="back-icon" src="../../assets/icon/back-117bcf.svg">\n      <div class="gc">\n        Retour\n      </div>\n    </div>\n    <div class="back-ctn-2" (click)="report();" *ngIf="(ad.author_infos.id != null && ad.author_infos.id != user.id_User) || (ad.author_infos.id_User != null && ad.author_infos.id_User != user.id_User)">\n\n      <div class="alert-faq">Signaler </div>\n      <img class="icon-report" src="{{ad.user_report == 1 ? \'../../assets/icon/exclamation-red.svg\' : \'../../assets/icon/exclamation-blue.svg\'}}" />\n\n    </div>\n  </ion-row>\n\n  <div class="container">\n\n    <ion-grid>\n\n      <ion-row class="faq-det-grid">\n\n        <ion-col>\n\n          <ion-row *ngIf="ad.images_count > 0" class="img-bg">\n\n            <ion-col>\n              <ion-slides #mySlider (ionSlideDidChange)="slideChanged()">\n\n                <!-- <ion-slide >\n                  <span class="img-info">Pas d\'images</span>\n                </ion-slide> -->\n\n                <!-- faq_image_1 -->\n\n                <ion-slide class="like-slide" *ngIf="ad.ad_image_1 != null && ad.ad_image_1 != \'\'">\n                  <img class="like-bg" src="{{ad.ad_image_1}}" (click)="viewImage(ad.ad_image_1)">\n                </ion-slide>\n\n                <ion-slide class="like-slide" *ngIf="ad.ad_image_2 != null && ad.ad_image_2 != \'\'">\n                  <img class="like-bg" src="{{ad.ad_image_2}}" (click)="viewImage(ad.ad_image_2)">\n                </ion-slide>\n\n                <ion-slide class="like-slide" *ngIf="ad.ad_image_3 != null && ad.ad_image_3 != \'\'">\n                  <img class="like-bg" src="{{ad.ad_image_3}}" (click)="viewImage(ad.ad_image_3)">\n                </ion-slide>\n\n                <ion-slide class="like-slide" *ngIf="ad.ad_image_4 != null && ad.ad_image_4 != \'\'">\n                  <img class="like-bg" src="{{ad.ad_image_4}}" (click)="viewImage(ad.ad_image_3)">\n                </ion-slide>\n\n                <!--  -->\n                <ion-slide class="like-slide" *ngIf="ad.faq_image_1 != null && ad.faq_image_1 != \'\'">\n                  <img class="like-bg" src="{{ad.faq_image_1}}" (click)="viewImage(ad.faq_image_1)">\n                </ion-slide>\n\n                <ion-slide class="like-slide" *ngIf="ad.faq_image_2 != null && ad.faq_image_2 != \'\'">\n                  <img class="like-bg" src="{{ad.faq_image_2}}" (click)="viewImage(ad.faq_image_2)">\n                </ion-slide>\n\n                <ion-slide class="like-slide" *ngIf="ad.faq_image_3 != null && ad.faq_image_3 != \'\'">\n                  <img class="like-bg" src="{{ad.faq_image_3}}" (click)="viewImage(ad.faq_image_3)">\n                </ion-slide>\n\n                <ion-slide class="like-slide" *ngIf="ad.faq_image_4 != null && ad.faq_image_4 != \'\'">\n                  <img class="like-bg" src="{{ad.faq_image_4}}" (click)="viewImage(ad.faq_image_4)">\n                </ion-slide>\n\n              </ion-slides>\n              <div class="img-slide">\n                <ion-label class="margin-a">\n                  <div *ngIf="ad.ad_image_1 != null && ad.ad_image_1 != \'\'" class="{{active_image == 1 ? \'vertdc\' : \'greydc\'}}"></div>\n                  <div *ngIf="ad.ad_image_2 != null && ad.ad_image_2 != \'\'" class="{{active_image == 2 ? \'vertdc\' : \'greydc\'}}"></div>\n                  <div *ngIf="ad.ad_image_3 != null && ad.ad_image_3 != \'\'" class="{{active_image == 3 ? \'vertdc\' : \'greydc\'}}"></div>\n                  <div *ngIf="ad.ad_image_4 != null && ad.ad_image_4 != \'\'" class="{{active_image == 4 ? \'vertdc\' : \'greydc\'}}"></div>\n\n                  <div *ngIf="ad.faq_image_1 != null && ad.faq_image_1 != \'\'" class="{{active_image == 1 ? \'vertdc\' : \'greydc\'}}"></div>\n                  <div *ngIf="ad.faq_image_2 != null && ad.faq_image_2 != \'\'" class="{{active_image == 2 ? \'vertdc\' : \'greydc\'}}"></div>\n                  <div *ngIf="ad.faq_image_3 != null && ad.faq_image_3 != \'\'" class="{{active_image == 3 ? \'vertdc\' : \'greydc\'}}"></div>\n                  <div *ngIf="ad.faq_image_4 != null && ad.faq_image_4 != \'\'" class="{{active_image == 4 ? \'vertdc\' : \'greydc\'}}"></div>\n                </ion-label>\n              </div>\n            </ion-col>\n\n          </ion-row>\n\n          <ion-row class="gc-ctn">\n            <ion-col>\n              <ion-row>\n                <ion-label class="gc-label">\n                  <span class="titre-faq">{{ad.title}}<br></span>\n                  <div class="sep-title"></div>\n                  <span class="cat">{{ad.category.name}}<br></span>\n                  <span class="address">{{ad.address}}<br></span>\n                  <span *ngIf="ad.price > 0" class="price">{{ad.price}} €<br></span>\n                  <div class="sep"></div>\n                  <span [innerHtml]="ad.description"></span>\n                </ion-label>\n              </ion-row>\n              <ion-row class="gc-ctn-2">\n                <ion-avatar>\n                  <img class="img-profil" src="{{ad.author_infos.avatar != \'\' ? ad.author_infos.avatar : \'assets/imgs/avatar/avatar_h.png\'}}">\n                </ion-avatar>\n\n                <ion-label class="text-align-left">\n                  <span class="bold-name">\n                    {{ad.author_infos.pseudo}}<br>\n                  </span>\n                  <span class="fine-lieu">\n                    {{ad.author_infos.job}} - {{ad.author_infos.address}}\n                  </span>\n                </ion-label>\n              </ion-row>\n\n              <ion-row class="btn-ctn">\n                <ion-col (click)="showMailTo();">\n                  <button ion-button round class="btn-blue-gradient">\n                    <img class="ad-icon" src="../../assets/icon/email-4ce4b1.svg">\n                    <span> Contacter</span>\n                  </button>\n                </ion-col>\n                <ion-col (click)="callAuthor();">\n                  <button ion-button round class="btn-blue-gradient">\n                    <img class="ad-icon" src="../../assets/icon/call-4ce4b1.svg">\n                    <span> Appeler</span>\n                  </button>\n                </ion-col>\n              </ion-row>\n\n            </ion-col>\n          </ion-row>\n\n        </ion-col>\n      </ion-row>\n\n\n\n    </ion-grid>\n\n  </div>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/annonce-details/annonce-details.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_call_number__["a" /* CallNumber */],
            __WEBPACK_IMPORTED_MODULE_4__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_native_toast__["a" /* Toast */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */]])
    ], AnnonceDetailsPage);
    return AnnonceDetailsPage;
}());

//# sourceMappingURL=annonce-details.js.map

/***/ }),

/***/ 52:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PhotopopupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_cropperjs__ = __webpack_require__(78);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_cropperjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_angular_cropperjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_camera__ = __webpack_require__(79);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the PhotopopupPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PhotopopupPage = /** @class */ (function () {
    function PhotopopupPage(navCtrl, viewCtrl, camera) {
        this.navCtrl = navCtrl;
        this.viewCtrl = viewCtrl;
        this.camera = camera;
        this.croppedImage = null;
    }
    PhotopopupPage.prototype.base64UploadFromCamera = function () {
        var _this = this;
        var options = {
            quality: 100,
            targetWidth: 750,
            targetHeight: 750,
            destinationType: this.camera.DestinationType.DATA_URL,
            encodingType: this.camera.EncodingType.JPEG,
            mediaType: this.camera.MediaType.PICTURE,
            sourceType: this.camera.PictureSourceType.CAMERA,
            correctOrientation: true
        };
        this.camera.getPicture(options).then(function (imageData) {
            if (imageData != null) {
                var img = {
                    id: new Date().getTime(),
                    url: 'data:image/jpeg;base64,' + imageData,
                    data: { nativeURL: 'data:image/jpeg;base64,' + imageData },
                    base64: 'data:image/jpeg;base64,' + imageData,
                    source: "galery"
                };
                _this.viewCtrl.dismiss(img);
            }
            else {
                _this.viewCtrl.dismiss(null);
            }
        }, function (err) {
            console.log("************captureImage****************");
            console.log(err);
        });
    };
    PhotopopupPage.prototype.openGallery = function () {
        var _this = this;
        var options = {
            quality: 100,
            targetWidth: 800,
            targetHeight: 800,
            destinationType: this.camera.DestinationType.DATA_URL,
            encodingType: this.camera.EncodingType.JPEG,
            mediaType: this.camera.MediaType.PICTURE,
            sourceType: this.camera.PictureSourceType.PHOTOLIBRARY,
            correctOrientation: true
        };
        this.camera.getPicture(options).then(function (imageData) {
            if (imageData != null) {
                var img = {
                    id: new Date().getTime(),
                    url: 'data:image/jpeg;base64,' + imageData,
                    data: { nativeURL: 'data:image/jpeg;base64,' + imageData },
                    base64: 'data:image/jpeg;base64,' + imageData,
                    source: "galery"
                };
                _this.viewCtrl.dismiss(img);
            }
            else {
                _this.viewCtrl.dismiss(null);
            }
        }, function (err) {
            console.log("************captureGallery****************");
            console.log(err);
        });
    };
    PhotopopupPage.prototype.fermerDismiss = function () {
        this.viewCtrl.dismiss(null);
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('angularCropper'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_2_angular_cropperjs__["AngularCropperjsComponent"])
    ], PhotopopupPage.prototype, "angularCropper", void 0);
    PhotopopupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-photopopup',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/photopopup/photopopup.html"*/'<ion-content class="pr">\n\n  <ion-row ion-fixed class="load-ctn" id="load" *ngIf="load == 1">\n    <ion-spinner class="loading-custom" name="crescent" color="vert_logo"></ion-spinner>\n  </ion-row>\n\n  <div class="container">\n    <div class="toCenter">\n      <div class="title">{{title}}</div>\n      <div class="btn-ctn">\n        <div class="btn" (click)="openGallery()">Depuis la galerie\n          <!-- <form method="POST" name="photoFile" id="photoFile" action="" class="photo-pic"> -->\n            <input type="file" class="photo-pic" accept="image/*" id="picGalery" webkitdirectory directory multiple>\n          <!-- </form> -->\n        </div>\n        <div class="btn" (click)="base64UploadFromCamera()">Depuis la camera\n          <input type="file" class="photo-pic" accept="image/*;capture=camera" id="picCamera">\n        </div>\n      </div>\n      <div class="btn-cancel" (click)="fermerDismiss()">Annuler</div>\n    </div>\n\n  </div>\n\n</ion-content>'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/photopopup/photopopup.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_camera__["a" /* Camera */]])
    ], PhotopopupPage);
    return PhotopopupPage;
}());

//# sourceMappingURL=photopopup.js.map

/***/ }),

/***/ 54:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Faqadd3Page; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__faqadd2_faqadd2__ = __webpack_require__(70);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_file__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__faqadd4annuler_faqadd4annuler__ = __webpack_require__(155);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__faqfilter_faqfilter__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__photopopup_photopopup__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ionic_native_toast__ = __webpack_require__(14);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};











/**
 * Generated class for the Faqadd3Page page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var Faqadd3Page = /** @class */ (function () {
    function Faqadd3Page(navCtrl, navParams, modalCtrl, file, http, globals, alertCtrl, platform, viewCtrl, toast, sendError) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.modalCtrl = modalCtrl;
        this.file = file;
        this.http = http;
        this.globals = globals;
        this.alertCtrl = alertCtrl;
        this.platform = platform;
        this.viewCtrl = viewCtrl;
        this.toast = toast;
        this.sendError = sendError;
        //@ViewChild('scrollMe') scrollElement: ElementRef;
        this.load = 0;
        this.descRows = 5;
        this.imgs = [];
        this.faq_title = '';
        this.faq_theme = '';
        this.faq_description = '';
        this.listFaQTheme = [];
        this.selectedTheme = {};
        this.faqToUpdate = null;
        this.source = "";
        this.imagesToDelete = [];
        this.createUniqueId = function () {
            return '_' + Math.random().toString(36).substr(2, 9);
        };
        var img1 = navParams.get('img');
        this.user = navParams.get('user');
        this.listFaQTheme = navParams.get('theme');
        this.source = navParams.get('source');
        if (this.source == "update") {
            this.faqToUpdate = navParams.get('faq');
            if (this.faqToUpdate.faq.faq_image_1 != null && this.faqToUpdate.faq.faq_image_1 != '') {
                var img = {
                    id: "",
                    url: this.faqToUpdate.faq.faq_image_1,
                    data: "",
                    num_image: "1"
                };
                this.imgs.push(img);
            }
            if (this.faqToUpdate.faq.faq_image_2 != null && this.faqToUpdate.faq.faq_image_2 != '') {
                var img = {
                    id: "",
                    url: this.faqToUpdate.faq.faq_image_2,
                    data: "",
                    num_image: "2"
                };
                this.imgs.push(img);
            }
            if (this.faqToUpdate.faq.faq_image_3 != null && this.faqToUpdate.faq.faq_image_3 != '') {
                var img = {
                    id: "",
                    url: this.faqToUpdate.faq.faq_image_3,
                    data: "",
                    num_image: "3"
                };
                this.imgs.push(img);
            }
            if (this.faqToUpdate.faq.faq_image_4 != null && this.faqToUpdate.faq.faq_image_4 != '') {
                var img = {
                    id: "",
                    url: this.faqToUpdate.faq.faq_image_4,
                    data: "",
                    num_image: "4"
                };
                this.imgs.push(img);
            }
            // this.load = 0;
            for (var i = 0; i < this.listFaQTheme.length; i++) {
                if (this.listFaQTheme[i].id == this.faqToUpdate.theme.id) {
                    this.selectedTheme = this.listFaQTheme[i];
                }
            }
            this.faq_title = this.faqToUpdate.faq.title;
            this.faq_description = this.faqToUpdate.faq.description;
        }
        //console.log(JSON.stringify(img1));
        if (img1 != null)
            this.imgs.push(img1);
        //this.getListTheme();
        this.load = 0;
        platform.registerBackButtonAction(function () {
            _this.annulerClick();
        });
    }
    Faqadd3Page.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad Faqadd3Page');
        this.showRPC();
    };
    Faqadd3Page.prototype.ionViewWillEnter = function () {
        var _this = this;
        //this.getListTheme();
        this.platform.registerBackButtonAction(function () {
            _this.annulerClick();
        });
    };
    Faqadd3Page.prototype.resizeTxtCmt = function () {
        this.myInput.nativeElement.style.height = 'auto';
        this.myInput.nativeElement.style.height = this.myInput.nativeElement.scrollHeight + 'px';
        //this.scrollElement.nativeElement.scrollTop = this.scrollElement.nativeElement.scrollHeight;
        this.content.scrollTop = this.content.scrollHeight;
        //this.content.scrollToBottom();
    };
    Faqadd3Page.prototype.showRPC = function () {
        var _this = this;
        if (this.user.understand == '' || this.user.understand == '0') {
            var rpc = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_2__faqadd2_faqadd2__["a" /* Faqadd2Page */], {
                user: this.user
            });
            rpc.onDidDismiss(function (data) {
                _this.platform.registerBackButtonAction(function () {
                    _this.annulerClick();
                });
                console.log(JSON.stringify(data));
            });
            rpc.present();
        }
    };
    Faqadd3Page.prototype.addPhoto = function (img) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var takePic;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        takePic = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_8__photopopup_photopopup__["a" /* PhotopopupPage */], {});
                        if (!(img == 0 && this.imgs.length >= 1)) return [3 /*break*/, 3];
                        if (!(this.source == "update")) return [3 /*break*/, 2];
                        console.log("Adding image to delete");
                        return [4 /*yield*/, this.imagesToDelete.push(this.imgs[0])];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2:
                        this.imgs.splice(0, 1);
                        return [3 /*break*/, 13];
                    case 3:
                        if (!(img == 1 && this.imgs.length >= 2)) return [3 /*break*/, 6];
                        if (!(this.source == "update")) return [3 /*break*/, 5];
                        console.log("Adding image to delete");
                        return [4 /*yield*/, this.imagesToDelete.push(this.imgs[1])];
                    case 4:
                        _a.sent();
                        _a.label = 5;
                    case 5:
                        this.imgs.splice(1, 1);
                        return [3 /*break*/, 13];
                    case 6:
                        if (!(img == 2 && this.imgs.length >= 3)) return [3 /*break*/, 9];
                        if (!(this.source == "update")) return [3 /*break*/, 8];
                        console.log("Adding image to delete");
                        return [4 /*yield*/, this.imagesToDelete.push(this.imgs[2])];
                    case 7:
                        _a.sent();
                        _a.label = 8;
                    case 8:
                        this.imgs.splice(2, 1);
                        return [3 /*break*/, 13];
                    case 9:
                        if (!(img == 3 && this.imgs.length >= 4)) return [3 /*break*/, 12];
                        if (!(this.source == "update")) return [3 /*break*/, 11];
                        console.log("Adding image to delete");
                        return [4 /*yield*/, this.imagesToDelete.push(this.imgs[3])];
                    case 10:
                        _a.sent();
                        _a.label = 11;
                    case 11:
                        this.imgs.splice(3, 1);
                        return [3 /*break*/, 13];
                    case 12:
                        takePic.onDidDismiss(function (data) {
                            _this.platform.registerBackButtonAction(function () {
                                _this.annulerClick();
                            });
                            if (data != null) {
                                console.log(JSON.stringify("******************DATA IMAGE**************"));
                                // console.log(JSON.stringify(data))
                                _this.imgs.push(data);
                            }
                        });
                        takePic.present();
                        _a.label = 13;
                    case 13: return [2 /*return*/];
                }
            });
        });
    };
    Faqadd3Page.prototype.annulerClick = function () {
        var _this = this;
        var confirm = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_4__faqadd4annuler_faqadd4annuler__["a" /* Faqadd4annulerPage */], {
            user: this.user,
            source: 'faqadd'
        });
        confirm.onDidDismiss(function (data) {
            _this.platform.registerBackButtonAction(function () {
                _this.annulerClick();
            });
            if (data.cancel == true) {
                _this.viewCtrl.dismiss(null);
            }
            else { }
        });
        confirm.present();
    };
    Faqadd3Page.prototype.publich = function () {
        var _this = this;
        this.load = 1;
        if (this.selectedTheme.id != null && this.faq_description != '') {
            // this.load = 0
            // this.http.post()
            // return true
            var createUniqueId = this.createUniqueId();
            var data_el = {
                "faq_title": this.faq_title,
                "faq_theme": this.selectedTheme.id,
                "faq_selectedTheme": this.selectedTheme,
                // "faq_imgs": this.imgs,
                "faq_description": this.faq_description,
                "user_id": (this.user.id_User != null ? this.user.id_User : this.user.id),
                "isset_img": /*((this.imgs.length > 0) ? this.imgs.length : 0)*/ 0,
                "uniqid": createUniqueId
            };
            var data_ell = {
                "faq_title": this.faq_title,
                "faq_theme": this.selectedTheme.id,
                "faq_selectedTheme": this.selectedTheme,
                "faq_imgs": this.imgs,
                "faq_description": this.faq_description,
                "user_id": (this.user.id_User != null ? this.user.id_User : this.user.id),
                "isset_img": ((this.imgs.length > 0) ? this.imgs.length : 0),
                "uniqid": createUniqueId
            };
            this.viewCtrl.dismiss({
                plch: data_ell
            });
            console.log("*******************eto*****************");
            console.log(this.globals.variables.urls.addFaQ);
            // console.log(JSON.stringify(data_el))
            this.http.post(this.globals.variables.urls.addFaQ, data_el, {})
                .then(function (data) {
                var id_faq = JSON.parse(data.data).id;
                if (_this.imgs.length > 0) {
                    var _loop_1 = function (i) {
                        console.log("****************IMAGE ****************:  " + JSON.stringify(_this.imgs[i].data.upload));
                        // console.log("IMG_URL : " + this.imgs[i].data.nativeURL)
                        _this.http.post(_this.globals.variables.urls.uploadFaQImgB64, 
                        // this.http.post(this.globals.variables.urls.uploadFaQImg,
                        {
                            "faq_id": "" + id_faq,
                            "num_image": "" + (i + 1),
                            "image": _this.imgs[i].data.nativeURL,
                            "source": _this.imgs[i].source
                        }, {}
                        // ,
                        // this.imgs[i].data.nativeURL,
                        // 'file'
                        )
                            .then(function (data) {
                            console.log(JSON.stringify(data));
                            // imgUploaded += 1
                            if (i == _this.imgs.length - 1) {
                                _this.load = 0;
                                _this.sendError.publish('stopwait', 1);
                                // this.viewCtrl.dismiss(
                                //   {
                                //     id_faq: id_faq
                                //   }
                                // );
                            }
                        }, function (error) {
                            _this.load = 0;
                            var alert = _this.alertCtrl.create({
                                title: 'Information !',
                                subTitle: 'Erreur de téléchargement de la ' + ((i + 1) <= 1 ? ((i + 1) + "ère") : ((i + 1) + "ème")) + ' image.',
                                buttons: [
                                    {
                                        text: 'OK',
                                        handler: function () {
                                            // this.viewCtrl.dismiss(
                                            //   {
                                            //     id_faq: id_faq
                                            //   }
                                            // );
                                        }
                                    }
                                ]
                            });
                            alert.present();
                            console.log(JSON.stringify(error));
                        });
                    };
                    // let imgUploaded = 0
                    for (var i = 0; i < _this.imgs.length; i++) {
                        _loop_1(i);
                    }
                }
                else {
                    // this.viewCtrl.dismiss(
                    //   {
                    //     id_faq: id_faq
                    //   }
                    // );
                }
                console.log(JSON.stringify(data.data));
            }, function (error) {
                console.log("***********ERREUR ADD FAQ***************");
                console.log(JSON.stringify(error));
                _this.load = 0;
                _this.sendError.publish('toremove', 1);
                var alert = _this.alertCtrl.create({
                    title: 'Information !',
                    subTitle: 'Une erreur s\'est produite !',
                    buttons: ['OK']
                });
                alert.present();
                console.log(JSON.stringify(error));
            });
        }
        else if (this.selectedTheme.id == null) {
            this.load = 0;
            var alert_1 = this.alertCtrl.create({
                title: 'Information !',
                subTitle: 'Choisir un thème !',
                buttons: ['OK']
            });
            alert_1.present();
        }
        else if (this.faq_description == '' || this.faq_description == null) {
            this.load = 0;
            var alert_2 = this.alertCtrl.create({
                title: 'Information !',
                subTitle: 'Veuillez décrire votre partage !',
                buttons: ['OK']
            });
            alert_2.present();
        }
    };
    Faqadd3Page.prototype.publier = function () {
        var _this = this;
        this.load = 1;
        if (this.selectedTheme.id != null && this.faq_description != '') {
            // this.load = 0
            // this.http.post()
            // return true
            var data_el = {
                "faq_title": this.faq_title,
                "faq_theme": this.selectedTheme.id,
                "faq_description": this.faq_description,
                "user_id": (this.user.id_User != null ? this.user.id_User : this.user.id)
            };
            console.log(JSON.stringify(data_el));
            this.http.post(this.globals.variables.urls.addFaQ, data_el, {})
                .then(function (data) {
                var id_faq = JSON.parse(data.data).id;
                if (_this.imgs.length > 0) {
                    var _loop_2 = function (i) {
                        console.log("ID_FAQ :  " + id_faq);
                        // console.log("IMG_URL : " + this.imgs[i].data.nativeURL)
                        // this.http.post(this.globals.variables.urls.uploadFaQImg,
                        _this.http.post(_this.globals.variables.urls.uploadFaQImgB64, {
                            "faq_id": "" + id_faq,
                            "num_image": "" + (i + 1),
                            "image": _this.imgs[i].data.nativeURL,
                            "source": _this.imgs[i].source
                        }, {}
                        // ,
                        // this.imgs[i].data.nativeURL,
                        // 'file'
                        )
                            .then(function (data) {
                            console.log(JSON.stringify(data));
                            // imgUploaded += 1
                            if (i == _this.imgs.length - 1) {
                                _this.load = 0;
                                _this.viewCtrl.dismiss({
                                    id_faq: id_faq
                                });
                            }
                        }, function (error) {
                            _this.load = 0;
                            var alert = _this.alertCtrl.create({
                                title: 'Information !',
                                subTitle: 'Erreur de téléchargement de la ' + ((i + 1) <= 1 ? ((i + 1) + "ère") : ((i + 1) + "ème")) + ' image.',
                                buttons: [
                                    {
                                        text: 'OK',
                                        handler: function () {
                                            _this.viewCtrl.dismiss({
                                                id_faq: id_faq
                                            });
                                        }
                                    }
                                ]
                            });
                            alert.present();
                            console.log(JSON.stringify(error));
                        });
                    };
                    // let imgUploaded = 0
                    for (var i = 0; i < _this.imgs.length; i++) {
                        _loop_2(i);
                    }
                }
                else {
                    _this.viewCtrl.dismiss({
                        id_faq: id_faq
                    });
                }
                console.log(JSON.stringify(data.data));
            }, function (error) {
                _this.load = 0;
                var alert = _this.alertCtrl.create({
                    title: 'Information !',
                    subTitle: 'Une erreur s\'est produite !',
                    buttons: ['OK']
                });
                alert.present();
                console.log(JSON.stringify(error));
            });
        }
        else if (this.selectedTheme.id == null) {
            this.load = 0;
            var alert_3 = this.alertCtrl.create({
                title: 'Information !',
                subTitle: 'Choisir un thème !',
                buttons: ['OK']
            });
            alert_3.present();
        }
        else if (this.faq_description == '' || this.faq_description == null) {
            this.load = 0;
            var alert_4 = this.alertCtrl.create({
                title: 'Information !',
                subTitle: 'Veuillez décrire votre partage !',
                buttons: ['OK']
            });
            alert_4.present();
        }
    };
    Faqadd3Page.prototype.changeTheme = function () {
        console.log(this.faq_theme);
    };
    Faqadd3Page.prototype.ChooseTheme = function () {
        var _this = this;
        var filter = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_7__faqfilter_faqfilter__["a" /* FaqfilterPage */], {
            user: this.user,
            theme: this.listFaQTheme,
            title: "Thèmes",
            selectBefore: this.selectedTheme
        });
        filter.onDidDismiss(function (data) {
            if (data.id != '' && data.id != 'retour' && data.id != 'all') {
                _this.selectedTheme = data;
                console.log("Selected theme :");
                console.log(_this.selectedTheme);
            }
            else {
                //this.selectedTheme = {};
            }
        });
        filter.present();
    };
    Faqadd3Page.prototype.publierUpdate = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var d, alert_5, alert_6;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        //faq_id, user_id, faq_description, faq_theme
                        this.load = 1;
                        if (!(this.imagesToDelete.length > 0)) return [3 /*break*/, 4];
                        d = 0;
                        _a.label = 1;
                    case 1:
                        if (!(d < this.imagesToDelete.length)) return [3 /*break*/, 4];
                        return [4 /*yield*/, this.deleteFaqImg(this.faqToUpdate.faq.id, this.imagesToDelete[d].num_image)];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3:
                        d++;
                        return [3 /*break*/, 1];
                    case 4:
                        if (this.selectedTheme.id != null && this.faq_description != '') {
                            this.http.post(this.globals.variables.urls.updateFaQ, {
                                "faq_id": "" + this.faqToUpdate.faq.id,
                                "user_id": "" + (this.user.id_User != null ? this.user.id_User : this.user.id),
                                "faq_title": this.faq_title,
                                "faq_theme": "" + this.selectedTheme.id,
                                "faq_description": this.faq_description
                            }, {})
                                .then(function (data) { return __awaiter(_this, void 0, void 0, function () {
                                var _this = this;
                                var id_faq, error, _loop_3, this_1, i;
                                return __generator(this, function (_a) {
                                    switch (_a.label) {
                                        case 0:
                                            id_faq = JSON.parse(data.data).id;
                                            error = JSON.parse(data.data).error;
                                            if (!(id_faq != '')) return [3 /*break*/, 7];
                                            // this.load = 0;
                                            console.log("Resulta mise a jour");
                                            console.log(data.data);
                                            if (!(this.imgs.length > 0)) return [3 /*break*/, 5];
                                            _loop_3 = function (i) {
                                                return __generator(this, function (_a) {
                                                    switch (_a.label) {
                                                        case 0:
                                                            if (!(this_1.imgs[i].data == "")) return [3 /*break*/, 1];
                                                            console.log("Break upload");
                                                            return [3 /*break*/, 3];
                                                        case 1:
                                                            console.log("ID_FAQ :  " + id_faq);
                                                            // console.log("IMG_URL : " + this.imgs[i].data.nativeURL)
                                                            // await this.http.post(this.globals.variables.urls.uploadFaQImg,
                                                            return [4 /*yield*/, this_1.http.post(this_1.globals.variables.urls.uploadFaQImgB64, {
                                                                    "faq_id": "" + id_faq,
                                                                    "num_image": "" + (i + 1),
                                                                    "image": this_1.imgs[i].data.nativeURL,
                                                                    "source": this_1.imgs[i].source
                                                                }, {}
                                                                // ,
                                                                // this.imgs[i].data.nativeURL,
                                                                // 'file'
                                                                )
                                                                    .then(function (data) {
                                                                    // this.load = 0;
                                                                    console.log("Image uploaded ///");
                                                                    console.log(JSON.stringify(data));
                                                                    if (i == _this.imgs.length - 1) {
                                                                        _this.load = 0;
                                                                        _this.toast.show("Partage à jour", "3000", "bottom")
                                                                            .subscribe(function (t) {
                                                                            console.log(JSON.stringify(t));
                                                                        });
                                                                    }
                                                                }, function (error) {
                                                                    _this.load = 0;
                                                                    var alert = _this.alertCtrl.create({
                                                                        title: 'Information !',
                                                                        subTitle: 'Erreur de téléchargement de la ' + ((i + 1) <= 1 ? ((i + 1) + "ère") : ((i + 1) + "ème")) + ' image.',
                                                                        buttons: [
                                                                            {
                                                                                text: 'OK',
                                                                                handler: function () {
                                                                                    _this.viewCtrl.dismiss({
                                                                                        id_faq: id_faq
                                                                                    });
                                                                                }
                                                                            }
                                                                        ]
                                                                    });
                                                                    alert.present();
                                                                    console.log(JSON.stringify(error));
                                                                })];
                                                        case 2:
                                                            // console.log("IMG_URL : " + this.imgs[i].data.nativeURL)
                                                            // await this.http.post(this.globals.variables.urls.uploadFaQImg,
                                                            _a.sent();
                                                            _a.label = 3;
                                                        case 3: return [2 /*return*/];
                                                    }
                                                });
                                            };
                                            this_1 = this;
                                            i = 0;
                                            _a.label = 1;
                                        case 1:
                                            if (!(i < this.imgs.length)) return [3 /*break*/, 4];
                                            return [5 /*yield**/, _loop_3(i)];
                                        case 2:
                                            _a.sent();
                                            _a.label = 3;
                                        case 3:
                                            i++;
                                            return [3 /*break*/, 1];
                                        case 4:
                                            // await this.getSingleFaq()
                                            this.load = 0;
                                            this.viewCtrl.dismiss({
                                                id_faq: id_faq
                                            });
                                            return [3 /*break*/, 6];
                                        case 5:
                                            // await this.getSingleFaq()
                                            this.load = 0;
                                            this.toast.show("Partage à jour", "3000", "bottom")
                                                .subscribe(function (t) {
                                                console.log(JSON.stringify(t));
                                            });
                                            this.viewCtrl.dismiss({
                                                id_faq: id_faq
                                            });
                                            _a.label = 6;
                                        case 6: return [3 /*break*/, 8];
                                        case 7:
                                            this.load = 0;
                                            this.toast.show(error, "3000", "bottom")
                                                .subscribe(function (t) {
                                                console.log(JSON.stringify(t));
                                            });
                                            _a.label = 8;
                                        case 8:
                                            console.log(JSON.stringify(data.data));
                                            return [2 /*return*/];
                                    }
                                });
                            }); }, function (error) {
                                _this.load = 0;
                                var alert = _this.alertCtrl.create({
                                    title: 'Information !',
                                    subTitle: 'Une erruer c\'est produit !',
                                    buttons: ['OK']
                                });
                                alert.present();
                                console.log(JSON.stringify(error));
                            });
                        }
                        else if (this.selectedTheme.id == null) {
                            this.load = 0;
                            alert_5 = this.alertCtrl.create({
                                title: 'Information !',
                                subTitle: 'Choisir un tèhme !',
                                buttons: ['OK']
                            });
                            alert_5.present();
                        }
                        else if (this.faq_description == '' || this.faq_description == null) {
                            this.load = 0;
                            alert_6 = this.alertCtrl.create({
                                title: 'Information !',
                                subTitle: 'Veuillez décrire votre partage !',
                                buttons: ['OK']
                            });
                            alert_6.present();
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    Faqadd3Page.prototype.deleteFaqImg = function (faq_id, num_image) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.http.post(this.globals.variables.urls.deleteFaqImg + "?faq_id=" + faq_id + "&num_image" + num_image, {
                            "faq_id": "" + faq_id,
                            "num_image": num_image
                        }, {})
                            .then(function (data) {
                            console.log("image deleted");
                            console.log(JSON.stringify(data.data));
                        }, function (error) {
                            console.log("error deleting image");
                            console.log(JSON.stringify(error));
                        })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    Faqadd3Page.prototype.getSingleFaq = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                this.http.get(this.globals.variables.urls.getSingleFaQ + "?faq_id=" + this.faqToUpdate.faq.id, {}, {})
                    .then(function (data) {
                    var faqUp = JSON.parse(data.data);
                    console.log("Single faq");
                    console.log(JSON.stringify(data.data));
                    if (faqUp.error == null || faqUp.error == '') {
                        // this.viewCtrl.dismiss(
                        //   {
                        //     error: faqUp.error
                        //   }
                        // );
                    }
                    else {
                        _this.load = 0;
                        // this.faqToUpdate.faq = faqUp
                        // this.viewCtrl.dismiss(
                        //   {
                        //     faq: faqUp
                        //   }
                        // );
                    }
                }, function (error) {
                    console.log("Error getting single faq");
                    console.log(JSON.stringify(error));
                    _this.viewCtrl.dismiss({
                        error: "Erreur d'accès au serveur"
                    });
                });
                return [2 /*return*/];
            });
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('input'),
        __metadata("design:type", Object)
    ], Faqadd3Page.prototype, "myInput", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["e" /* Content */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["e" /* Content */])
    ], Faqadd3Page.prototype, "content", void 0);
    Faqadd3Page = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-faqadd3',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/faqadd3/faqadd3.html"*/'<ion-content>\n\n  <ion-row ion-fixed class="load-ctn" id="load" *ngIf="load == 1">\n    <ion-spinner class="loading-custom" name="crescent" color="vert_logo"></ion-spinner>\n  </ion-row>\n\n  <div #scrollMe class="pr">\n\n    <ion-grid class="container">\n\n      <ion-row class="header">\n\n        <ion-col class="col-cancel" (click)="annulerClick();">\n          <span class="annuler">\n            <img class="back-icon" src="../../assets/icon/left-arrow-blue.svg">\n            <span class="back-faq">Publier dans partages </span>\n            <span class="none"></span>\n          </span>\n        </ion-col>\n\n      </ion-row>\n\n      <ion-row class="faq-photo-text-import">\n        <div>\n          importer les photos\n        </div>\n      </ion-row>\n\n      <ion-row class="faq-photo">\n        <ion-col>\n          <ion-row>\n            <ion-col (click)="addPhoto(0);">\n              <img class="img" *ngIf="imgs.length >= 1" src="{{imgs[0].url}}" alt="No image found" />\n              <img class="sup-icon" *ngIf="imgs.length >= 1" src="../../assets/icon/recycling-bin.svg" />\n              <ion-row *ngIf="imgs.length < 1" class="alt-img">\n                <ion-icon name="md-add" class="icon-add" color="bleu"></ion-icon>\n              </ion-row>\n            </ion-col>\n            <ion-col (click)="addPhoto(1);">\n              <img class="img" *ngIf="imgs.length >= 2" src="{{imgs[1].url}}" alt="No image found" />\n              <img class="sup-icon" *ngIf="imgs.length >= 2" src="../../assets/icon/recycling-bin.svg" />\n              <ion-row *ngIf="imgs.length < 2" class="alt-img">\n                <ion-icon name="md-add" class="icon-add" color="bleu"></ion-icon>\n              </ion-row>\n            </ion-col>\n            <ion-col (click)="addPhoto(2);">\n              <img class="img" *ngIf="imgs.length >= 3" src="{{imgs[2].url}}" />\n              <img class="sup-icon" *ngIf="imgs.length >= 3" src="../../assets/icon/recycling-bin.svg" />\n              <ion-row *ngIf="imgs.length < 3" class="alt-img">\n                <ion-icon name="md-add" class="icon-add" color="bleu"></ion-icon>\n              </ion-row>\n            </ion-col>\n            <ion-col (click)="addPhoto(3);">\n              <img class="img" *ngIf="imgs.length >= 4" src="{{imgs[3].url}}" />\n              <img class="sup-icon" *ngIf="imgs.length >= 4" src="../../assets/icon/recycling-bin.svg" />\n              <ion-row *ngIf="imgs.length < 4" class="alt-img">\n                <ion-icon name="md-add" class="icon-add" color="bleu"></ion-icon>\n              </ion-row>\n            </ion-col>\n          </ion-row>\n        </ion-col>\n      </ion-row>\n\n      <ion-row class="sep"></ion-row>\n\n      <ion-row class="ctn-faq-det">\n        <ion-col>\n\n          <ion-row *ngIf="selectedTheme.id == null || selectedTheme.id == \'\'" class="img-ctn" (click)="ChooseTheme()">\n            <ion-label class="theme-txt">Choisir un th&#232;me</ion-label>\n          </ion-row>\n\n          <ion-row *ngIf="selectedTheme.id != null && selectedTheme.id != \'\'" class="img-ctn" (click)="ChooseTheme()">\n            <ion-label class="theme-txt">{{selectedTheme.name}}</ion-label>\n            <img class="check-icon" src="../../assets/imgs/da_image/Group.png" />\n          </ion-row>\n\n          <ion-row class="ctn-faq-desc">\n            <ion-col>\n              <textarea #input (keyup)="resizeTxtCmt();" rows="2" class="desc-faq" placeholder="Ecrire une description"\n                [(ngModel)]="faq_description" name="faq_description"></textarea>\n              \n            </ion-col>\n          </ion-row>\n          <ion-row class="to-right">\n            <!-- <button ion-button round class="btn-gradient-round" *ngIf=\'source != "update"\' (click)="publier()">Publier</button> -->\n            <button ion-button round class="btn-gradient-round" *ngIf=\'source != "update"\' (click)="publich()">Publier</button>\n            <button ion-button round class="btn-gradient-round" *ngIf=\'source == "update"\' (click)="publierUpdate()">Mettre à jour</button>\n          </ion-row>\n        </ion-col>\n      </ion-row>\n\n    </ion-grid>\n\n  </div>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/faqadd3/faqadd3.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_file__["a" /* File */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_6__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_9__ionic_native_toast__["a" /* Toast */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["f" /* Events */]])
    ], Faqadd3Page);
    return Faqadd3Page;
}());

//# sourceMappingURL=faqadd3.js.map

/***/ }),

/***/ 55:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AnnonceAdd2Page; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__faqadd2_faqadd2__ = __webpack_require__(70);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__annonce_add_annuler_annonce_add_annuler__ = __webpack_require__(147);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__annonce_cat_annonce_cat__ = __webpack_require__(90);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__annonces_annonces__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__annonce_boost_annonce_boost__ = __webpack_require__(157);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ionic_native_toast__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ionic_native_geolocation__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__ionic_native_diagnostic__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__mesannonces_mesannonces__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__ionic_native_paypal__ = __webpack_require__(123);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__photopopup_photopopup__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__generalcnd_generalcnd__ = __webpack_require__(69);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};

















var AnnonceAdd2Page = /** @class */ (function () {
    function AnnonceAdd2Page(navCtrl, navParams, modalCtrl, http, globals, alertCtrl, toast, geolocation, diagnostic, payPal, viewCtrl, platform, sendVar) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.modalCtrl = modalCtrl;
        this.http = http;
        this.globals = globals;
        this.alertCtrl = alertCtrl;
        this.toast = toast;
        this.geolocation = geolocation;
        this.diagnostic = diagnostic;
        this.payPal = payPal;
        this.viewCtrl = viewCtrl;
        this.platform = platform;
        this.sendVar = sendVar;
        this.load = 0;
        this.zone = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"]({ enableLongStackTrace: true });
        this.imgs = [];
        this.adToUp = {};
        this.ad_title = "";
        this.ad_description = "";
        this.ad_address = "";
        this.full_ad_address = "";
        this.place_id = "";
        this.listCat = [];
        this.selectedCat = null;
        this.listAbonne = [];
        this.sideAddress = {};
        this.gmLocation = { lat: 0, lng: 0 };
        this.intPos = 0;
        this.intPosClick = 0;
        this.checklat = null;
        this.userPos = {};
        this.source = '';
        this.sourcePage = '';
        this.imagesToDelete = [];
        diagnostic.isGpsLocationAvailable()
            .then(function (data) {
            console.log("GPS is available...=====");
            console.log(JSON.stringify(data));
            if (data == false) {
                diagnostic.requestLocationAuthorization()
                    .then(function (resp) {
                    console.log("Demande d'auth GPS response");
                    console.log(JSON.stringify(resp));
                    if (resp == "GRANTED") {
                        //this.getUserPosition();
                        _this.requestAutoComplete();
                    }
                })
                    .catch(function (error) {
                    console.log("Erreur de demande d'auth GPS");
                });
            }
            else {
                //this.getUserPosition();
                _this.requestAutoComplete();
            }
        })
            .catch(function (error) {
            console.log(JSON.stringify(error));
            toast.show("Vous n'avez pas de GPS", "2000", "bottom")
                .subscribe(function (t) {
                console.log(JSON.stringify(t));
            });
        });
        this.GoogleAutocomplete = new google.maps.places.AutocompleteService();
        this.autocomplete = { input: '' };
        this.autocompleteItems = [];
        var img1 = navParams.get('img');
        this.user = navParams.get('user');
        this.listCat = navParams.get('listCat');
        this.source = navParams.get('source');
        this.sourcePage = navParams.get('sourcePage');
        // if(this.sourcePage == "update"){
        //   this.adToUpdate = navParams.get('adtoup')
        // }
        //console.log(JSON.stringify(img1));
        if (img1 != null)
            this.imgs.push(img1);
        if (this.source == "update") {
            this.adToUp = navParams.get('adtoup');
            // faq_image_1
            if (this.adToUp.ad_image_1 != null && this.adToUp.ad_image_1 != "") {
                var img = {
                    id: 1,
                    url: this.adToUp.ad_image_1,
                    data: "",
                    num_image: "1"
                };
                this.imgs.push(img);
            }
            if (this.adToUp.ad_image_2 != null && this.adToUp.ad_image_2 != "") {
                var img = {
                    id: 2,
                    url: this.adToUp.ad_image_2,
                    data: "",
                    num_image: "2"
                };
                this.imgs.push(img);
            }
            if (this.adToUp.ad_image_3 != null && this.adToUp.ad_image_3 != "") {
                var img = {
                    id: 3,
                    url: this.adToUp.ad_image_3,
                    data: "",
                    num_image: "3"
                };
                this.imgs.push(img);
            }
            if (this.adToUp.ad_image_4 != null && this.adToUp.ad_image_4 != "") {
                var img = {
                    id: 4,
                    url: this.adToUp.ad_image_4,
                    data: "",
                    num_image: "4"
                };
                this.imgs.push(img);
            }
            // 
            if (this.adToUp.faq_image_1 != null && this.adToUp.faq_image_1 != "") {
                var img = {
                    id: 1,
                    url: this.adToUp.faq_image_1,
                    data: "",
                    num_image: "1"
                };
                this.imgs.push(img);
            }
            if (this.adToUp.faq_image_2 != null && this.adToUp.faq_image_2 != "") {
                var img = {
                    id: 2,
                    url: this.adToUp.faq_image_2,
                    data: "",
                    num_image: "2"
                };
                this.imgs.push(img);
            }
            if (this.adToUp.faq_image_3 != null && this.adToUp.faq_image_3 != "") {
                var img = {
                    id: 3,
                    url: this.adToUp.faq_image_3,
                    data: "",
                    num_image: "3"
                };
                this.imgs.push(img);
            }
            if (this.adToUp.faq_image_4 != null && this.adToUp.faq_image_4 != "") {
                var img = {
                    id: 4,
                    url: this.adToUp.faq_image_4,
                    data: "",
                    num_image: "4"
                };
                this.imgs.push(img);
            }
        }
        if (this.adToUp != null) {
            this.ad_title = this.adToUp.title;
            this.ad_address = this.adToUp.address;
            this.autocomplete.input = this.ad_address;
            this.ad_description = this.adToUp.description;
            this.full_ad_address = this.adToUp.full_address;
            this.selectedCat = this.adToUp.category;
            this.price = this.adToUp.price;
            this.phone = this.adToUp.phone;
        }
        this.getListAbonne();
        this.platform.registerBackButtonAction(function () {
            _this.annulerClick();
        });
    }
    AnnonceAdd2Page.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AnnonceAdd2Page');
        this.onLocateUser();
    };
    AnnonceAdd2Page.prototype.ionViewWillEnter = function () {
        var _this = this;
        this.platform.registerBackButtonAction(function () {
            _this.annulerClick();
        });
    };
    AnnonceAdd2Page.prototype.ionViewWillLeave = function () {
        // this.platform.registerBackButtonAction(() => {
        //   // this.navCtrl.pop();
        // });
    };
    AnnonceAdd2Page.prototype.resizeTxtCmt = function () {
        this.myInput.nativeElement.style.height = 'auto';
        this.myInput.nativeElement.style.height = this.myInput.nativeElement.scrollHeight + 'px';
        // this.scrollElement.nativeElement.scrollTop = this.scrollElement.nativeElement.scrollHeight;
        this.content.scrollTop = this.content.scrollHeight;
        // this.content.scrollToBottom();
    };
    AnnonceAdd2Page.prototype.getUserPosition = function () {
        var _this = this;
        GPSLocation.getCurrentPosition(function (position) {
            console.log("Resultat du GPS");
            console.log(JSON.stringify(position));
            var pos = position.coords.latitude + ',' + position.coords.longitude;
            var lat = parseFloat(position.coords.latitude);
            var lng = parseFloat(position.coords.longitude);
            _this.userPos = {
                lat: lat,
                lng: lng
            };
        }, function (error) {
            console.log("Erreur du GPS");
            console.log(JSON.stringify(error));
            var alert = _this.alertCtrl.create({
                title: 'Information',
                subTitle: 'Activer votre GPS, SVP.',
                buttons: ['Ok']
            });
            alert.present();
        });
    };
    AnnonceAdd2Page.prototype.showRPC = function () {
        var rpc = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_2__faqadd2_faqadd2__["a" /* Faqadd2Page */]);
        rpc.onDidDismiss(function (data) {
            console.log(JSON.stringify(data));
        });
        rpc.present();
    };
    AnnonceAdd2Page.prototype.addPhoto = function (img) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var newphoto;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        newphoto = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_14__photopopup_photopopup__["a" /* PhotopopupPage */], {
                            source: 2
                        });
                        if (!(img == 0 && this.imgs.length >= 1)) return [3 /*break*/, 3];
                        if (!(this.source == "update")) return [3 /*break*/, 2];
                        console.log("Adding image to delete");
                        return [4 /*yield*/, this.imagesToDelete.push(this.imgs[0])];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2:
                        this.imgs.splice(0, 1);
                        return [3 /*break*/, 13];
                    case 3:
                        if (!(img == 1 && this.imgs.length >= 2)) return [3 /*break*/, 6];
                        if (!(this.source == "update")) return [3 /*break*/, 5];
                        console.log("Adding image to delete");
                        return [4 /*yield*/, this.imagesToDelete.push(this.imgs[1])];
                    case 4:
                        _a.sent();
                        _a.label = 5;
                    case 5:
                        this.imgs.splice(1, 1);
                        return [3 /*break*/, 13];
                    case 6:
                        if (!(img == 2 && this.imgs.length >= 3)) return [3 /*break*/, 9];
                        if (!(this.source == "update")) return [3 /*break*/, 8];
                        console.log("Adding image to delete");
                        return [4 /*yield*/, this.imagesToDelete.push(this.imgs[2])];
                    case 7:
                        _a.sent();
                        _a.label = 8;
                    case 8:
                        this.imgs.splice(2, 1);
                        return [3 /*break*/, 13];
                    case 9:
                        if (!(img == 3 && this.imgs.length >= 4)) return [3 /*break*/, 12];
                        if (!(this.source == "update")) return [3 /*break*/, 11];
                        console.log("Adding image to delete");
                        return [4 /*yield*/, this.imagesToDelete.push(this.imgs[3])];
                    case 10:
                        _a.sent();
                        _a.label = 11;
                    case 11:
                        this.imgs.splice(3, 1);
                        return [3 /*break*/, 13];
                    case 12:
                        newphoto.onDidDismiss(function (data) {
                            if (data != null) {
                                data.num_image = "" + (_this.imgs.length + 1);
                                _this.imgs.push(data);
                            }
                        });
                        newphoto.present();
                        _a.label = 13;
                    case 13: return [2 /*return*/];
                }
            });
        });
    };
    AnnonceAdd2Page.prototype.annulerClick = function () {
        var _this = this;
        var confirm = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_3__annonce_add_annuler_annonce_add_annuler__["a" /* AnnonceAddAnnulerPage */], {
            user: this.user,
            source: this.source
        });
        confirm.onDidDismiss(function (data) {
            if (data.etat == "update") {
                _this.viewCtrl.dismiss({ etat: "noUpdate" });
            }
            else if (data.etat == "annonces") {
                _this.viewCtrl.dismiss(null);
            }
        });
        confirm.present();
    };
    AnnonceAdd2Page.prototype.showBosst = function () {
        var _this = this;
        if (this.source == "update") {
            this.saveUpdate("non", null);
        }
        else {
            if (this.ad_title != '' && this.ad_description != '' && this.selectedCat != null && this.ad_address != '') {
                var boost = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_8__annonce_boost_annonce_boost__["a" /* AnnonceBoostPage */], {
                    listAb: this.listAbonne,
                    user: this.user
                });
                boost.onDidDismiss(function (data) {
                    var selectedBoost = data;
                    if (selectedBoost != null && selectedBoost.id != "") {
                        console.log("Selected boost");
                        console.log(JSON.stringify(data));
                        _this.pay(data);
                    }
                    else if (selectedBoost == null) {
                        _this.publier("non", null);
                    }
                    else {
                    }
                });
                boost.present();
            }
            else if (this.ad_title == '') {
                this.load = 0;
                var alert_1 = this.alertCtrl.create({
                    title: 'Information !',
                    subTitle: 'Titre est obligatoire !',
                    buttons: ['OK']
                });
                alert_1.present();
            }
            else if (this.ad_description == '') {
                this.load = 0;
                var alert_2 = this.alertCtrl.create({
                    title: 'Information !',
                    subTitle: 'Description est obligatoire !',
                    buttons: ['OK']
                });
                alert_2.present(); //this.selectedCat != null
            }
            else if (this.selectedCat == null) {
                this.load = 0;
                var alert_3 = this.alertCtrl.create({
                    title: 'Information !',
                    subTitle: 'Sélectionner une catégorie !',
                    buttons: ['OK']
                });
                alert_3.present();
            }
            else if (this.ad_address == null || this.ad_address == '') {
                this.load = 0;
                var alert_4 = this.alertCtrl.create({
                    title: 'Information !',
                    subTitle: 'Veuillez renseigner votre adresse !',
                    buttons: ['OK']
                });
                alert_4.present();
            }
        }
    };
    AnnonceAdd2Page.prototype.pay = function (boost) {
        var _this = this;
        this.payPal.init({
            PayPalEnvironmentProduction: '',
            PayPalEnvironmentSandbox: 'AQjoei0s06vInLQlhaAOoTDmB-LUTUqPxIqiyBty8W78OnQwk8ejMrO4VnFb-YXdWmQS47NI-dFEaikP'
        }).then(function () {
            console.log("PayPal init OK");
            // Environments: PayPalEnvironmentNoNetwork, PayPalEnvironmentSandbox, PayPalEnvironmentProduction
            _this.payPal.prepareToRender('PayPalEnvironmentSandbox', new __WEBPACK_IMPORTED_MODULE_13__ionic_native_paypal__["b" /* PayPalConfiguration */]({})).then(function () {
                console.log("Peparing config OK");
                var point = /./;
                var price = '';
                if (point.test("" + boost.prix)) {
                    price = '' + boost.prix;
                }
                else
                    price = '' + boost.prix + '.00';
                var payment = new __WEBPACK_IMPORTED_MODULE_13__ionic_native_paypal__["c" /* PayPalPayment */](price, 'USD', 'Description', 'sale');
                _this.payPal.renderSinglePaymentUI(payment).then(function (response) {
                    console.log("Payment OK");
                    console.log(JSON.stringify(response));
                    _this.toast.show("Payment réussi !", "3000", "bottom");
                    _this.publier('oui', boost);
                }, function (error) {
                    console.log(JSON.stringify(error));
                    console.log("Payment NON-OK");
                    var alert = _this.alertCtrl.create({
                        title: "Erreur du payement",
                        message: "Voulez-vous publier votre annonce quand même ?",
                        buttons: [
                            {
                                text: "Non",
                                role: 'cancel',
                                handler: function () {
                                    //
                                }
                            },
                            {
                                text: "Oui",
                                handler: function () {
                                    _this.publier('non', null);
                                }
                            }
                        ]
                    });
                    alert.present();
                });
            }, function () {
                console.log("Config NON-OK");
                var alert = _this.alertCtrl.create({
                    title: "Erreur de configuration PayPal",
                    message: "Voulez-vous publier votre annonce quand même ?",
                    buttons: [
                        {
                            text: "Non",
                            role: "cancel",
                            handler: function () {
                                //
                            }
                        },
                        {
                            text: "Oui",
                            handler: function () {
                                _this.publier('non', null);
                            }
                        }
                    ]
                });
                alert.present();
            });
        }, function () {
            console.log("Init NON-OK");
            var alert = _this.alertCtrl.create({
                title: "Erreur d'initialisation de PayPal",
                message: "Voulez-vous publier votre annonce quand même ?",
                buttons: [
                    {
                        text: "Non",
                        role: 'cancel',
                        handler: function () {
                            //
                        }
                    },
                    {
                        text: "Oui",
                        handler: function () {
                            _this.publier('non', null);
                        }
                    }
                ]
            });
            alert.present();
        });
    };
    AnnonceAdd2Page.prototype.publier = function (boost, selectedBoost) {
        var _this = this;
        this.load = 1;
        if (this.source == "update") {
            this.saveUpdate("non", null);
        }
        else {
            if (this.ad_title != '' && this.ad_description != '' && this.selectedCat != null && this.ad_address != '') {
                var gcdn = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_15__generalcnd_generalcnd__["a" /* GeneralcndPage */], {
                    user: this.user,
                    source: "gcdn"
                });
                gcdn.onDidDismiss(function (data) {
                    if (data.state == 'oui') {
                        var boost123 = _this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_8__annonce_boost_annonce_boost__["a" /* AnnonceBoostPage */], {
                            listAb: _this.listAbonne,
                            user: _this.user
                        });
                        boost123.onDidDismiss(function (data123) {
                            var data_el = {
                                "ad_title": _this.ad_title,
                                "ad_description": _this.ad_description,
                                "ad_address": _this.ad_address,
                                "full_ad_address": _this.full_ad_address,
                                "user_id": _this.user.id_User != null ? _this.user.id_User : _this.user.id,
                                "cat_ad": _this.selectedCat.id,
                                "price": _this.price,
                                "phone": _this.phone,
                                "place_id": _this.place_id,
                                "selectedCat": _this.selectedCat,
                                "author_infos": _this.user,
                                // "ad_imgs": this.imgs,
                                "isset_img": /*((this.imgs.length > 0) ? this.imgs.length : 0)*/ 0
                            };
                            var data_elle = {
                                "ad_title": _this.ad_title,
                                "ad_description": _this.ad_description,
                                "ad_address": _this.ad_address,
                                "full_ad_address": _this.full_ad_address,
                                "user_id": _this.user.id_User != null ? _this.user.id_User : _this.user.id,
                                "cat_ad": _this.selectedCat.id,
                                "price": _this.price,
                                "phone": _this.phone,
                                "place_id": _this.place_id,
                                "selectedCat": _this.selectedCat,
                                "author_infos": _this.user,
                                // "ad_imgs": this.imgs,
                                "isset_img": ((_this.imgs.length > 0) ? _this.imgs.length : 0)
                            };
                            _this.viewCtrl.dismiss({
                                plch: data_elle
                            });
                            _this.http.post(_this.globals.variables.urls.addAnnonce, data_el, {}).then(function (data) {
                                //this.load = 0;
                                if (JSON.parse(data.data).error != null && JSON.parse(data.data).error != '') {
                                    _this.load = 0;
                                    var alert_5 = _this.alertCtrl.create({
                                        title: 'Information !',
                                        subTitle: JSON.parse(data.data).error,
                                        buttons: ['OK']
                                    });
                                    alert_5.present();
                                }
                                else {
                                    var id_ad = JSON.parse(data.data).id;
                                    var added_1 = JSON.parse(data.data).added;
                                    if (boost == 'oui') {
                                        _this.http.post(_this.globals.variables.urls.addBoost, {
                                            "abonnement_id": selectedBoost.id,
                                            "post_id": id_ad
                                        }, {})
                                            .then(function (resp) {
                                            _this.load = 0;
                                            console.log("Ajout boost reussi");
                                            // console.log(JSON.stringify(resp.data));
                                        }, function (error) {
                                            _this.load = 0;
                                            console.log("Error add boost");
                                            console.log(JSON.stringify(error));
                                        });
                                    }
                                    if (_this.imgs.length <= 0) {
                                        _this.load = 0;
                                        // const alert = this.alertCtrl.create({
                                        //   title: 'Information !',
                                        //   subTitle: 'Votre annonce a été publiée !',
                                        //   buttons: ['OK']
                                        // });
                                        // alert.present();
                                        if (added_1.id !== "") {
                                            console.log("**************** SEND VAR ***************");
                                            _this.sendVar.publish('added', added_1);
                                        }
                                        var toShow = __WEBPACK_IMPORTED_MODULE_7__annonces_annonces__["a" /* AnnoncesPage */];
                                        if (_this.sourcePage == 'mesads') {
                                            toShow = __WEBPACK_IMPORTED_MODULE_12__mesannonces_mesannonces__["a" /* MesannoncesPage */];
                                        }
                                        _this.viewCtrl.dismiss({
                                            ad_id: id_ad
                                        });
                                    }
                                    if (_this.imgs.length > 0) {
                                        var _loop_1 = function (i) {
                                            _this.http.post(_this.globals.variables.urls.uploadAnnonceIMGB64, {
                                                "ad_id": "" + id_ad,
                                                "num_image": "" + (i + 1),
                                                'image': _this.imgs[i].data.nativeURL,
                                                "source": _this.imgs[i].source
                                            }, {})
                                                .then(function (data) {
                                                // console.log(JSON.stringify(data));
                                                if (i == _this.imgs.length - 1) {
                                                    _this.load = 0;
                                                    // try{
                                                    //   this.viewCtrl.dismiss({
                                                    //     ad_id: id_ad
                                                    //   })
                                                    // }
                                                    // catch (error) {
                                                    //   console.log(JSON.stringify(error))
                                                    // }
                                                    // const alert = this.alertCtrl.create({
                                                    //   title: 'Information !',
                                                    //   subTitle: 'Votre annonce a été publiée !',
                                                    //   buttons: ['OK']
                                                    // });
                                                    // alert.present();
                                                    if (added_1.id !== "") {
                                                        added_1.ad_image_1 = (_this.imgs.length > 0) ? _this.imgs[0].data.nativeURL : '';
                                                        added_1.ad_image_2 = (_this.imgs.length > 1) ? _this.imgs[1].data.nativeURL : '';
                                                        added_1.ad_image_3 = (_this.imgs.length > 2) ? _this.imgs[2].data.nativeURL : '';
                                                        added_1.ad_image_4 = (_this.imgs.length > 3) ? _this.imgs[3].data.nativeURL : '';
                                                        var date_fr = added_1.date.charAt(8) + added_1.date.charAt(9) + "/" + added_1.date.charAt(5) + added_1.date.charAt(6) +
                                                            "/" + added_1.date.charAt(0) + added_1.date.charAt(1) + added_1.date.charAt(2) +
                                                            added_1.date.charAt(3) + " " + added_1.date.charAt(11) + added_1.date.charAt(12) + ":" +
                                                            added_1.date.charAt(14) + added_1.date.charAt(15);
                                                        added_1.date_fr = date_fr;
                                                        added_1.images_count = 0;
                                                        if (added_1.ad_image_1 != '' && added_1.ad_image_1 != null)
                                                            added_1.images_count += 1;
                                                        if (added_1.ad_image_2 != '' && added_1.ad_image_2 != null)
                                                            added_1.images_count += 1;
                                                        if (added_1.ad_image_3 != '' && added_1.ad_image_3 != null)
                                                            added_1.images_count += 1;
                                                        if (added_1.ad_image_4 != '' && added_1.ad_image_4 != null)
                                                            added_1.images_count += 1;
                                                        // console.log("eto-------REPLACE TEMP ADD FILE --------eto");
                                                        // console.log(JSON.stringify(added));
                                                        console.log("**************** SEND VAR ***************");
                                                        _this.sendVar.publish('added', added_1);
                                                    }
                                                }
                                            }, function (error) {
                                                _this.load = 0;
                                                _this.sendVar.publish('notadded', 1);
                                                var alert = _this.alertCtrl.create({
                                                    title: 'Information !',
                                                    subTitle: 'Erreur de téléchargement de la ' + ((i + 1) > 1 ? ((i + 1) + "ème") : ((i + 1) + "ère")) + ' image !',
                                                    buttons: ['OK']
                                                });
                                                alert.present();
                                                console.log(JSON.stringify(error));
                                            });
                                        };
                                        //
                                        for (var i = 0; i < _this.imgs.length; i++) {
                                            _loop_1(i);
                                        }
                                    }
                                }
                            }, function (error) {
                                _this.load = 0;
                                console.log("**************** REMOVE ***************");
                                _this.sendVar.publish('toremove', 1);
                                var alert = _this.alertCtrl.create({
                                    title: 'Information !',
                                    subTitle: 'Erreur lors de la publication !',
                                    buttons: ['OK']
                                });
                                alert.present();
                                console.log(JSON.stringify(error));
                            });
                            // 
                        });
                        boost123.present();
                    }
                    else {
                        _this.load = 0;
                    }
                });
                gcdn.present();
            }
            else if (this.ad_title == '') {
                this.load = 0;
                var alert_6 = this.alertCtrl.create({
                    title: 'Information !',
                    subTitle: 'Titre est obligatoire !',
                    buttons: ['OK']
                });
                alert_6.present();
            }
            else if (this.ad_description == '') {
                this.load = 0;
                var alert_7 = this.alertCtrl.create({
                    title: 'Information !',
                    subTitle: 'Description est obligatoire !',
                    buttons: ['OK']
                });
                alert_7.present(); //this.selectedCat != null
            }
            else if (this.selectedCat == null) {
                this.load = 0;
                var alert_8 = this.alertCtrl.create({
                    title: 'Information !',
                    subTitle: 'Selectionner une catégorie !',
                    buttons: ['OK']
                });
                alert_8.present();
            }
            else if (this.ad_address == null || this.ad_address == '') {
                this.load = 0;
                var alert_9 = this.alertCtrl.create({
                    title: 'Information !',
                    subTitle: 'Veuillez renseigner votre adresse !',
                    buttons: ['OK']
                });
                alert_9.present();
            }
        }
    };
    AnnonceAdd2Page.prototype.publichh = function (boost, selectedBoost) {
        var _this = this;
        this.load = 1;
        if (this.source == "update") {
            this.saveUpdate("non", null);
        }
        else {
            if (this.ad_title != '' && this.ad_description != '' && this.selectedCat != null && this.ad_address != '') {
                var gcdn = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_15__generalcnd_generalcnd__["a" /* GeneralcndPage */], {
                    user: this.user,
                    source: "gcdn"
                });
                gcdn.onDidDismiss(function (data) {
                    if (data.state == 'oui') {
                        var boost123 = _this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_8__annonce_boost_annonce_boost__["a" /* AnnonceBoostPage */], {
                            listAb: _this.listAbonne,
                            user: _this.user
                        });
                        boost123.onDidDismiss(function (data123) {
                            _this.http.post(_this.globals.variables.urls.addAnnonce, {
                                "ad_title": _this.ad_title,
                                "ad_description": _this.ad_description,
                                "ad_address": _this.ad_address,
                                "full_ad_address": _this.full_ad_address,
                                "user_id": _this.user.id_User != null ? _this.user.id_User : _this.user.id,
                                "cat_ad": _this.selectedCat.id,
                                "price": _this.price,
                                "phone": _this.phone,
                                "place_id": _this.place_id,
                                "isset_img": ((_this.imgs.length > 0) ? _this.imgs.length : 0)
                            }, {})
                                .then(function (data) {
                                // console.log(JSON.stringify(data.data));
                                //this.load = 0;
                                if (JSON.parse(data.data).error != null && JSON.parse(data.data).error != '') {
                                    _this.load = 0;
                                    var alert_10 = _this.alertCtrl.create({
                                        title: 'Information !',
                                        subTitle: JSON.parse(data.data).error,
                                        buttons: ['OK']
                                    });
                                    alert_10.present();
                                }
                                else {
                                    var id_ad_1 = JSON.parse(data.data).id;
                                    if (boost == 'oui') {
                                        _this.http.post(_this.globals.variables.urls.addBoost, {
                                            "abonnement_id": selectedBoost.id,
                                            "post_id": id_ad_1
                                        }, {})
                                            .then(function (resp) {
                                            _this.load = 0;
                                            console.log("Ajout boost reussi");
                                            // console.log(JSON.stringify(resp.data));
                                        }, function (error) {
                                            _this.load = 0;
                                            console.log("Error add boost");
                                            console.log(JSON.stringify(error));
                                        });
                                    }
                                    if (_this.imgs.length <= 0) {
                                        _this.load = 0;
                                        var alert_11 = _this.alertCtrl.create({
                                            title: 'Information !',
                                            subTitle: 'Votre annonce a été publiée !',
                                            buttons: ['OK']
                                        });
                                        alert_11.present();
                                        var toShow = __WEBPACK_IMPORTED_MODULE_7__annonces_annonces__["a" /* AnnoncesPage */];
                                        if (_this.sourcePage == 'mesads') {
                                            toShow = __WEBPACK_IMPORTED_MODULE_12__mesannonces_mesannonces__["a" /* MesannoncesPage */];
                                        }
                                        _this.viewCtrl.dismiss({
                                            ad_id: id_ad_1
                                        });
                                    }
                                    if (_this.imgs.length > 0) {
                                        var _loop_2 = function (i) {
                                            _this.http.post(_this.globals.variables.urls.uploadAnnonceIMGB64, {
                                                "ad_id": "" + id_ad_1,
                                                "num_image": "" + (i + 1),
                                                'image': _this.imgs[i].data.nativeURL,
                                                "source": _this.imgs[i].source
                                            }, {}
                                            // ,
                                            // this.imgs[i].data.nativeURL,
                                            // 'file'
                                            )
                                                .then(function (data) {
                                                // console.log(JSON.stringify(data));
                                                if (i == _this.imgs.length - 1) {
                                                    _this.load = 0;
                                                    try {
                                                        _this.viewCtrl.dismiss({
                                                            ad_id: id_ad_1
                                                        });
                                                    }
                                                    catch (error) {
                                                        console.log(JSON.stringify(error));
                                                    }
                                                    var alert_12 = _this.alertCtrl.create({
                                                        title: 'Information !',
                                                        subTitle: 'Votre annonce a été publiée !',
                                                        buttons: ['OK']
                                                    });
                                                    alert_12.present();
                                                }
                                            }, function (error) {
                                                _this.load = 0;
                                                var alert = _this.alertCtrl.create({
                                                    title: 'Information !',
                                                    subTitle: 'Erreur de téléchargement de la ' + ((i + 1) > 1 ? ((i + 1) + "ème") : ((i + 1) + "ère")) + ' image !',
                                                    buttons: ['OK']
                                                });
                                                alert.present();
                                                console.log(JSON.stringify(error));
                                            });
                                        };
                                        //
                                        for (var i = 0; i < _this.imgs.length; i++) {
                                            _loop_2(i);
                                        }
                                    }
                                }
                            }, function (error) {
                                _this.load = 0;
                                var alert = _this.alertCtrl.create({
                                    title: 'Information !',
                                    subTitle: 'Erreur lors de la publication !',
                                    buttons: ['OK']
                                });
                                alert.present();
                                console.log(JSON.stringify(error));
                            });
                            // 
                        });
                        boost123.present();
                    }
                    else {
                        _this.load = 0;
                    }
                });
                gcdn.present();
            }
            else if (this.ad_title == '') {
                this.load = 0;
                var alert_13 = this.alertCtrl.create({
                    title: 'Information !',
                    subTitle: 'Titre est obligatoire !',
                    buttons: ['OK']
                });
                alert_13.present();
            }
            else if (this.ad_description == '') {
                this.load = 0;
                var alert_14 = this.alertCtrl.create({
                    title: 'Information !',
                    subTitle: 'Description est obligatoire !',
                    buttons: ['OK']
                });
                alert_14.present(); //this.selectedCat != null
            }
            else if (this.selectedCat == null) {
                this.load = 0;
                var alert_15 = this.alertCtrl.create({
                    title: 'Information !',
                    subTitle: 'Selectionner une catégorie !',
                    buttons: ['OK']
                });
                alert_15.present();
            }
            else if (this.ad_address == null || this.ad_address == '') {
                this.load = 0;
                var alert_16 = this.alertCtrl.create({
                    title: 'Information !',
                    subTitle: 'Veuillez renseigner votre adresse !',
                    buttons: ['OK']
                });
                alert_16.present();
            }
        }
    };
    AnnonceAdd2Page.prototype.deleteFaqImg = function (faq_id, num_image) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.http.post(this.globals.variables.urls.deleteAdImg + "?ad_id=" + faq_id + "&num_image" + num_image, {
                            "ad_id": "" + faq_id,
                            "num_image": num_image
                        }, {})
                            .then(function (data) {
                            console.log("image deleted");
                            // console.log(JSON.stringify(data.data))
                        }, function (error) {
                            console.log("error deleting image");
                            console.log(JSON.stringify(error));
                        })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    AnnonceAdd2Page.prototype.saveUpdate = function (boost, selectedBoost) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var d;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        //updateAd, ad_id (obligatoire), user_id (obligatoire)
                        this.load = 1;
                        if (!(this.imagesToDelete.length > 0)) return [3 /*break*/, 4];
                        d = 0;
                        _a.label = 1;
                    case 1:
                        if (!(d < this.imagesToDelete.length)) return [3 /*break*/, 4];
                        return [4 /*yield*/, this.deleteFaqImg(this.adToUp.id, this.imagesToDelete[d].num_image)];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3:
                        d++;
                        return [3 /*break*/, 1];
                    case 4:
                        this.http.post(this.globals.variables.urls.updateAd, {
                            "ad_id": this.adToUp.id,
                            "ad_title": this.ad_title != this.adToUp.title ? this.ad_title : "",
                            "ad_description": this.ad_description != this.adToUp.description ? this.ad_description : "",
                            "ad_address": this.ad_address != this.adToUp.address ? this.ad_address : "",
                            "full_ad_address": this.full_ad_address != this.adToUp.full_address ? this.full_ad_address : "",
                            "user_id": this.user.id_User != null ? this.user.id_User : this.user.id,
                            "cat_ad": this.selectedCat.id,
                            "price": this.price != this.adToUp.price ? this.price : "",
                            "phone": this.phone != this.adToUp.phone ? this.phone : "",
                            "place_id": this.place_id
                        }, {})
                            .then(function (data) { return __awaiter(_this, void 0, void 0, function () {
                            var _this = this;
                            var alert_17, id_ad, _loop_3, this_1, i, alert_18;
                            return __generator(this, function (_a) {
                                console.log("Result from update : ");
                                // console.log(JSON.stringify(data.data));
                                // this.load = 0;
                                if (JSON.parse(data.data).error != null && JSON.parse(data.data).error != '') {
                                    this.load = 0;
                                    alert_17 = this.alertCtrl.create({
                                        title: 'Information !',
                                        subTitle: JSON.parse(data.data).error,
                                        buttons: ['OK']
                                    });
                                    alert_17.present();
                                }
                                else {
                                    id_ad = JSON.parse(data.data).id;
                                    if (id_ad != '') {
                                        // let id_ad = JSON.parse(data.data).id
                                        if (this.imgs.length > 0) {
                                            console.log("IMGS length : === : " + this.imgs.length);
                                            _loop_3 = function (i) {
                                                if (this_1.imgs[i].data == "") {
                                                    console.log("Break upload");
                                                    // this.load = 0;
                                                }
                                                else {
                                                    console.log("ID_FAQ :  " + this_1.adToUp.id);
                                                    // console.log("IMG_URL : " + this.imgs[i].data.nativeURL)
                                                    console.log("Num image : === : " + (i + 1));
                                                    this_1.http.post(this_1.globals.variables.urls.uploadAnnonceIMGB64, {
                                                        "ad_id": "" + this_1.adToUp.id,
                                                        "num_image": "" + (i + 1),
                                                        "image": this_1.imgs[i].data.nativeURL,
                                                        "source": this_1.imgs[i].source
                                                    }, {}
                                                    // ,
                                                    // this.imgs[i].data.nativeURL,
                                                    // 'file'
                                                    )
                                                        .then(function (data) {
                                                        // this.load = 0;
                                                        console.log("Image uploaded ///");
                                                        // console.log(JSON.stringify(data));
                                                        if (i == _this.imgs.length - 1) {
                                                            _this.load = 0;
                                                        }
                                                    }, function (error) {
                                                        _this.load = 0;
                                                        var alert = _this.alertCtrl.create({
                                                            title: 'Information !',
                                                            subTitle: 'Erreur d\'upload des images.',
                                                            buttons: [
                                                                {
                                                                    text: 'OK',
                                                                    handler: function () {
                                                                        _this.viewCtrl.dismiss();
                                                                    }
                                                                }
                                                            ]
                                                        });
                                                        alert.present();
                                                        console.log(JSON.stringify(error));
                                                    });
                                                }
                                            };
                                            this_1 = this;
                                            for (i = 0; i < this.imgs.length; i++) {
                                                _loop_3(i);
                                            }
                                        }
                                        alert_18 = this.alertCtrl.create({
                                            title: 'Information !',
                                            subTitle: 'Votre annonce est à jour !',
                                            buttons: ['OK']
                                        });
                                        alert_18.present();
                                        this.viewCtrl.dismiss({
                                            ad_id: id_ad
                                        });
                                    }
                                    else {
                                        this.load = 0;
                                        this.viewCtrl.dismiss({
                                            ad_id: id_ad
                                        });
                                    }
                                }
                                return [2 /*return*/];
                            });
                        }); }, function (error) {
                            _this.load = 0;
                            var alert = _this.alertCtrl.create({
                                title: 'Information !',
                                subTitle: 'Erreur lors de la publication !',
                                buttons: ['OK']
                            });
                            alert.present();
                            console.log(JSON.stringify(error));
                        });
                        return [2 /*return*/];
                }
            });
        });
    };
    AnnonceAdd2Page.prototype.changeCat = function () {
        var _this = this;
        var cat = __WEBPACK_IMPORTED_MODULE_6__annonce_cat_annonce_cat__["a" /* AnnonceCatPage */];
        var catModal = this.modalCtrl.create(cat, {
            user: this.user,
            listCat: this.listCat,
            title: "Catégories",
            selectBefore: this.selectedCat
        });
        catModal.onDidDismiss(function (data) {
            if (data != null && data.id != "retour" && data.id != "") {
                _this.selectedCat = data;
            }
            console.log(JSON.stringify(_this.selectedCat));
        });
        catModal.present();
    };
    AnnonceAdd2Page.prototype.updateSearchResults = function () {
        var _this = this;
        clearInterval(this.intPosClick);
        this.setaddress();
        console.log("Typing");
        if (this.autocomplete.input == '') {
            this.autocompleteItems = [];
            return;
        }
        this.GoogleAutocomplete.getPlacePredictions({ input: this.autocomplete.input }, function (predictions, status) {
            if (predictions != null) {
                _this.autocompleteItems = [];
                _this.zone.run(function () {
                    predictions.forEach(function (prediction) {
                        _this.autocompleteItems.push(prediction);
                    });
                });
            }
            console.log("ezezeze***************");
            console.log(_this.autocompleteItems);
        });
    };
    AnnonceAdd2Page.prototype.selectSearchResult = function (item) {
        console.log(JSON.stringify(item));
        this.full_ad_address = JSON.stringify(item);
        this.place_id = item.place_id;
        this.ad_address = item.description;
        this.autocomplete.input = item.description;
        this.autocompleteItems = [];
    };
    AnnonceAdd2Page.prototype.getListAbonne = function () {
        var _this = this;
        this.http.get(this.globals.variables.urls.listAbonnement, {}, {})
            .then(function (data) {
            console.log("Got list boost");
            _this.listAbonne = JSON.parse(data.data);
            console.log(JSON.stringify(_this.listAbonne));
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    AnnonceAdd2Page.prototype.onLocateUser = function () {
        var _this = this;
        this.intPos = setInterval(function () {
            _this.geolocation.getCurrentPosition()
                .then(function (location) {
                console.log('position gotten: long:', location.coords.longitude, ' lat:', location.coords.latitude);
                _this.checklat = location.coords.latitude;
                _this.location = location;
                _this.gmLocation.lat = location.coords.latitude;
                _this.gmLocation.lng = location.coords.longitude;
                if (_this.checklat !== null) {
                    var pos = _this.gmLocation.lat + ',' + _this.gmLocation.lng;
                    _this.http.get('https://maps.googleapis.com/maps/api/place/autocomplete/json?input=a&key=' + _this.globals.variables.API_KEY + '&location=' + pos + '&radius=100', {}, {})
                        .then(function (data) {
                        console.log("**************Result from autocomplete**************");
                        // console.log(JSON.stringify(data.data));
                        var predicts = JSON.parse(data.data).predictions;
                        _this.sideAddress = predicts[0];
                    }, function (error) {
                        console.log("Error from autocomplete");
                        console.log(JSON.stringify(error));
                    });
                    clearInterval(_this.intPos);
                }
            })
                .catch(function (error) {
                console.log('Error getting location', error);
            });
        }, 3000);
    };
    AnnonceAdd2Page.prototype.setSideAddress = function () {
        var _this = this;
        if (this.sideAddress.description != null) {
            this.full_ad_address = JSON.stringify(this.sideAddress);
            this.place_id = this.sideAddress.place_id;
            this.ad_address = this.sideAddress.description;
            this.autocomplete.input = this.sideAddress.description;
            this.autocompleteItems = [];
            clearInterval(this.intPosClick);
        }
        else {
            this.toast.show("En attente du GPS", "5000", "bottom")
                .subscribe(function (t) {
                console.log(JSON.stringify(t));
            });
            this.intPosClick = setInterval(function () {
                if (_this.sideAddress.description != null) {
                    _this.full_ad_address = JSON.stringify(_this.sideAddress);
                    _this.place_id = _this.sideAddress.place_id;
                    _this.ad_address = _this.sideAddress.description;
                    _this.autocomplete.input = _this.sideAddress.description;
                    _this.autocompleteItems = [];
                    clearInterval(_this.intPosClick);
                }
                else {
                    _this.toast.show("En attente du GPS", "5000", "bottom")
                        .subscribe(function (t) {
                        console.log(JSON.stringify(t));
                    });
                }
            }, 5000);
        }
    };
    AnnonceAdd2Page.prototype.requestAutoComplete = function () {
        var _this = this;
        GPSLocation.getCurrentPosition(function (position) {
            console.log("Resultat du GPS");
            console.log(JSON.stringify(position));
            var pos = parseFloat(parseFloat(position.coords.latitude).toFixed(6)) +
                ',' + parseFloat(parseFloat(position.coords.longitude).toFixed(6));
            console.log("Position : " + pos);
            //https://maps.googleapis.com/maps/api/place/autocomplete/output?parameters
            _this.http.get('https://maps.googleapis.com/maps/api/place/autocomplete/json?input=a&key=' + _this.globals.variables.API_KEY + '&location=' + pos + '&radius=100', {}, {})
                .then(function (data) {
                console.log("Result from autocomplete");
                console.log(JSON.stringify(data.data));
                var predicts = JSON.parse(data.data).predictions;
                _this.sideAddress = predicts[0];
            }, function (error) {
                console.log("Error from autocomplete");
                console.log(JSON.stringify(error));
            });
        }, function (error) {
            console.log("Erroeur du GPS");
            console.log(JSON.stringify(error));
            var alert = _this.alertCtrl.create({
                title: 'Information',
                subTitle: 'Activer votre GPS, SVP.',
                buttons: ['Ok']
            });
            alert.present();
        });
    };
    AnnonceAdd2Page.prototype.watchMyPosition = function () {
        var _this = this;
        GPSLocation.watchPosition(function (position) {
            console.log("Resultat du GPS");
            console.log(JSON.stringify(position));
            var pos = parseFloat(parseFloat(position.coords.latitude).toFixed(6)) +
                ',' + parseFloat(parseFloat(position.coords.longitude).toFixed(6));
            console.log("Position : " + pos);
            //https://maps.googleapis.com/maps/api/place/autocomplete/output?parameters
            _this.http.get('https://maps.googleapis.com/maps/api/place/autocomplete/json?input=a&key=' + _this.globals.variables.API_KEY + '&location=' + pos + '&radius=100', {}, {})
                .then(function (data) {
                console.log("Result from autocomplete");
                console.log(JSON.stringify(data.data));
                var predicts = JSON.parse(data.data).predictions;
                _this.sideAddress = predicts[0];
            }, function (error) {
                console.log("Error from autocomplete");
                console.log(JSON.stringify(error));
            });
        }, function (error) {
            console.log("Erroeur du GPS");
            console.log(JSON.stringify(error));
            var alert = _this.alertCtrl.create({
                title: 'Information',
                subTitle: 'Activer votre GPS, SVP.',
                buttons: ['Ok']
            });
            alert.present();
        });
    };
    AnnonceAdd2Page.prototype.setaddress = function () {
        console.log("Auto complete");
        console.log(this.autocomplete.input);
        this.ad_address = this.autocomplete.input;
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('input'),
        __metadata("design:type", Object)
    ], AnnonceAdd2Page.prototype, "myInput", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["e" /* Content */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["e" /* Content */])
    ], AnnonceAdd2Page.prototype, "content", void 0);
    AnnonceAdd2Page = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-annonce-add2',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/annonce-add2/annonce-add2.html"*/'<ion-content>\n\n  <ion-row ion-fixed class="load-ctn" id="load" *ngIf="load == 1">\n    <ion-spinner class="loading-custom" name="crescent" color="vert_logo"></ion-spinner>\n  </ion-row>\n\n  <ion-grid class="container">\n\n    <ion-row class="header">\n\n      <ion-col class="col-cancel" (click)="annulerClick();">\n        <ion-label class="annuler">\n          <img class="back-icon" src="../../assets/icon/left-arrow-blue.svg">\n            <span class="back-faq">Publier dans annonces</span>\n            <span class="none"></span>\n        </ion-label>\n      </ion-col>\n\n    </ion-row>\n\n    <ion-row class="sep"></ion-row>\n\n    <ion-row class="ctn-faq-det">\n      <ion-col>\n        <ion-row class="img-ctn">\n          <ion-col>\n\n            <ion-row no-lines class="input-pub">\n              <ion-input [(ngModel)]="ad_title" name="ad_title" placeholder="Titre"></ion-input>\n            </ion-row>\n\n            <ion-row no-lines class="theme" (click)="changeCat();">\n              <ion-label class="theme-txt">{{selectedCat != null ? selectedCat.name : \'Cat&#233;gories\'}}</ion-label>\n              <img *ngIf="selectedCat != null" class="check-icon" src="../../assets/imgs/da_image/Group.png" />\n            </ion-row>\n\n            <ion-row no-lines class="input-pub">\n\n              <ion-input type="text" class="bb-input" [(ngModel)]="autocomplete.input" (input)="updateSearchResults()"\n                placeholder="Lieu"></ion-input>\n\n\n              <img class="map-marker" src="../../assets/icon/marker6.png" (click)="setSideAddress();">\n\n            </ion-row>\n\n            <ion-list [hidden]="autocompleteItems.length == 0" class="places">\n              <ion-item *ngFor="let item of autocompleteItems" tappable (click)="selectSearchResult(item)">\n                {{ item.description }}\n              </ion-item>\n            </ion-list>\n\n            <ion-row no-lines class="input-pub">\n              <ion-input [(ngModel)]="phone" name="phone" placeholder="Num&#233;ro (facultatif)"></ion-input>\n            </ion-row>\n\n            <ion-row no-lines class="input-pub">\n              <ion-input [(ngModel)]="price" name="price" placeholder="Prix (facultatif)"></ion-input>\n            </ion-row>\n\n          </ion-col>\n        </ion-row>\n\n        <ion-row fixed class="faq-photo">\n          <ion-col>\n            <ion-row>\n              <ion-col (click)="addPhoto(0);">\n                <img class="img" *ngIf="imgs.length >= 1" src="{{imgs[0].url}}" alt="No image found" />\n                <img class="sup-icon" *ngIf="imgs.length >= 1" src="../../assets/icon/recycling-bin.svg" />\n                <ion-row *ngIf="imgs.length < 1" class="alt-img">\n                  <ion-icon name="md-add" class="icon-add" color="bleu"></ion-icon>\n                </ion-row>\n              </ion-col>\n              <ion-col (click)="addPhoto(1);">\n                <img class="img" *ngIf="imgs.length >= 2" src="{{imgs[1].url}}" />\n                <img class="sup-icon" *ngIf="imgs.length >= 2" src="../../assets/icon/recycling-bin.svg" />\n                <ion-row *ngIf="imgs.length < 2" class="alt-img">\n                  <ion-icon name="md-add" class="icon-add" color="bleu"></ion-icon>\n                </ion-row>\n              </ion-col>\n              <ion-col (click)="addPhoto(2);">\n                <img class="img" *ngIf="imgs.length >= 3" src="{{imgs[2].url}}" />\n                <img class="sup-icon" *ngIf="imgs.length >= 3" src="../../assets/icon/recycling-bin.svg" />\n                <ion-row *ngIf="imgs.length < 3" class="alt-img">\n                  <ion-icon name="md-add" class="icon-add" color="bleu"></ion-icon>\n                </ion-row>\n              </ion-col>\n              <ion-col (click)="addPhoto(3);">\n                <img class="img" *ngIf="imgs.length >= 4" src="{{imgs[3].url}}" />\n                <img class="sup-icon" *ngIf="imgs.length >= 4" src="../../assets/icon/recycling-bin.svg" />\n                <ion-row *ngIf="imgs.length < 4" class="alt-img">\n                  <ion-icon name="md-add" class="icon-add" color="bleu"></ion-icon>\n                </ion-row>\n              </ion-col>\n            </ion-row>\n          </ion-col>\n        </ion-row>\n\n        <ion-row class="ctn-faq-desc">\n          <ion-col>\n            <textarea #input class="desc-faq" (keyup)="resizeTxtCmt();" rows="2" placeholder="Description" [(ngModel)]="ad_description"\n              name="ad_description"></textarea>\n          </ion-col>\n        </ion-row>\n\n        <ion-row>\n          <button ion-button round class="btn-gradient-round" (click)="publier(\'non\', null)">Continuer</button>\n        </ion-row>\n      </ion-col>\n    </ion-row>\n\n  </ion-grid>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/annonce-add2/annonce-add2.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_5__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_9__ionic_native_toast__["a" /* Toast */],
            __WEBPACK_IMPORTED_MODULE_10__ionic_native_geolocation__["a" /* Geolocation */],
            __WEBPACK_IMPORTED_MODULE_11__ionic_native_diagnostic__["a" /* Diagnostic */],
            __WEBPACK_IMPORTED_MODULE_13__ionic_native_paypal__["a" /* PayPal */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["f" /* Events */]])
    ], AnnonceAdd2Page);
    return AnnonceAdd2Page;
}());

//# sourceMappingURL=annonce-add2.js.map

/***/ }),

/***/ 67:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ImageviewerPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the ImageviewerPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ImageviewerPage = /** @class */ (function () {
    function ImageviewerPage(navCtrl, navParams, viewCtrl, platform) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.viewCtrl = viewCtrl;
        this.platform = platform;
        this.img = null;
        this.img = navParams.get('img');
        platform.registerBackButtonAction(function () {
            _this.viewCtrl.dismiss();
        });
    }
    ImageviewerPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ImageviewerPage');
    };
    ImageviewerPage.prototype.close = function () {
        this.viewCtrl.dismiss();
    };
    ImageviewerPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-imageviewer',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/imageviewer/imageviewer.html"*/'<ion-content class="pr">\n\n  <div class="container">\n    <div class="header-img-v">\n      <img class="close-btn" src="../../assets/icon/close-white.svg" (click)="close()">\n    </div>\n    <div class="img-ctn">\n      <img class="img-to-show" [src]="img">\n    </div>\n  </div>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/imageviewer/imageviewer.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */]])
    ], ImageviewerPage);
    return ImageviewerPage;
}());

//# sourceMappingURL=imageviewer.js.map

/***/ }),

/***/ 68:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FaqcomPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_toast__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_social_sharing__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__imageviewer_imageviewer__ = __webpack_require__(67);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__dentart_dentart__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__menu_menu__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__uprofil_uprofil__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__annonces_annonces__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__formations_formations__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__a_savoir_a_savoir__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__notifications_notifications__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__mesannonces_mesannonces__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__ionic_storage__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__photopopup_photopopup__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__faqadd3_faqadd3__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__sharemodal_sharemodal__ = __webpack_require__(38);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};



















/**
 * Generated class for the FaqcomPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var FaqcomPage = /** @class */ (function () {
    function FaqcomPage(navCtrl, navParams, keyboard, http, globals, modalCtrl, events, toast, socialSharing, platform, storage, zone, changeRef, alertCtrl, element) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.keyboard = keyboard;
        this.http = http;
        this.globals = globals;
        this.modalCtrl = modalCtrl;
        this.events = events;
        this.toast = toast;
        this.socialSharing = socialSharing;
        this.platform = platform;
        this.storage = storage;
        this.zone = zone;
        this.changeRef = changeRef;
        this.alertCtrl = alertCtrl;
        this.element = element;
        this.load = 0;
        this.source = '';
        this.faq_id = "";
        this.user_id = "";
        this.faq_comment = "";
        this.nb_img_faq = [];
        this.active_image = 1;
        this.displayedPopoverID = "";
        this.newCommentInterval = null;
        this.isSendButtonActive = true;
        this.listFaQTheme = [];
        try {
            this.faq = navParams.get('faq');
            this.user = navParams.get('user');
            this.source = navParams.get('source');
            this.listFaQTheme = navParams.get('theme');
            this.user_id = (this.user.id_User != null ? this.user.id_User : this.user.id);
            // console.log("id_faq :")
            // console.log(this.faq.faq.id)
            // console.log("Coms struct")
            // console.log(JSON.stringify(this.faq.faq.coms))
            if (this.faq.faq.faq_image_1 != null && this.faq.faq.faq_image_1 != '') {
                this.nb_img_faq.push('1');
            }
            if (this.faq.faq.faq_image_2 != null && this.faq.faq.faq_image_2 != '') {
                this.nb_img_faq.push('2');
            }
            if (this.faq.faq.faq_image_3 != null && this.faq.faq.faq_image_3 != '') {
                this.nb_img_faq.push('3');
            }
            if (this.faq.faq.faq_image_4 != null && this.faq.faq.faq_image_4 != '') {
                this.nb_img_faq.push('4');
            }
            this.active_image = parseInt(this.nb_img_faq[0]);
            platform.registerBackButtonAction(function () {
                _this.goBack();
            });
        }
        catch (error) {
            console.log("Error from constructor");
            console.log(JSON.stringify(error));
        }
    }
    FaqcomPage.prototype.ionViewWillEnter = function () {
        var _this = this;
        this.platform.registerBackButtonAction(function () {
            _this.goBack();
            // this.navCtrl.pop()
        });
    };
    FaqcomPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        try {
            console.log('ionViewDidLoad FaqcomPage');
            if (this.source == 'com') {
                setTimeout(function () {
                    _this.input['_native'].nativeElement.focus();
                    _this.content.scrollTo(0, 9999999999999, 0);
                }, 500);
            }
            this.newCommentInterval = setInterval(function () {
                _this.getCommentAsync();
            }, 15000);
        }
        catch (error) {
            console.log("Error from alertBeforeSupCom");
            console.log(JSON.stringify(error));
        }
    };
    FaqcomPage.prototype.ionViewWillLeave = function () {
        try {
            if (this.newCommentInterval != null)
                clearInterval(this.newCommentInterval);
        }
        catch (error) {
            console.log("Error from alertBeforeSupCom");
            console.log(JSON.stringify(error));
        }
    };
    FaqcomPage.prototype.ionViewWillDismiss = function () {
        try {
            if (this.newCommentInterval != null)
                clearInterval(this.newCommentInterval);
        }
        catch (error) {
            console.log("Error from alertBeforeSupCom");
            console.log(JSON.stringify(error));
        }
    };
    // ngOnChanges() {
    //   document.getElementById('container').style.paddingBottom = (document.getElementById('bottom_input').style.height + 15) + "px";
    // }
    FaqcomPage.prototype.goToHome = function () {
        try {
            this.navCtrl.popToRoot();
        }
        catch (error) {
            console.log("Error from alertBeforeSupCom");
            console.log(JSON.stringify(error));
        }
    };
    FaqcomPage.prototype.openMenu = function () {
        var _this = this;
        try {
            var menu = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_8__menu_menu__["a" /* MenuPage */], {
                user: this.user
            }, {
                enterAnimation: 'modal-translate-up-enter',
                leaveAnimation: 'modal-translate-up-leave'
            });
            //let menu = MenuPage;
            menu.onDidDismiss(function (page) {
                if (page.title == "Partages") {
                    //
                }
                else if (page.title == "profil") {
                    var adPage = __WEBPACK_IMPORTED_MODULE_9__uprofil_uprofil__["a" /* UprofilPage */];
                    _this.navCtrl.push(adPage, {
                        user: _this.user
                    }, {
                        animate: true
                    });
                }
                else if (page.title == "Annonces") {
                    var adPage = __WEBPACK_IMPORTED_MODULE_10__annonces_annonces__["a" /* AnnoncesPage */];
                    _this.navCtrl.push(adPage, {
                        user: _this.user
                    }, {
                        animate: true
                    });
                }
                else if (page.title == "Formations") {
                    var formPage = __WEBPACK_IMPORTED_MODULE_11__formations_formations__["a" /* FormationsPage */];
                    _this.navCtrl.push(formPage, {
                        user: _this.user
                    }, {
                        animate: true
                    });
                }
                else if (page.title == "News") {
                    var actuPage = __WEBPACK_IMPORTED_MODULE_12__a_savoir_a_savoir__["a" /* ASavoirPage */];
                    _this.navCtrl.push(actuPage, {
                        user: _this.user
                    }, {
                        animate: true
                    });
                }
                else if (page.title == "Mes alertes") {
                    var notif = __WEBPACK_IMPORTED_MODULE_13__notifications_notifications__["a" /* NotificationsPage */];
                    _this.navCtrl.push(notif, {
                        user: _this.user
                    }, {
                        animate: true
                    });
                }
                else if (page.title == 'mesannonces') {
                    var notif = __WEBPACK_IMPORTED_MODULE_14__mesannonces_mesannonces__["a" /* MesannoncesPage */];
                    _this.navCtrl.push(notif, {
                        user: _this.user
                    }, {
                        animate: true
                    });
                }
                else if (page.title == "deconnexion") {
                    _this.events.publish('user:logedOut', _this.user);
                    _this.load = 1;
                    _this.storage.set('user', null)
                        .then(function (data) {
                        // console.log(JSON.stringify(data));
                        setTimeout(function () {
                            _this.load = 0;
                            _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_7__dentart_dentart__["a" /* DentartPage */], {}, {
                                animate: true
                            });
                        }, 500);
                    }, function (error) {
                        console.log(JSON.stringify(error));
                    });
                }
                else if (page.title == "") {
                    //
                }
            });
            menu.present();
        }
        catch (error) {
            console.log("Error from alertBeforeSupCom");
            console.log(JSON.stringify(error));
        }
    };
    FaqcomPage.prototype.resizeTxtCmt = function () {
        try {
            // this.myInput.nativeElement.style.height = 'auto';
            // this.myInput.nativeElement.style.height = (this.myInput.nativeElement.scrollHeight) + 'px';
            // this.scrollElement.nativeElement.scrollTop = this.scrollElement.nativeElement.scrollHeight;
            // this.content.scrollToBottom();
            // this.content.scrollTop = this.content.scrollHeight;
            var textArea = this.element.nativeElement.getElementsByTagName('textarea')[0];
            textArea.style.overflow = 'hidden';
            textArea.style.height = 'auto';
            textArea.style.height = textArea.scrollHeight + 'px';
        }
        catch (error) {
            console.log("Error from alertBeforeSupCom");
            console.log(JSON.stringify(error));
        }
    };
    FaqcomPage.prototype.inputCmtFocus = function () {
        try {
            // this.content.scrollToBottom();
            this.content.scrollTop = this.content.scrollHeight;
        }
        catch (error) {
            console.log("Error from alertBeforeSupCom");
            console.log(JSON.stringify(error));
        }
    };
    FaqcomPage.prototype.slideChanged = function () {
        try {
            console.log(this.mySlider.getActiveIndex());
            if (this.mySlider.getActiveIndex() < this.nb_img_faq.length) {
                this.active_image = parseInt(this.nb_img_faq[this.mySlider.getActiveIndex()]);
            }
        }
        catch (error) {
            console.log("Error from alertBeforeSupCom");
            console.log(JSON.stringify(error));
        }
    };
    FaqcomPage.prototype.goBack = function () {
        try {
            this.navCtrl.pop();
        }
        catch (error) {
            console.log("Error from alertBeforeSupCom");
            console.log(JSON.stringify(error));
        }
    };
    FaqcomPage.prototype.takePicture = function () {
        var _this = this;
        try {
            var takePic = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_16__photopopup_photopopup__["a" /* PhotopopupPage */], {});
            takePic.onDidDismiss(function (data) {
                _this.platform.registerBackButtonAction(function () {
                    _this.goBack();
                });
                if (data != null) {
                    _this.img = data;
                }
            });
            takePic.present();
            // let newphoto = this.modalCtrl.create(Faqadd1Page, {
            //   source: 2
            // });
            // newphoto.onDidDismiss(data => {
            //   if (data != null)
            //     this.img = data;
            //   //console.log(JSON.stringify(data));
            // });
            // newphoto.present();
        }
        catch (error) {
            console.log("Error from takePicture");
            console.log(JSON.stringify(error));
        }
    };
    FaqcomPage.prototype.comment = function () {
        try {
            // this.myInput.focus();
            //document.getElementById('tab_faq').style.display = "none";
            // document.getElementById('com_txt').focus();
            this.input['_native'].nativeElement.focus();
        }
        catch (error) {
            console.log("Error from comment");
            console.log(JSON.stringify(error));
        }
    };
    FaqcomPage.prototype.showTab = function () {
        try {
            document.getElementById('tab_faq').style.display = "block";
            document.getElementById('tab_faq').style.position = "sticky";
            document.getElementById('tab_faq').style.backgroundColor = "rgba(255, 255, 255, 0.97)";
            document.getElementById('tab_faq').style.textAlign = "center";
            document.getElementById('tab_faq').style.zIndex = "999999";
            document.getElementById('tab_faq').style.width = "100%";
            document.getElementById('tab_faq').style.bottom = "0";
            document.getElementById('tab_faq').style.left = "0";
            document.getElementById('tab_faq').style.padding = "3px";
        }
        catch (error) {
            console.log("Error from showTab");
            console.log(JSON.stringify(error));
        }
    };
    FaqcomPage.prototype.getCommentAsync = function () {
        var _this = this;
        try {
            if (this.faq.faq.coms == null) {
                this.faq.faq.coms = [];
            }
            this.http.post(this.globals.variables.urls.getListComment, {
                "post_id": this.faq.faq.id,
                "limit": 999999,
                "offset": 0
            }, {})
                .then(function (data) {
                var comments = JSON.parse(data.data);
                console.log("List new comment");
                // console.log(JSON.stringify(comments))
                if (_this.faq.faq.coms.length) {
                    for (var si = 0; si < _this.faq.faq.coms.length; si++) {
                        if (typeof (_this.faq.faq.coms[si].temp) !== undefined && _this.faq.faq.coms[si].temp == 1) {
                            _this.faq.faq.coms.splice(si, 1);
                            break;
                        }
                    }
                }
                if (_this.faq.faq.coms.length == 0) {
                    var allComs = [];
                    var newCom = null;
                    allComs = _this.faq.faq.coms;
                    for (var i = 0; i < allComs.length; i++) {
                        if (comments[0].data.comment_ID == allComs[i].data.comment_ID) {
                            break;
                        }
                        else if (comments[0].data.comment_ID != allComs[i].data.comment_ID && i == (allComs.length - 1)) {
                            newCom = comments[0];
                        }
                    }
                    if (allComs.length == 0 && comments.length > 0) {
                        newCom = comments[0];
                        allComs.push(newCom);
                        _this.faq.faq.coms = allComs;
                        _this.faq.faq.comments_count += 1;
                        _this.resizeTxtCmt();
                    }
                    else if (newCom != null) {
                        allComs.push(newCom);
                        _this.faq.faq.coms = allComs;
                        _this.faq.faq.comments_count += 1;
                        _this.resizeTxtCmt();
                    }
                }
                else {
                    var yetComs = [];
                    var nComs = [];
                    for (var i = 0; i < _this.faq.faq.coms.length; i++) {
                        yetComs.push(_this.faq.faq.coms[i].data.comment_ID);
                    }
                    for (var i = 0; i < comments.length; i++) {
                        nComs.push(comments[i].data.comment_ID);
                        if (yetComs.indexOf(comments[i].data.comment_ID) < 0) {
                            _this.faq.faq.coms.push(comments[i]);
                            _this.faq.faq.comments_count += 1;
                        }
                    }
                    for (var i = 0; i < _this.faq.faq.coms.length; i++) {
                        if (nComs.indexOf(_this.faq.faq.coms[i].data.comment_ID) < 0) {
                            _this.faq.faq.coms.splice(i, 1);
                            _this.faq.faq.comments_count -= 1;
                        }
                    }
                }
            }, function (error) {
                console.log("Error getting new comment");
                console.log(JSON.stringify(error));
            })
                .catch(function (error) {
                console.log("Error getting new comment");
                console.log(JSON.stringify(error));
            });
        }
        catch (error) {
            console.log("Error from getCommentAsync");
            console.log(JSON.stringify(error));
        }
    };
    FaqcomPage.prototype.addComment = function () {
        var _this = this;
        // try {
        if ((this.faq_comment == null || this.faq_comment == "") && this.img == null) {
            return true;
        }
        if (!this.isSendButtonActive) {
            console.log("En cours denvoi com ...");
            return true;
        }
        else {
            console.log("Sending com ...");
            this.isSendButtonActive = false;
        }
        if (this.newCommentInterval != null) {
            console.log("*****************newCommentInterval COM****************");
            clearInterval(this.newCommentInterval);
            setTimeout(function () {
                _this.newCommentInterval = setInterval(function () {
                    _this.getCommentAsync();
                }, 15000);
            }, 15000);
        }
        console.log(JSON.stringify(this.newCommentInterval));
        var user_id = (this.user.id_User != null ? this.user.id_User : this.user.id);
        console.log("User id : " + user_id);
        var olHeight = this.content.getContentDimensions().scrollHeight;
        // this.load = 1;
        var vcom = this.faq_comment;
        var immg = this.img;
        this.faq_comment = "";
        var today = new Date();
        var nowdate = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + ' ' + today.getHours() + ":" + today.getMinutes() + ":" + today.getSeconds();
        var tempCom = {
            "data": {
                "comment_ID": "757",
                "comment_post_ID": this.faq.faq.id,
                "comment_author": this.user.pseudo,
                "comment_author_email": this.user.user_email,
                "comment_author_url": "",
                "comment_author_IP": "",
                "comment_date": nowdate,
                "comment_date_gmt": nowdate,
                "comment_content": vcom,
                "comment_karma": "0",
                "comment_approved": "1",
                "comment_agent": "",
                "comment_type": "",
                "comment_parent": "0",
                "user_id": this.user.id
            },
            "image": (immg != null) ? immg.data.nativeURL : "",
            "author_infos": this.user,
            "temp": 1
        };
        // console.log(JSON.stringify(immg))
        this.faq_comment = "";
        if ((typeof this.input['_native'].nativeElement) !== undefined) {
            this.input['_native'].nativeElement.blur();
        }
        // this.load = 0;
        this.faq.faq.coms.push(tempCom);
        this.img = null;
        this.faq.faq.comments_count++;
        setTimeout(function () {
            _this.content.scrollTo(0, 9999999999999, 0);
        }, 100);
        console.log("*********SENDING VAR COM**********");
        this.events.publish("new:com", 1);
        if (immg != null) {
            console.log("Adding comment with image");
            this.http.uploadFile(this.globals.variables.urls.addCommentFaQ, {
                "faq_id": "" + this.faq.faq.id,
                "user_id": "" + user_id,
                "faq_comment": vcom
            }, {}, immg.data.upload, 'file')
                .then(function (data) {
                _this.isSendButtonActive = true;
            }, function (error) {
                console.log(JSON.stringify(error));
                _this.isSendButtonActive = true;
            });
        }
        else {
            this.http.post(this.globals.variables.urls.addCommentFaQ, {
                "faq_id": "" + this.faq.faq.id,
                "user_id": "" + user_id,
                "faq_comment": vcom
            }, {})
                .then(function (data) {
                // console.log(JSON.stringify(data.data));
                var res = JSON.parse(data.data);
                _this.faq_comment = "";
                // console.log(this.faq_comment);
                _this.isSendButtonActive = true;
                _this.load = 0;
            }, function (error) {
                console.log(JSON.stringify(error));
                _this.isSendButtonActive = true;
            });
        }
    };
    FaqcomPage.prototype.addToFavorite = function (faq) {
        var _this = this;
        try {
            this.http.post(this.globals.variables.urls.addFavorite, {
                "user_id": (this.user.id_User != null ? this.user.id_User : this.user.id),
                "post_id": faq.faq.id
            }, {})
                .then(function (data) {
                var res = JSON.parse(data.data);
                if (res.status == "ok") {
                    if (faq.faq.user_favorite == 0) {
                        faq.faq.favorite_count = parseInt(faq.faq.favorite_count) + 1;
                        faq.faq.user_favorite = 1;
                        _this.toast.show("Vous avez aimé ce partage", "2000", "bottom").subscribe(function (toast) {
                            console.log(toast);
                        });
                    }
                    else {
                        faq.faq.favorite_count = parseInt(faq.faq.favorite_count) - 1;
                        faq.faq.user_favorite = 0;
                        _this.toast.show("Vous avez annulé votre \"J'aime\"", "2000", "bottom").subscribe(function (toast) {
                            console.log(toast);
                        });
                    }
                }
                else {
                    console.log(JSON.stringify(res));
                    _this.toast.show("Vous avez déjà aimé ce partage", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
                //console.log(JSON.stringify(data.data));
            }, function (error) {
                console.log(JSON.stringify(error));
            });
        }
        catch (error) {
            console.log("Error from addToFavorite");
            console.log(JSON.stringify(error));
        }
    };
    FaqcomPage.prototype.addToShare = function (faq) {
        var _this = this;
        try {
            //addToShare
            this.http.post(this.globals.variables.urls.addToShare, {
                "user_id": (this.user.id_User != null ? this.user.id_User : this.user.id),
                "post_id": faq.faq.id
            }, {})
                .then(function (data) {
                var res = JSON.parse(data.data);
                console.log(JSON.stringify(res));
                if (res.status == "ok") {
                    _this.faq.faq.share_count = parseInt(faq.faq.share_count) + 1;
                    _this.toast.show("Vous avez partagé ce partage", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                    //faq.faq.comments_count = parseInt(faq.faq.comments_count) + 1;
                }
                else {
                    console.log(JSON.stringify(res));
                    _this.toast.show("Vous avez déjà partagé ce partage", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
                //console.log(JSON.stringify(data.data));
            }, function (error) {
                console.log(JSON.stringify(error));
            });
        }
        catch (error) {
            console.log("Error from addToShare");
            console.log(JSON.stringify(error));
        }
    };
    FaqcomPage.prototype.shareViaApp = function () {
        var _this = this;
        var file = [];
        var bodyText = "";
        var link = "";
        bodyText += "";
        var perma_link = "";
        bodyText += this.faq.author.pseudo + " a partagé : \n";
        bodyText += this.faq.faq.no_html_description;
        perma_link = this.faq.faq.url;
        if (this.faq.faq.faq_image_1 != null && this.faq.faq.faq_image_1 != '') {
            file.push(this.faq.faq.faq_image_1);
        }
        if (this.faq.faq.faq_image_2 != null && this.faq.faq.faq_image_2 != '') {
            file.push(this.faq.faq.faq_image_2);
        }
        if (this.faq.faq.faq_image_3 != null && this.faq.faq.faq_image_3 != '') {
            file.push(this.faq.faq.faq_image_3);
        }
        if (this.faq.faq.faq_image_4 != null && this.faq.faq.faq_image_4 != '') {
            file.push(this.faq.faq.faq_image_4);
        }
        var shareModal = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_18__sharemodal_sharemodal__["a" /* SharemodalPage */], {
            file: file,
            bodyText: bodyText,
            link: link,
            perma_link: perma_link
        });
        shareModal.onDidDismiss(function (data) {
            _this.platform.registerBackButtonAction(function () {
                _this.goBack();
                // this.navCtrl.pop()
            });
            console.log("Result from sharing : ");
            console.log(JSON.stringify(data));
            if (data.shared) {
                if (_this.faq.type == 'faq' && _this.faq.faq.id == _this.faq.faq.id) {
                    _this.faq.faq.share_count = parseInt(_this.faq.faq.share_count) + 1;
                    _this.faq.faq.user_shared = 1;
                    // this.toast.show("Vous avez partagé ce partage", "2000", "bottom").subscribe(
                    //   toast => {
                    //     console.log(toast);
                    //   }
                    // );
                }
                _this.http.post(_this.globals.variables.urls.addToShare, {
                    "user_id": (_this.user.id_User != null ? _this.user.id_User : _this.user.id),
                    "post_id": _this.faq.faq.id
                }, {})
                    .then(function (data) {
                    var res = JSON.parse(data.data);
                    console.log(JSON.stringify(res));
                    if (res.status == "ok") {
                    }
                    else {
                        console.log(JSON.stringify(res));
                    }
                }, function (error) {
                    console.log(JSON.stringify(error));
                });
            }
        });
        shareModal.present();
    };
    FaqcomPage.prototype.share = function (faq) {
        var _this = this;
        try {
            var file = [];
            if (faq.faq.faq_image_1 != null && faq.faq.faq_image_1 != '') {
                file.push(faq.faq.faq_image_1);
            }
            if (faq.faq.faq_image_2 != null && faq.faq.faq_image_2 != '') {
                file.push(faq.faq.faq_image_2);
            }
            if (faq.faq.faq_image_3 != null && faq.faq.faq_image_3 != '') {
                file.push(faq.faq.faq_image_3);
            }
            if (faq.faq.faq_image_4 != null && faq.faq.faq_image_4 != '') {
                file.push(faq.faq.faq_image_4);
            }
            this.socialSharing.share(faq.faq.description, faq.faq.title, file, '')
                .then(function (data) {
                _this.toast.show("C'est partagé", "2000", "bottom").subscribe(function (toast) {
                    console.log(toast);
                });
                console.log("Share success");
                console.log(JSON.stringify(data));
                _this.http.post(_this.globals.variables.urls.addToShare, {
                    "user_id": (_this.user.id_User != null ? _this.user.id_User : _this.user.id),
                    "post_id": faq.faq.id
                }, {})
                    .then(function (data) {
                    var res = JSON.parse(data.data);
                    console.log(JSON.stringify(res));
                    if (res.status == "ok") {
                        faq.faq.share_count = parseInt(faq.faq.share_count) + 1;
                        faq.faq.user_shared = 1;
                        _this.toast.show("Vous avez partagé ce FaQ", "2000", "bottom").subscribe(function (toast) {
                            console.log(toast);
                        });
                        //faq.faq.comments_count = parseInt(faq.faq.comments_count) + 1;
                    }
                    else {
                        console.log(JSON.stringify(res));
                        /* this.toast.show("Vous avez déjà partagé ce FaQ", "2000", "center").subscribe(
                          toast => {
                            console.log(toast);
                          }
                        ); */
                    }
                    //console.log(JSON.stringify(data.data));
                }, function (error) {
                    console.log(JSON.stringify(error));
                });
            }, function (error) {
                console.log("Share error");
                console.log(JSON.stringify(error));
            });
        }
        catch (error) {
            console.log("Error from share");
            console.log(JSON.stringify(error));
        }
    };
    FaqcomPage.prototype.report = function (faq, iconItemID) {
        var _this = this;
        try {
            //repportFaQ
            var selectedItem_1 = document.getElementById(iconItemID);
            selectedItem_1.classList.add("fadeDown");
            selectedItem_1.style.opacity = "0.2";
            this.http.post(this.globals.variables.urls.repportFaQ, {
                "user_id": (this.user.id_User != null ? this.user.id_User : this.user.id),
                "post_id": faq.faq.id
            }, {})
                .then(function (data) {
                var res = JSON.parse(data.data);
                console.log(JSON.stringify(res));
                if (res.status == "ok") {
                    if (faq.faq.user_report == 1) {
                        faq.faq.user_report = 0;
                        _this.toast.show("Votre signalisation a été annulée", "2000", "bottom").subscribe(function (toast) {
                            console.log(toast);
                        });
                    }
                    else {
                        faq.faq.user_report = 1;
                        _this.toast.show("Vous avez signalé ce partage", "2000", "bottom").subscribe(function (toast) {
                            console.log(toast);
                        });
                    }
                }
                else {
                    console.log(JSON.stringify(res));
                    _this.toast.show("Vous avez déjà signalé ce partage", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
                selectedItem_1.classList.remove("fadeDown");
                selectedItem_1.style.opacity = "1";
                document.getElementById(_this.displayedPopoverID).classList.remove("popoverdisplay");
                document.getElementById(_this.displayedPopoverID).classList.add("popoverhide");
                document.getElementById(_this.displayedPopoverID).style.display = "none";
                _this.displayedPopoverID = "";
                //console.log(JSON.stringify(data.data));
            }, function (error) {
                console.log(JSON.stringify(error));
            });
        }
        catch (error) {
            console.log("Error from report");
            console.log(JSON.stringify(error));
        }
    };
    FaqcomPage.prototype.supImg = function () {
        this.img = null;
    };
    FaqcomPage.prototype.viewImage = function (img) {
        var _this = this;
        try {
            var iv = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_6__imageviewer_imageviewer__["a" /* ImageviewerPage */], {
                img: img
            });
            iv.onDidDismiss(function () {
                _this.platform.registerBackButtonAction(function () {
                    _this.goBack();
                });
            });
            iv.present();
        }
        catch (error) {
            console.log("Error from viewImage");
            console.log(JSON.stringify(error));
        }
    };
    // public addToFav(faq, iconId) {
    //   this.http.post(this.globals.variables.urls.addLike,
    //     {
    //       user_id: this.user.id_User != null ? this.user.id_User : this.user.id,
    //       post_id: faq.faq.id
    //     },
    //     {})
    //     .then(
    //       data => {
    //         let res = JSON.parse(data.data);
    //         console.log("Resultat du serveur");
    //         console.log(JSON.stringify(res));
    //         if (res.status == "ok") {
    //           if (faq.faq.user_like == 0) {
    //             faq.faq.user_like = 1;
    //             this.toast.show("Ajouté dans vos favoris", "2000", "bottom")
    //               .subscribe(t => {
    //                 console.log(JSON.stringify(t));
    //               });
    //           }
    //           else if (faq.faq.user_like == 1) {
    //             faq.faq.user_like = 0;
    //             this.toast.show("Supprimé de vos favoris", "2000", "bottom")
    //               .subscribe(t => {
    //                 console.log(JSON.stringify(t));
    //               });
    //           }
    //         }
    //         else {
    //           this.toast.show("Erreur lors d'ajout dans vos favoris", "2000", "bottom")
    //             .subscribe(t => {
    //               console.log(JSON.stringify(t));
    //             });
    //         }
    //       },
    //       error => {
    //         console.log("Erreur d'acces au serveur");
    //       }
    //     )
    // }
    FaqcomPage.prototype.addToFav = function (faq, iconItemID) {
        var _this = this;
        try {
            //this.favFlash = "favFlashIn";
            var selectedItem_2 = document.getElementById(iconItemID);
            selectedItem_2.classList.add("fadeDown");
            selectedItem_2.style.opacity = "0.2";
            this.http.post(this.globals.variables.urls.addLike, {
                user_id: (this.user.id_User != null ? this.user.id_User : this.user.id),
                post_id: faq.faq.id
            }, {})
                .then(function (data) {
                var res = JSON.parse(data.data);
                console.log("Resultat du serveur");
                console.log(JSON.stringify(res));
                selectedItem_2.classList.remove("fadeDown");
                selectedItem_2.style.opacity = "1";
                document.getElementById(_this.displayedPopoverID).classList.remove("popoverdisplay");
                document.getElementById(_this.displayedPopoverID).classList.add("popoverhide");
                document.getElementById(_this.displayedPopoverID).style.display = "none";
                _this.displayedPopoverID = "";
                if (res.status == "ok") {
                    if (faq.faq.user_like == 0) {
                        faq.faq.user_like = 1;
                        _this.toast.show("Ajouté dans vos favoris", "2000", "bottom")
                            .subscribe(function (t) {
                            console.log(JSON.stringify(t));
                        });
                    }
                    else if (faq.faq.user_like == 1) {
                        faq.faq.user_like = 0;
                        _this.toast.show("Supprimé de vos favoris", "2000", "bottom")
                            .subscribe(function (t) {
                            console.log(JSON.stringify(t));
                        });
                    }
                }
                else {
                    _this.toast.show("Erreur lors d'ajout dans vos favoris", "2000", "bottom")
                        .subscribe(function (t) {
                        console.log(JSON.stringify(t));
                    });
                }
            }, function (error) {
                console.log("Erreur d'acces au serveur");
            });
        }
        catch (error) {
            console.log("Error from addToFav");
            console.log(JSON.stringify(error));
        }
    };
    FaqcomPage.prototype.displayPopover = function (popoverid) {
        try {
            var classL = document.getElementById(popoverid).classList.toString();
            console.log(classL);
            console.log(classL.indexOf("popoverdisplay"));
            if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") === -1 && this.displayedPopoverID == "") {
                console.log("=====///===Displayed ", popoverid);
                document.getElementById(popoverid).style.display = "block";
                document.getElementById(popoverid).classList.add("popoverdisplay");
                this.displayedPopoverID = popoverid;
                console.log("=====///===Displayed ", popoverid);
            }
            else if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") === -1 && this.displayedPopoverID != "") {
                console.log("=====///===Displayed ", popoverid);
                document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay");
                document.getElementById(this.displayedPopoverID).classList.add("popoverhide");
                document.getElementById(this.displayedPopoverID).style.display = "none";
                document.getElementById(popoverid).style.display = "block";
                document.getElementById(popoverid).classList.add("popoverdisplay");
                this.displayedPopoverID = popoverid;
                console.log("=====///===Displayed ", popoverid);
            }
            else if (classL.indexOf("popoverdisplay") !== -1 && classL.indexOf("popoverhide") === -1 && this.displayedPopoverID == popoverid) {
                console.log("=====///===Hiden ", popoverid);
                document.getElementById(popoverid).classList.remove("popoverdisplay");
                document.getElementById(popoverid).classList.add("popoverhide");
                document.getElementById(popoverid).style.display = "none";
                this.displayedPopoverID = "";
                console.log("=====///===Hiden ", popoverid);
            }
            else if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") !== -1 && this.displayedPopoverID != popoverid && this.displayedPopoverID != "") {
                console.log("=====///===Displayed Other : => ", popoverid);
                document.getElementById(this.displayedPopoverID).classList.remove("popoverdisplay");
                document.getElementById(this.displayedPopoverID).classList.add("popoverhide");
                document.getElementById(this.displayedPopoverID).style.display = "none";
                document.getElementById(popoverid).style.display = "block";
                document.getElementById(popoverid).classList.remove("popoverhide");
                document.getElementById(popoverid).classList.add("popoverdisplay");
                this.displayedPopoverID = popoverid;
                console.log("=====///===Displayed Other : => ", popoverid);
            }
            else if (classL.indexOf("popoverdisplay") === -1 && classL.indexOf("popoverhide") !== -1 && this.displayedPopoverID == "") {
                console.log("=====///===Displayed Once : => ", popoverid);
                document.getElementById(popoverid).classList.remove("popoverhide");
                document.getElementById(popoverid).classList.remove("popoverdisplay");
                document.getElementById(popoverid).style.display = "block";
                document.getElementById(popoverid).classList.add("popoverdisplay");
                this.displayedPopoverID = popoverid;
                console.log("=====///===Displayed Once : => ", popoverid);
            }
            else if (classL.indexOf("popoverdisplay") !== -1 && this.displayedPopoverID == popoverid) {
                // this.displayHide()
            }
        }
        catch (error) {
            console.log("Error from displayPopover");
            console.log(JSON.stringify(error));
        }
    };
    FaqcomPage.prototype.showComAction = function () {
        try {
            document.getElementById("comActions").style.display = "inline";
        }
        catch (error) {
            console.log("Error from showComAction");
            console.log(JSON.stringify(error));
        }
    };
    FaqcomPage.prototype.annulerSuppressionCom = function () {
        try {
            document.getElementById("comActions").style.display = "none";
        }
        catch (error) {
            console.log("Error from annulerSuppressionCom");
            console.log(JSON.stringify(error));
        }
    };
    FaqcomPage.prototype.supprimerCom = function (com) {
        var _this = this;
        try {
            if (this.newCommentInterval != null) {
                clearInterval(this.newCommentInterval);
                setTimeout(function () {
                    _this.newCommentInterval = setInterval(function () {
                        _this.getCommentAsync();
                    }, 15000);
                }, 15000);
            }
            //deleteComment
            console.log("suppression du commentaire");
            this.http.post(this.globals.variables.urls.deleteComment, {
                "comment_ID": com.data.comment_ID
            }, {})
                .then(function (data) {
                var res = JSON.parse(data.data);
                console.log("Resultat suppression comment :");
                console.log(JSON.stringify(res));
                if (res.status == "delete_ok") {
                    for (var r = 0; r < _this.faq.faq.coms.length; r++) {
                        if (com.data.comment_ID == _this.faq.faq.coms[r].data.comment_ID) {
                            _this.faq.faq.coms.splice(r, 1);
                            _this.faq.faq.comments_count -= 1;
                        }
                    }
                }
            }, function (error) {
                console.log("Erreur de suppression comm");
                console.log(JSON.stringify(error));
            });
        }
        catch (error) {
            console.log("Error from supprimerCom");
            console.log(JSON.stringify(error));
        }
    };
    FaqcomPage.prototype.alertBeforeSupCom = function (com) {
        var _this = this;
        if (typeof (com.temp) !== undefined && com.temp == 1) {
            this.toast.show("En cours de chargement...\nVeuillez patienter", "6000", "bottom")
                .subscribe(function (toast) {
                console.log(JSON.stringify(toast));
            });
            return;
        }
        try {
            var alert_1 = this.alertCtrl.create({
                title: 'Confirmation !',
                subTitle: 'Voullez-vous vraiment supprimer ce commentaire',
                buttons: [
                    {
                        text: 'Annuler',
                        handler: function () {
                            console.log("Commentaire non supprimer");
                        }
                    },
                    {
                        text: "Ok",
                        handler: function () {
                            if (typeof (com.data.comment_ID) !== undefined && com.data.comment_ID > 0) {
                                console.log("**********REMOVE THIS COMS***********");
                                for (var ri = 0; ri < _this.faq.faq.coms.length; ri++) {
                                    if (com.data.comment_ID == _this.faq.faq.coms[ri].data.comment_ID) {
                                        _this.faq.faq.coms.splice(ri, 1);
                                        _this.faq.faq.comments_count -= 1;
                                    }
                                }
                            }
                            _this.supprimerCom(com);
                        }
                    }
                ]
            });
            alert_1.present();
        }
        catch (error) {
            console.log("Error from alertBeforeSupCom");
            console.log(JSON.stringify(error));
        }
    };
    FaqcomPage.prototype.updateFaQ = function (faq) {
        var _this = this;
        console.log("clicked to update");
        var faq_id = faq.type == "faq" ? faq.faq.id : faq.id;
        // this.displayPopover("popoverd" + faq_id)
        // this.displayedPopoverID = ""
        var faqup = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_17__faqadd3_faqadd3__["a" /* Faqadd3Page */], {
            faq: faq,
            user: this.user,
            theme: this.listFaQTheme,
            source: "update"
        });
        faqup.onDidDismiss(function (data) {
            console.log(JSON.stringify(data));
            _this.platform.registerBackButtonAction(function () {
                _this.goBack();
            });
            if (data != null && data.id_faq != null) {
                _this.events.publish("faq:update", faq);
                // this.goBack()
                _this.getSingleFaQ(data.id_faq);
            }
        });
        faqup.present();
    };
    FaqcomPage.prototype.deleteFaQ = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.displayPopover("popoverd" + this.faq.faq.id);
                this.events.publish("faq:delete", this.faq);
                this.navCtrl.pop();
                return [2 /*return*/];
            });
        });
    };
    FaqcomPage.prototype.getSingleFaQ = function (id_faq) {
        var _this = this;
        this.http.get(this.globals.variables.urls.getSingleFaQ + '?faq_id=' + id_faq, {}, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            if (res.comments) {
                var coms = [];
                for (var elem in res.comments) {
                    coms.push(res.comments[elem]);
                }
                var images_count = 0;
                var char70 = "";
                if (res.description.length > 70) {
                    char70 = "" + res.description.substr(0, 69) + "...";
                }
                else {
                    char70 = res.description;
                }
                if (res.faq_image_1 != '' && res.faq_image_1 != null)
                    images_count += 1;
                if (res.faq_image_2 != '' && res.faq_image_2 != null)
                    images_count += 1;
                if (res.faq_image_3 != '' && res.faq_image_3 != null)
                    images_count += 1;
                if (res.faq_image_4 != '' && res.faq_image_4 != null)
                    images_count += 1;
                res.images_count = images_count;
                res.comments_count = coms.length;
                res.coms = coms;
                res.char70 = char70;
                res.dateFR = res.date.substr(8, 2) + '/' + res.date.substr(5, 2) + '/' +
                    res.date.substr(0, 4) + ' ' + res.date.substr(11, 5);
            }
            for (var j = 0; j < _this.listFaQTheme.length; j++) {
                if (_this.listFaQTheme[j].id == res.theme) {
                    var newFaQ = {
                        faq: res,
                        theme: _this.listFaQTheme[j]
                    };
                    _this.getFaQAuthor(res.author_id, newFaQ);
                }
            }
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    FaqcomPage.prototype.getFaQAuthor = function (author_id, newFaQ) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                //getUserInfo
                this.http.post(this.globals.variables.urls.getUserInfo + "?user_id=" + author_id, {
                    "user_id": "" + author_id
                }, {})
                    .then(function (data) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        newFaQ.author = JSON.parse(data.data).info_utilisateur;
                        newFaQ.type = "faq";
                        this.faq = newFaQ;
                        return [2 /*return*/];
                    });
                }); }, function (error) {
                    _this.load = 0;
                    console.log(JSON.stringify(error));
                });
                return [2 /*return*/];
            });
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('mySlider'),
        __metadata("design:type", Object)
    ], FaqcomPage.prototype, "mySlider", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('scrollMe'),
        __metadata("design:type", Object)
    ], FaqcomPage.prototype, "scrollElement", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('content'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["e" /* Content */])
    ], FaqcomPage.prototype, "content", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('input'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["r" /* TextInput */])
    ], FaqcomPage.prototype, "input", void 0);
    FaqcomPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-faqcom',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/faqcom/faqcom.html"*/'<ion-content #content class="pr">\n  \n  <ion-row ion-fixed class="load-ctn" id="load" *ngIf="load == 1">\n    <ion-spinner class="loading-custom" name="crescent" color="vert_logo"></ion-spinner>\n  </ion-row>\n\n  <ion-row ion-fixed class="header">\n    <ion-col></ion-col>\n    <ion-col (click)="goToHome()">\n      <ion-label class="da">\n        <img class="logo" src="assets/imgs/da_image/logo-dentart.png">\n        <span class="bold">Dent</span><span class="fine">Art</span>\n      </ion-label>\n    </ion-col>\n    <ion-col></ion-col>\n\n  </ion-row>\n\n\n\n  <div class="container" id="container" #scrollMe *ngIf="faq != null">\n\n    <div class="theBlock">\n      <div class="row1">\n        <!-- (click)="comment(faq,\'detail\');" -->\n        <div class="row1-col1">\n          <div class="user-avatar-ctn">\n            <img class="user-avatar"\n              src="{{faq.author.avatar != \'\' ? faq.author.avatar : \'assets/imgs/avatar/avatar_f.png\'}}" />\n          </div>\n          <div class="user-info-cth">\n            <div class="user-pseudo">\n              {{faq.author.pseudo}}\n            </div>\n            <div class="user-job">\n              {{faq.author.job}} - {{faq.author.address}}\n            </div>\n            <div class="post-date">\n              {{faq.faq.dateFR}}\n            </div>\n          </div>\n        </div>\n        <div class="row1-col2">\n\n          <div class="drop-down-icon" (click)="displayPopover(\'popoverd\'+faq.faq.id)">\n            <div class="left-bar"></div>\n            <div class="right-bar"></div>\n          </div>\n          <div class="popover-ctn" id="popoverd{{faq.faq.id}}">\n            <div class="popover-tsingy">\n              <div class="half-transparent"></div>\n            </div>\n            <div class="list-ctn">\n              <div class="option-item" id="favicond{{faq.faq.id}}" (click)="addToFav(faq, \'favicond\'+faq.faq.id)">\n                <div class="op-it-icon">\n                  <img class="it-icon" src="assets/icon/heart-green-blue.svg" />\n                </div>\n                <div class="item-text">Favoris</div>\n              </div>\n              <div class="sep-popover"></div>\n              <div class="option-item" id="repicond{{faq.faq.id}}" (click)="report(faq, \'repicond\'+faq.faq.id)">\n                <div class="op-it-icon">\n                  <img class="it-icon" src="assets/icon/warning.svg" />\n                </div>\n                <div class="item-text">Signaler</div>\n              </div>\n\n              <div *ngIf="user_id == faq.faq.author_id">\n                <div class="sep-popover"></div>\n                <div class="option-item" id="modiconpd{{faq.faq.id}}" (click)="updateFaQ(faq)">\n                  <div class="op-it-icon">\n                    <img class="it-icon" src="assets/icon/edit-green.svg" />\n                  </div>\n                  <div class="item-text">Modifier</div>\n                </div>\n              </div>\n\n              <div *ngIf="user_id == faq.faq.author_id">\n                <div class="sep-popover"></div>\n                <div class="option-item" id="supiconpd{{faq.faq.id}}" (click)="deleteFaQ()">\n                  <div class="op-it-icon">\n                    <img class="it-icon" src="assets/icon/garbage.svg" />\n                  </div>\n                  <div class="item-text">Supprimer</div>\n                </div>\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="row-text" (click)="comment(faq,\'detail\');">\n        <div class="faq-ttl" [innerHtml]="faq.theme.name"></div>\n        <div class="faq-desc" [innerHtml]="faq.faq.description"></div>\n      </div>\n\n      <ion-slides>\n        <ion-slide *ngIf="faq.faq.faq_image_1 != null && faq.faq.faq_image_1 != \'\'">\n          <div class="row2" (click)="viewImage(faq.faq.faq_image_1);"\n            [style.background-image]="\'url(\'+(faq.faq.faq_image_1 != null ? faq.faq.faq_image_1 : \'assets/imgs/da_image/Rectangle-05.jpg\')+\')\'">\n            <div class="photo-badge">\n              {{faq.faq.images_count}}\n              <img class="nb-photo-icon" src="assets/icon/photo-camera-white.svg" />\n            </div>\n          </div>\n        </ion-slide>\n        <ion-slide *ngIf="faq.faq.faq_image_2 != null && faq.faq.faq_image_2 != \'\'">\n          <div class="row2" (click)="viewImage(faq.faq.faq_image_2);"\n            [style.background-image]="\'url(\'+(faq.faq.faq_image_2 != null ? faq.faq.faq_image_2 : \'assets/imgs/da_image/Rectangle-05.jpg\')+\')\'">\n            <div class="photo-badge">\n              {{faq.faq.images_count}}\n              <img class="nb-photo-icon" src="assets/icon/photo-camera-white.svg" />\n            </div>\n          </div>\n        </ion-slide>\n        <ion-slide *ngIf="faq.faq.faq_image_3 != null && faq.faq.faq_image_3 != \'\'">\n          <div class="row2" (click)="viewImage(faq.faq.faq_image_3);"\n            [style.background-image]="\'url(\'+(faq.faq.faq_image_3 != null ? faq.faq.faq_image_3 : \'assets/imgs/da_image/Rectangle-05.jpg\')+\')\'">\n            <div class="photo-badge">\n              {{faq.faq.images_count}}\n              <img class="nb-photo-icon" src="assets/icon/photo-camera-white.svg" />\n            </div>\n          </div>\n        </ion-slide>\n        <ion-slide *ngIf="faq.faq.faq_image_4 != null && faq.faq.faq_image_4 != \'\'">\n          <div class="row2" (click)="viewImage(faq.faq.faq_image_4);"\n            [style.background-image]="\'url(\'+(faq.faq.faq_image_4 != null ? faq.faq.faq_image_4 : \'assets/imgs/da_image/Rectangle-05.jpg\')+\')\'">\n            <div class="photo-badge">\n              {{faq.faq.images_count}}\n              <img class="nb-photo-icon" src="assets/icon/photo-camera-white.svg" />\n            </div>\n          </div>\n        </ion-slide>\n      </ion-slides>\n\n      <div class="row3">\n        <div class="col-foot" (click)="addToFavorite(faq);">\n          <div class="foot-badge" *ngIf="faq.faq.favorite_count < 100">{{faq.faq.favorite_count}}</div>\n          <div class="foot-badge" *ngIf="faq.faq.favorite_count >= 100">99+</div>\n          <div class="foot-block-icon-ctn">\n            <img class="foot-block-icon"\n              src="{{faq.faq.user_favorite != 0 && faq.faq.user_favorite != \'0\' ? \'assets/icon/like-fin-green.svg\' : \'assets/icon/like-fin-blue.svg\' }}" />\n          </div>\n          <div class="foot-label">J\'aime</div>\n        </div>\n        <div class="col-foot" (click)="comment(faq,\'com\');">\n          <div class="foot-badge" *ngIf="faq.faq.comments_count < 100">{{faq.faq.comments_count}}</div>\n          <div class="foot-badge" *ngIf="faq.faq.comments_count >= 100">99+</div>\n          <div class="foot-block-icon-ctn">\n            <img class="foot-block-icon" src="assets/icon/comment-rec-blue.svg" />\n          </div>\n          <div class="foot-label">Commentaire</div>\n        </div>\n        <div class="col-foot" (click)="shareViaApp();">\n          <div class="foot-badge" *ngIf="faq.faq.share_count < 100">{{faq.faq.share_count}}</div>\n          <div class="foot-badge" *ngIf="faq.faq.share_count >= 100">99+</div>\n          <div class="foot-block-icon-ctn">\n            <img class="foot-block-icon" src="assets/icon/share-blue.svg" />\n          </div>\n          <div class="foot-label">Partager</div>\n        </div>\n      </div>\n    </div>\n\n    <div class="comment-ctn">\n      <div class="comment-block" *ngFor="let com of faq.faq.coms">\n        <div class="avatar-ctn">\n          <img class="avatar-com-author" *ngIf="com.author_infos.avatar != \'\' && com.author_infos.avatar != null"\n            src="{{com.author_infos.avatar}}" />\n          <img class="avatar-com-author" *ngIf="com.author_infos.photo != \'\' && com.author_infos.photo != null"\n            src="{{com.author_infos.photo}}" />\n        </div>\n        <div class="comment-data-ctn">\n          <div class="user-name">{{com.author_infos.pseudo}}</div>\n          <div class="user-job">{{com.author_infos.job}} - {{com.author_infos.address}}</div>\n          <div class="comment-text">{{com.data.comment_content}}</div>\n          <div class="comment-img-ctn">\n            <img class="comment-img" src="{{com.image != null ? com.image : com.comment_image}}"\n              (click)="viewImage(com.image);" />\n          </div>\n        </div>\n        <div *ngIf="com.author_infos.id == user_id" class="com_actions" (click)="alertBeforeSupCom(com)">\n          <div class="dot_action"></div>\n          <!-- <div class="dot_action"></div>\n          <div class="dot_action"></div> -->\n        </div>\n      </div>\n    </div>\n\n  </div>\n\n  <!-- <div ion-fixed class="bottom-input" id="bottom_input">\n    <div *ngIf="img != null" class="ctn-img-to-upl">\n      <img [src]="img.url" class="img-to-upl" (click)="supImg();">\n      <img class="delete-icon" src="assets/icon/close-blue.svg" />\n    </div>\n    <div class="flex-ctn">\n\n      <div class="col-50-px">\n        <ion-row (click)="takePicture()">\n          <img class="icon-camera" src="assets/icon/photo-camera-cbcaca.svg" alt="Photo">\n\n        </ion-row>\n      </div>\n\n      <div class="large-col">\n        <div>\n          <textarea #input (keyup)="resizeTxtCmt();" rows="3" class="comment-input" [(ngModel)]="faq_comment"\n            placeholder="Ecrire un commentaire ..." id="com_txt" autosize>\n          </textarea>\n        </div>\n      </div>\n\n      <div class="col-50-px">\n\n        <ion-row (click)="addComment();">\n          <img class="icon-camera" src="assets/icon/send-button-green.svg" alt="Photo">\n        </ion-row>\n      </div>\n    </div>\n  </div> -->\n\n  <div ion-fixed class="bottom-input" id="bottom_input">\n    <div *ngIf="img != null" class="ctn-img-to-upl">\n      <img [src]="img.url" class="img-to-upl" (click)="supImg();">\n      <img class="delete-icon" src="assets/icon/close-blue.svg" />\n    </div>\n    <div class="flex-ctn">\n\n      <div class="col-50-px" (click)="takePicture()">\n        <img class="icon-camera" src="assets/icon/photo-camera-cbcaca.svg" alt="Photo">\n      </div>\n\n      <div class="large-col">\n        <ion-textarea #input rows="3" class="comment-input" [(ngModel)]="faq_comment"\n        placeholder="Ecrire un commentaire ..." id="com_txt" autosize>\n          \n        </ion-textarea>\n      </div>\n\n      <div class="col-50-px" (click)="addComment();">\n        <img class="icon-camera" src="assets/icon/send-button-green.svg" alt="Photo">\n      </div>\n\n    </div>\n  </div>\n\n</ion-content>'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/faqcom/faqcom.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* Keyboard */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_4__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["f" /* Events */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_toast__["a" /* Toast */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_native_social_sharing__["a" /* SocialSharing */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_15__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["ChangeDetectorRef"],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"]])
    ], FaqcomPage);
    return FaqcomPage;
}());

//# sourceMappingURL=faqcom.js.map

/***/ }),

/***/ 69:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GeneralcndPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_home__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_browser_tab__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_toast__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_storage__ = __webpack_require__(15);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








/**
 * Generated class for the GeneralcndPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var GeneralcndPage = /** @class */ (function () {
    function GeneralcndPage(navCtrl, navParams, http, globals, viewCtrl, alertCtrl, browserTab, toast, storage, platform) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.http = http;
        this.globals = globals;
        this.viewCtrl = viewCtrl;
        this.alertCtrl = alertCtrl;
        this.browserTab = browserTab;
        this.toast = toast;
        this.storage = storage;
        this.platform = platform;
        this.pseudo = '';
        this.job = '';
        this.address = '';
        this.mail = '';
        this.password = '';
        this.source = "";
        this.load = 0;
        this.job = navParams.get('job');
        this.pseudo = navParams.get('pseudo');
        this.address = navParams.get('address');
        this.mail = navParams.get('mail');
        this.password = navParams.get('password');
        this.source = navParams.get('source');
        platform.registerBackButtonAction(function () {
            _this.viewCtrl.dismiss({
                state: "oui"
            });
        });
    }
    GeneralcndPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad GeneralcndPage');
    };
    GeneralcndPage.prototype.precedent = function () {
        if (this.source == 'gcdn' || this.source == 'menu') {
            this.viewCtrl.dismiss({
                state: "non"
            });
        }
        else
            this.navCtrl.pop();
    };
    GeneralcndPage.prototype.goToHome = function () {
        var home = __WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */];
        this.navCtrl.push(home);
    };
    GeneralcndPage.prototype.signUp = function () {
        var _this = this;
        if (this.source == 'gcdn' || this.source == 'menu') {
            this.viewCtrl.dismiss({
                state: "oui"
            });
        }
        else {
            this.load = 1;
            console.log("Full address");
            console.log(this.address);
            this.http.post(this.globals.variables.urls.createAccountURL, {
                "mail": this.mail,
                "pseudo": this.pseudo,
                "job": this.job,
                "address": JSON.parse(this.address).description,
                "password": this.password,
                "full_address": this.address
            }, {})
                .then(function (data) {
                _this.load = 0;
                var res = JSON.parse(data.data);
                console.log(res);
                console.log(res.etat_inscription);
                if (res.etat_inscription == 'inscription-ok') {
                    _this.connect();
                    // let newUser = res.user_data
                    // console.log("Parsing")
                    // let full_address = JSON.parse(newUser.full_address)
                    // console.log("Parsed")
                    // newUser.id_User += ""
                    // newUser.user_email = newUser.mail
                    // // newUser.full_address = JSON.parse(this.address)
                    // this.saveSession(newUser)
                    // console.log("Retour user after signup :")
                    // console.log(JSON.stringify(newUser))
                    // let home = HomePage;
                    // this.navCtrl.setRoot(home, {
                    //   user: newUser,
                    //   animate: true,
                    //   direction: 'forward'
                    // });
                }
                else if (res.etat_inscription == 'inscription-invalid') {
                    var alert_1 = _this.alertCtrl.create({
                        title: 'Information',
                        subTitle: res.error_name,
                        buttons: ['Ok']
                    });
                    alert_1.present();
                }
                console.log(JSON.stringify(data.data));
            }, function (error) {
                _this.load = 0;
                var alert = _this.alertCtrl.create({
                    title: 'Information',
                    subTitle: 'Erreur de connexion avec le serveur.',
                    buttons: ['Ok']
                });
                alert.present();
                console.log(JSON.stringify(error));
            });
        }
    };
    GeneralcndPage.prototype.saveSession = function (user) {
        this.storage.set('user', user)
            .then(function (data) {
            // console.log(JSON.stringify(data));
            // let home = HomePage;
            // this.navCtrl.setRoot(home, {
            //   user: user
            // },
            //   {
            //     animate: true,
            //     animation: 'ios-transition',
            //     direction: 'forward',
            //     duration: 500
            //   });
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    GeneralcndPage.prototype.connect = function () {
        // this.isBtnConnect = true;
        var _this = this;
        if (!(/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(this.mail))) {
            console.log("Mail invalid.");
            // this.isBtnConnect = false;
            var alert_2 = this.alertCtrl.create({
                title: 'Information',
                subTitle: 'Votre e-mail est invalide.',
                buttons: ['Ok']
            });
            alert_2.present();
            // this.isBtnConnect = false;
        }
        else if (this.password.length < 8) {
            // this.isBtnConnect = false;
            console.log("Password invalid.");
            var alert_3 = this.alertCtrl.create({
                title: 'Information',
                subTitle: 'Votre mot de passe doit contenir au minimum 8 caractères.',
                buttons: ['Ok']
            });
            alert_3.present();
            // this.isBtnConnect = false;
        }
        if (/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(this.mail) &&
            this.password.length >= 8) {
            this.http.post(this.globals.variables.urls.loginURL, {
                "mail": this.mail,
                "password": this.password
            }, {})
                .then(function (data) {
                var res = JSON.parse(data.data);
                //console.log(res);
                //console.log(res.etat_inscription);
                if (res.etat_connexion == 'connexion-ok') {
                    var user = res.info_utilisateur;
                    // this.events.publish("user:logedIn", this.user);
                    _this.saveSession(user);
                    var home = __WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */];
                    _this.navCtrl.setRoot(home, {
                        user: user
                    }, {
                        animate: true,
                        animation: 'ios-transition',
                        direction: 'forward',
                        duration: 500
                    });
                }
                else if (res.etat_connexion == 'non-ok') {
                    // this.isBtnConnect = false;
                    var alert_4 = _this.alertCtrl.create({
                        title: 'Information',
                        subTitle: 'Votre email ou mot de passe est incorrect.',
                        buttons: ['Ok']
                    });
                    alert_4.present();
                }
                //console.log(JSON.stringify(data.data));
            }, function (error) {
                // this.isBtnConnect = false;
                console.log(JSON.stringify(error));
                var alert = _this.alertCtrl.create({
                    title: 'Information',
                    subTitle: 'Erreur d\'accès au serveur.',
                    buttons: ['Ok']
                });
                alert.present();
            });
        }
    };
    GeneralcndPage.prototype.openUrl = function (url) {
        var _this = this;
        this.browserTab.isAvailable()
            .then(function (isAvailable) {
            if (isAvailable) {
                _this.browserTab.openUrl(url);
            }
            else {
                _this.toast.show("Navigateur non disponible", "2000", "bottom").subscribe(function (toast) {
                    console.log(toast);
                });
            }
        });
    };
    GeneralcndPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-generalcnd',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/generalcnd/generalcnd.html"*/'<ion-content>\n\n  <ion-row ion-fixed class="load-ctn" id="load" *ngIf="load == 1">\n    <ion-spinner class="loading-custom" name="crescent" color="vert_logo"></ion-spinner>\n  </ion-row>\n\n  <ion-row ion-fixed class="top-gc">\n    <ion-col>\n      <img class="back-icon" (click)="precedent();" src="../../assets/icon/back-117bcf.svg">\n    </ion-col>\n    <ion-col>\n      <ion-label class="gc">\n        Conditions g&#233;n&#233;rales\n      </ion-label>\n    </ion-col>\n    <ion-col></ion-col>\n  </ion-row>\n\n  <ion-grid class="container">\n\n    <ion-row class="gc-ctn">\n\n      <ion-col>\n        <ion-row>\n          <div class="gc-label">\n            <div class="gcu">\n              MERCI DE LIRE ATTENTIVEMENT CES CONDITIONS AVANT D’UTILISER L’APPLICATION DENTART<br><br>\n            </div>\n\n            <div class="article-ttl">\n              ARTICLE 1 - Objet<br>\n            </div><br>\n\n            <div class="jsutify-content">\n\n              Les présentes conditions d’utilisation ont pour objet de définir les modalités d’utilisation de\n              l’application mobile gratuite DENTART, qui propose de mettre en relation des personnes dans le domaine\n              dentaire. L’objectif est de créer un réseau d’échange, de partage ainsi que d’entraide pour les\n              professionnels de la santé bucco-dentaire, afin d’améliorer leur quotidien à travers les différentes\n              rubriques proposées et définies à l’article 6 des présentes conditions.<br><br>\n\n              Pour accéder à l’application, l’utilisateur doit accepter les présentes conditions générales\n              d’utilisation.\n              En cas de non-acceptation des conditions générales d\'utilisation, l\'utilisateur se doit de renoncer à\n              l\'accès des services proposés par l’application.<br><br>\n\n              Les conditions générales d’utilisation de DENTART peuvent être modifiées à tout moment par la société\n              DENTART. L’utilisateur reconnaît avoir lu dans son intégralité les conditions générales d’utilisation de\n              DENTART et s’engage à les respecter sans réserve.<br><br>\n\n              En cas d’acceptation des présentes conditions, l’utilisateur doit manifester son accord en cliquant sur\n              la\n              case libellée « J’accepte » lors de son inscription.<br><br>\n            </div>\n\n            <div class="article-ttl">\n              ARTICLE 2 - Utilisateurs<br>\n            </div><br>\n\n            <div class="jsutify-content">\n              DENTART propose un réseau de partage dans le domaine dentaire. C’est pourquoi, l’accès à l’application\n              est\n              réservé uniquement aux :<br><br>\n\n              <div>\n                <div class="with-tab">-</div> Professionnels de la dentisterie,\n              </div>\n              <div>\n                <div class="with-tab">-</div> étudiants en dentisterie\n              </div>\n              <div>\n                <div class="with-tab">-</div> formateurs en dentisterie\n              </div>\n              <div>\n                <div class="with-tab">-</div> Autres professions médicales\n              </div>\n              <div>\n                <div class="with-tab">-</div> Professionnels du monde de la santé dentaire : praticien(ne)s, équipes de\n                soins, laboratoires de\n                prothèse, établissements de santé et entreprises\n              </div>\n              <div>\n                <div class="with-tab">-</div> Assistantes dentaires\n              </div><br>\n\n              Cette application est réservée aux personnes majeures. Nous interdisons également l’accès aux personnes\n              dont le compte a été précédemment désactivé pour violation des présentes conditions.\n            </div><br>\n\n\n            <div class="article-ttl">\n              ARTICLE 3- Responsabilité<br>\n            </div><br>\n\n            <div class="article-ttl">\n              Dentart :\n            </div><br>\n\n            <div class="jsutify-content">\n\n              Nous n\'intervenons pas dans les relations entre les utilisateurs, c’est à dire les échanges, le contenu\n              des\n              annonces et la mise en relation des utilisateurs. Ainsi, nous ne sommes pas responsables des agissements\n              des utilisateurs. Nous ne représentons pas et n’approuvons pas les opinons ainsi que les avis médicaux\n              exprimés via les différentes rubriques. Toute publication contraire aux bonnes mœurs ou à la loi et à la\n              règlementation en vigueur relève de l’entière responsabilité de l’utilisateur. Nous ne garantissons pas\n              la\n              véracité, l\'exactitude ou la fiabilité de tout contenu ou de toute publication. Nous n\'assurons pas un\n              nombre minimum de contact à l\'annonceur et nous ne pouvons être contractuellement responsables même si ce\n              nombre est nul.\n              Tout événement dû à un cas de force majeure ayant pour conséquence un dysfonctionnement du réseau, une\n              perturbation de service ou autres pannes, n\'engage pas la responsabilité de DENTART.<br>\n\n              <div class="article-ttl">\n                <br>Utilisateur :\n              </div><br>\n\n              Vous êtes responsable de l’utilisation que vous faites de l’application DENTART et de tout contenu que\n              vous\n              fournissez, y compris de la conformité aux lois, règles et réglementations en vigueur. Les publications\n              des\n              annonces ainsi que toutes publications et commentaires sont à votre seule initiative, vous en êtes le\n              seul\n              responsable. Vous vous engagez également à :\n\n              <div>\n                <div class="with-tab">-</div> Garantir que la publication, le commentaire ou l’annonce ne\n                contreviennent à aucune réglementation en\n                vigueur, et ne sont en aucun cas des informations privés ou confidentielles\n              </div>\n              <div>\n                <div class="with-tab">-</div> Détenir tous les droits (notamment des droits de propriété intellectuelle\n                et des droits à l’image) ou\n                avoir obtenu toutes les autorisations nécessaires à la publication de votre annonce\n              </div>\n\n              En cas de non-respect de ses règles, DENTART se réserve le droit de suspendre ou/et de supprimer votre\n              compte. Nous pouvons également supprimer toute publication contraire à ces règles.<br>\n              L\'utilisateur déclare et reconnaît qu\'il est seul responsable du contenu des publications et annonces\n              qu\'il\n              publie et rend accessibles aux utilisateurs, ainsi que de tout document ou information qu\'il transmet aux\n              utilisateurs.<br>\n\n            </div><br>\n\n            <div class="article-ttl">\n              ARTICLE 4- Règles de vie<br>\n            </div><br>\n\n\n            <div class="jsutify-content">\n              DENTART a pour objectif de créer un environnement d’entraide, d’échange d’informations afin de faciliter\n              le\n              quotidien des professionnels de la santé bucco-dentaire. Toutes les personnes qui utilisent les services\n              de\n              DENTART doivent se conformer aux règles énoncées dans les présentes conditions.<br><br>\n\n              Vous vous engagez à respecter l\'esprit de l’application, en restant bienveillant, courtois et respectueux\n              avec les autres utilisateurs. Vous vous engagez également à publier des informations justes, non erronées\n              et qui n’induisent pas en erreur les autres utilisateurs.\n              Toutes publications, annonces ou commentaires injurieux qui accueillent des contenus illégaux, violents,\n              menaçants, abusifs, diffamatoires, vulgaires, obscènes, éthiquement répréhensibles ou qui violeraient les\n              lois applicables ne sont pas permis. Aucune conduite illicite contraire à la réglementation en vigueur,\n              aux\n              bonnes moeurs, n’est autorisée.<br><br>\n\n              L’utilisateur s’engage à ne pas perturber le bon fonctionnement de l’application mobile, par quelque\n              moyen\n              et sous quelque prétexte que ce soit.<br>\n              L\'insertion de texte à caractère principalement publicitaire dans les annonces est strictement interdite\n              sauf accord ou partenariat avec DENTART. En cas de non-respect de ces règles, DENTART se réserve le droit\n              de suspendre et/ou supprimer le compte concerné.<br>\n              Dans cet esprit, toute agression ou propos jugé comme agressif par les utilisateurs pourra entraîner la\n              suspension immédiate et sans préavis du compte utilisateur du membre mis en cause. De même, les propos,\n              en\n              particulier, irrespectueux, racistes, diffamatoires, ou humiliant seront systématiquement supprimés.\n            </div><br><br>\n\n            <div class="article-ttl">\n              ARTICLE 5- Création du compte<br>\n            </div><br>\n\n            <div class="jsutify-content">\n              L’application nécessite obligatoirement la création d’un compte pour accéder au contenu. Lors de la\n              création de son compte, l’utilisateur s’engage à fournir des informations exactes. Toute usurpation\n              d’identité est interdite et entraine la suppression immédiate du compte.<br><br>\n\n              Afin de garantir le sérieux et d’assurer le bon fonctionnement des rubriques « annonces », « formations »\n              et « partages », en évitant tout acte frauduleux, il est nécessaire de créer un environnement de\n              confiance.\n              C’est pourquoi, nous certifions les comptes des utilisateurs en leur demandant pendant l’inscription,\n              l’envoi d’une photo d’une carte étudiante ou d’un document attestant la profession de l’utilisateur. Cet\n              envoi n’est pas obligatoire à la création du compte mais il est vivement recommandé. La certification du\n              compte ne se fera qu’après vérification et validation de DENTART. Une fois accepté, un logo inscrit\n              « certifié » sera affiché sur le profil de l’utilisateur.<br>\n              L’utilisateur est responsable de la confidentialité du mot de passe et du login, il est également\n              responsable de toutes les activités qui se produisent sous son mot de passe et son login. L’utilisateur\n              doit informer immédiatement DENTART d’une utilisation non autorisée de son mot de passe ou de son compte\n              ou\n              de n’importe quelle autre infraction de sécurité.<br><br>\n\n              Afin de faciliter les échanges, l’utilisateur a également la possibilité d’informer les autres\n              utilisateurs\n              de sa situation géographique.<br><br>\n            </div>\n\n            <div class="article-ttl">\n              ARTICLE 6 – Utilisation de DENTART<br>\n            </div><br>\n\n            <div class="jsutify-content">\n              Une fois son inscription finalisée, l’utilisateur a la possibilité d’accéder gratuitement aux rubriques\n              suivantes :<br><br>\n\n              <div>\n                <div class="with-tab">-</div> Partages : il s’agit d’un espace d’échange, de communication et de\n                collaboration. Cette rubrique permet\n                notamment aux utilisateurs d’échanger sur les cas rencontrés dans la pratique de leur activité, ainsi\n                que\n                divers thèmes autour de la dentisterie. Ils pourront alors publier de nouveaux cas, ainsi qu’en\n                commenter\n                pour aider leurs collègues. Cet espace est fondé sur un principe de respect mutuel. Cet espace n’est\n                pas\n                destiné à établir un dialogue entre patients et praticiens. Ce n’est en aucun cas une consultation\n                clinique.\n              </div><br>\n\n              <div>\n                <div class="with-tab">-</div> Annonces : DENTART vous donne la possibilité de publier des annonces\n                d’emplois de ventes ou de locations.\n                DENTART est seulement une plateforme qui vous permet de mettre votre annonce en ligne, vous êtes seul\n                responsable du contenu de votre annonce et de la légalité de celle-ci. Vous certifiez que vous proposez\n                des\n                ventes et locations en toute légalité. Nous nous réservons le droit de retirer de l’application toute\n                annonce qui serait contraire à la loi, à l\'ordre public, aux bonnes mœurs, à l\'image de l’application\n                ou\n                aux attentes des utilisateurs. Leur durée de parution est d’un an. Les annonces de demande d\'emploi,\n                recherche et achat toutes catégories sont gratuites, excepté pour les centres de recrutement et autres\n                entreprises de vente ou location, une demande devra se faire auprès des services DENTART avant toute\n                mise\n                en ligne d’une forme de publicité dissimulée. L’Annonceur est seul auteur et seul responsable du\n                contenu de\n                ses annonces et des éléments associés. Le contenu de ces annonces n\'est en aucun cas le reflet des\n                opinions\n                de DENTART. Les utilisateurs ont également la possibilité de signaler toute annonce qui ne respecterait\n                pas\n                les règles énoncées.\n              </div><br>\n\n              <div>\n                <div class="with-tab">-</div> Formations : Cette rubrique permet aux utilisateurs de trouver facilement\n                des formations en dentisterie\n                près de chez eux. DENTART met en œuvre tous les moyens afin d’éviter toute fraude ou abus. C’est\n                pourquoi,\n                la publication de la formation doit passer par notre validation. Toutefois, si une annonce frauduleuse\n                est\n                publiée, DENTART n’est en aucun cas en lien ni responsable de cette publication. L’annonce reste publié\n                jusqu’à la date de la formation.\n              </div><br>\n\n              <div>\n                <div class="with-tab">-</div> A savoir : les utilisateurs ont un accès gratuit à cette rubrique. Elle\n                leur permet d’avoir des\n                informations sur les nouveautés de la profession (produits de laboratoires, lois…). Le contenu est\n                publié\n                par DENTART uniquement. Il n’y aucune obligation de fréquence de publication. DENTART se réverse le\n                droit\n                de publier ou non à tout moment. DENTART se contente juste de publier des informer sans formuler aucune\n                opinion ni avis. Il s’agit d’une simple transmission d’information afin que les utilisateurs soient\n                informés des nouveautés du monde dentaire.\n              </div>\n\n            </div><br><br>\n\n\n\n            <div class="article-ttl">\n              ARTICLE 7 - Politique de Protection des données personnelles<br>\n            </div><br>\n\n            <div class="jsutify-content">\n              Des données à caractère personnel peuvent être communiquées volontairement par l’Utilisateur pour la\n              création de compte ou la publication d’annonces.\n              Conformément à la réglementation européenne et française en matière de données à caractère personnel, en\n              ce\n              compris le Règlement Général sur la Protection des Données n°2016/679 du 27 avril 2016 (dit « RGPD ») et\n              la\n              loi n° 78-17 du 6 janvier 1978 relative à l\'informatique, aux fichiers et aux libertés modifiée (dite «\n              loi\n              Informatique et Libertés »), l’utilisateur reconnaît avoir été informé par DENTART, en sa qualité de\n              responsable de traitement des données à caractère personnel collectées, que :<br><br>\n\n              Les données à caractère personnel de l’utilisateur telles que le nom, l’adresse mail, situation\n              professionnelle ou localisation professionnelle peuvent être collectées et traitées au titre de :<br><br>\n\n              <div>\n                <div class="with-tab">-</div> La création du compte de l’utilisateur. DENTART étant un réseau social\n                réservé exclusivement aux\n                professionnels dentaires et toute personne mentionnée à l’article 2, certaines données sont demandées\n                afin\n                de garantir l’accès à ces professionnels de santé et ainsi poursuivre l’objectif de l’application.\n              </div><br>\n\n              <div>\n                <div class="with-tab">-</div> La gestion des publications de l’utilisateur sur le partage ainsi que sur\n                l’espace annonce et formation\n              </div><br>\n\n              <div>\n                <div class="with-tab">-</div> L’exécution des dispositions légales, règlementaires et administratives\n                en vigueur, y compris celles\n                relatives à la lutte contre la fraude, pouvant conduire à son inscription sur une liste de personnes\n                présentant un risque de fraude\n              </div><br>\n\n              DENTART s’engage à ne pas exploiter les données personnelles de l’utilisateur pour d’autres finalités que\n              celles précitées.<br><br>\n\n              L’utilisateur reconnaît que la collecte et le traitement de ses données à caractère personnel (y compris\n              des données d’identification, des données relatives à sa situation professionnelle …) sont nécessaires à\n              la\n              gestion, au bon fonctionnement et l’utilisation de l’application.<br><br>\n\n              Les destinataires des données à caractère personnel de l’utilisateur sont, dans la limite de leurs\n              attributions respectives, DENTART, dont le personnel en charge des traitements relatifs à ces données.\n              Les informations personnelles sont conservées dans des réseaux sécurisés et ne sont accessibles que pour\n              un\n              nombre limité de personnes qui ont des droits d’accès spéciaux à ces systèmes, et sont soumises à un\n              devoir\n              de confidentialité concernant ces informations.<br><br>\n\n              DENTART s’engage à ce que les données à caractère personnel de l’utilisateur ne soient en aucun cas\n              transmises à des tiers non autorisés.<br><br>\n\n              Les durées de conservation des données à caractère personnel traitées dans le cadre de la gestion de\n              l’application varient en fonction des finalités susvisées et sont conformes aux recommandations de la\n              CNIL\n              en tout état de cause, le calcul de ces durées est réalisé en fonction des finalités pour lesquelles les\n              données sont collectées, des obligations légales de DENTART et des prescriptions légales applicables.<br><br>\n\n              DENTART s’engage à prendre les mesures techniques et organisationnelles appropriées pour garantir un\n              niveau\n              de sécurité et de confidentialité adapté au risque présenté par le traitement des données de\n              l’utilisateur\n              et à notifier à la CNIL et informer l’utilisateur en cas de violation de ses données dans les limites et\n              conditions des articles 33 et 34 du RGPD.<br><br>\n\n              L’utilisateur dispose d’un droit de demander l’accès à ses données à caractère personnel, la\n              rectification\n              ou l’effacement de celles-ci, et de décider du sort de ces données, post-mortem. L’utilisateur dispose\n              également d’un droit de s’opposer au traitement pour motifs légitimes, de limiter le traitement dont il\n              fait l’objet et d’un droit à la portabilité des données à caractère personnel dans les limites fixées par\n              la loi. Il dispose enfin de la possibilité de s’opposer, à tout moment et sans frais, à la prospection\n              commerciale, y compris lorsque celle-ci est réalisée de manière ciblée.<br><br>\n\n              Ces droits peuvent être exercés, en justifiant de son identité, par email à support@DentArt.fr ou par\n              courrier à DENTART, 25 rue de Montmorency 95410. Groslay.<br><br>\n\n              L’assuré dispose également du droit de contacter la CNIL directement sur le site internet\n              <a (click)="openUrl(\'https://www.cnil.fr/fr/agir\')">https://www.cnil.fr/fr/agir</a> ou par courrier\n              à l’adresse suivante : Commission Nationale de l\'Informatique\n              et des Libertés, 3 Place de Fontenoy - TSA 80715, 75334 PARIS CEDEX 07.<br><br>\n\n              En cas de prospection commerciale par téléphone : L’assuré dispose également du droit de s’inscrire sur\n              la\n              liste d’opposition au démarchage téléphonique gérée par la société Opposetel. Pour plus d’informations :\n              <a (click)="openUrl(\'www.bloctel.gouv.fr\')">www.bloctel.gouv.fr</a>.\n            </div><br><br>\n\n            <div class="article-ttl">\n              ARTICLE 8 - Utilisation des cookies<br>\n            </div><br>\n\n            <div class="jsutify-content">\n              Pour utiliser l’application DentArt.fr dans les meilleures conditions, il est conseillé d’activer les\n              cookies sur votre tablette, votre smartphone ou vos autres appareils mobiles. Sinon, nous ne pouvons pas\n              vous garantir intégralement une application fluide.\n            </div><br><br>\n\n            <div class="article-ttl">\n              ARTICLE 9 - Liens vers des sites tiers<br>\n            </div><br>\n\n            <div class="jsutify-content">\n              Nous pouvons inclure des liens vers des sites tiers dans les rubriques de DENTART (médiaux sociaux ou\n              liens\n              vers d’autres sites). Ces sites tiers ont des politiques de confidentialité séparées et indépendantes.\n              Nous\n              n’avons donc aucune responsabilité quant au contenu et à l’activité des sites de ces liens.\n            </div>\n\n          </div>\n        </ion-row>\n\n        <ion-row>\n          <div class="gc-label">\n            <div class="gcu"><br><br>\n              Condition générale de vente\n            </div><br><br>\n\n\n\n            <div class="article-ttl">\n              ARTICLE 1- Objet<br>\n            </div><br>\n\n            <div class="jsutify-content">\n              Les présentes Conditions Générales de Vente ont pour objet de définir les conditions dans lesquelles\n              DENTART fournit aux clients qui lui en font la demande le service suivant :<br><br>\n\n              Option classement des publications: Pour augmenter la visibilité de votre annonce, il est possible de\n              faire\n              paraître l’annonce parmi les cinq premières annonces pendant une semaine ou un mois, <b>en aléatoire</b>\n              en\n              fonction du nombre d’annonce souscrivant à l’option.<br><br>\n            </div>\n\n            <div class="article-ttl">\n              ARTICLE 2 – Modalités<br>\n            </div><br>\n\n            <div class="jsutify-content">\n              La souscription d\'une ou plusieurs option(s) payante(s) est exclusivement accessible aux annonceurs\n              connectés à leur Compte Personnel depuis l’application. Une option payante n\'est souscrite que pour une\n              seule annonce. En conséquence, il n\'est pas possible de transférer le bénéfice d\'une option payante d\'une\n              annonce à une autre.<br><br>\n            </div>\n\n            <div class="article-ttl">\n              ARTICLE 3 – Tarifs<br>\n            </div><br>\n\n            <div class="jsutify-content">\n              L’option classements des publications :\n\n              • Pour les post remontés dans les premiers pendant une semaine 5 euros TTC\n              • Pour les post remontés dans les 5 premiers pendant un mois : 15 euros TTC\n            </div><br><br>\n\n            <div class="article-ttl">\n              ARTICLE 4 – Conditions de paiement<br>\n            </div><br>\n\n            <div class="jsutify-content">\n              Le paiement des annonces s’effectue en ligne par carte de crédit ou PayPal. Les options payantes ne sont\n              pas remboursables, même en cas de suppression de l’annonce.\n              En application des articles L 221-18 et suivants du code de la consommation, l\'annonceur dispose d\'un\n              délai\n              de quatorze jours francs pour se rétracter. Toutefois, en validant la commande, l\'annonceur accepte que\n              DENTART commence à exécuter la prestation et renonce expressément à son droit de rétractation. \n            </div><br><br>\n\n            <div class="article-ttl">\n              ARTICLE 5 - Force majeure<br>\n            </div><br>\n\n            <div class="jsutify-content">\n              Les parties ne pourront être tenues pour responsables si la non-exécution ou le retard dans l\'exécution\n              de\n              l\'une quelconque de leurs obligations, telles que décrites dans les présentes découle d\'un cas de force\n              majeure, au sens de l\'article 1218 du Code civil.\n            </div><br><br>\n\n            <div class="article-ttl">\n              ARTICLE 6 – Litiges<br>\n            </div><br>\n\n            <div class="jsutify-content">\n              Tous les litiges auxquels le présent contrat pourrait donner lieu, concernant tant sa validité, son\n              interprétation, son exécution, sa résiliation, leurs conséquences et leurs suites seront soumis aux\n              tribunaux compétents dans les conditions de droit commun.\n            </div><br><br>\n\n            <div class="article-ttl">\n              ARTICLE 7 - Acceptation du Client<br>\n            </div><br>\n\n            <div class="jsutify-content">\n              Les présentes Conditions Générales de Vente sont expressément agréés et acceptés par le Client, qui\n              déclare\n              et reconnaît en avoir une parfaite connaissance.\n            </div><br><br>\n          </div>\n\n          <ion-row *ngIf="source != \'menu\'" class="btn-ctn">\n            <button ion-button round class="btn-blue-gradient" (click)="signUp();">Accepter</button>\n          </ion-row>\n\n        </ion-row>\n\n      </ion-col>\n\n\n    </ion-row>\n\n\n\n  </ion-grid>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/generalcnd/generalcnd.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_4__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_native_browser_tab__["a" /* BrowserTab */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_native_toast__["a" /* Toast */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_storage__["b" /* Storage */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */]])
    ], GeneralcndPage);
    return GeneralcndPage;
}());

//# sourceMappingURL=generalcnd.js.map

/***/ }),

/***/ 7:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GlobalsProvider; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var app_url = 'https://dentart.devforge.eu'; //'https://www.dentart.fr'
/*
  Generated class for the GlobalsProvider provider.

  See https://angular.io/guide/dependency-injection for more info on providers
  and Angular DI.
*/
var GlobalsProvider = /** @class */ (function () {
    function GlobalsProvider() {
        this.variables = {
            langage: {
                fr: {
                    marhaba: "Bienvenue chez DentArt",
                    caccbtn: "Créer un compte",
                    login: "Connectez-vous"
                },
                en: {
                    marhaba: "Welcome to DentArt",
                    caccbtn: "Create an account",
                    caccsup: "Sing up",
                    login: "Log in",
                    singin: "Sing in"
                }
            },
            urls: {
                getCertText: app_url + "/ws-get-text-after-connexion/",
                createAccountURL: app_url + '/ws-inscription/',
                loginURL: app_url + '/ws-connexion/',
                editProfilURL: app_url + '/ws-edit-profil/',
                editProfilURLB64: app_url + '/ws-edit-profil-base64/',
                checkMailURL: app_url + '/ws-check-email/',
                checkPseudoURL: app_url + '/ws-check-pseudo/',
                updateUserDeviceToken: app_url + '/ws-add-token/',
                listFaQ: app_url + '/ws-list-faqs/',
                listFaQByUser: app_url + '/ws-list-user-faq/',
                listFaQTheme: app_url + '/ws-list-faq-themes/',
                addFaQ: app_url + '/ws-add-faq/',
                addCommentFaQ: app_url + '/ws-add-faq-comment/',
                addCommentFaQB64: app_url + '/add-faq-comment-base64/',
                addFavoriteFaQ: app_url + '/ws-add-favorite/',
                repportFaQ: app_url + '/ws-add-reporting/',
                addToShare: app_url + '/ws-add-share/',
                addFavorite: app_url + '/ws-add-favorite/',
                getFavoriteFaq: app_url + '/ws-get-favorite/',
                uploadFaQImg: app_url + '/ws-add-image-faq/',
                uploadFaQImgB64: app_url + '/add-image-faq-base64/',
                deleteFaqImg: app_url + '/ws-delete-faq-image/',
                getSingleFaQ: app_url + '/ws-get-single-faq/',
                deleteFaQ: app_url + '/ws-delete-faq/',
                updateFaQ: app_url + '/ws-update-faq/',
                addLike: app_url + '/ws-add-like/',
                listLiked: app_url + '/ws-get-liked-elements/',
                getListComment: app_url + "/ws-get-comments/",
                deleteComment: app_url + "/ws-delete-comment/",
                getUserInfo: app_url + '/ws-get-profile/',
                listAnnonceCat: app_url + '/ws-list-annonce-categories/',
                addAnnonce: app_url + '/ws-add-annonce/',
                uploadAnnonceIMG: app_url + '/ws-add-image-annonce/',
                uploadAnnonceIMGB64: app_url + '/add-image-ads-base64/',
                deleteAdImg: app_url + '/ws-delete-image-ad/',
                listAnnonce: app_url + '/ws-list-annonces/',
                listAdByUser: app_url + '/ws-list-annonces-par-utilisateur/',
                listAdByGeolocate: app_url + '/ws-list-annonces-by-geolocalisation/',
                addViewAd: app_url + '/ws-increment-ad-view/',
                supAd: app_url + '/ws-delete-annonce/',
                updateAd: app_url + '/ws-update-annonce/',
                countAdProx: app_url + '/ws-get-count-ads-latlong/',
                getSingleAd: app_url + '/ws-get-single-ad/',
                listFormatiosCat: app_url + '/ws-list-formation-categories/',
                listTypesFormat: app_url + '/ws-list-formation-type/',
                listFormations: app_url + '/ws-get-formations/',
                listFormByGeoloc: app_url + '/ws-geoloc-formations/',
                reqAddForm: app_url + '/ws-request-add-formation/',
                listASavoir: app_url + '/ws-get-a-savoir/',
                certificate: app_url + '/ws-certification/',
                addImageCertificateB64: app_url + "/ws-add-image-certification-b64/",
                lostPasswd: app_url + '/ws-lost-password/',
                getNotifications: app_url + '/ws-list-notifications/',
                getNotificationsNewPost: app_url + '/ws-get-notification-new-post/',
                getNotificationByLiked: app_url + '/ws-list-likes-notifications/',
                getNotificationByFavorite: app_url + '/ws-list-favorites-notifications/',
                getNotificationByShared: app_url + '/ws-list-share-notifications/',
                updateNotifState: app_url + '/ws-update-notification-state/',
                listAbonnement: app_url + '/ws-liste-abonnement/',
                contactAsMail: app_url + '/ws-send-contact/',
                addBoost: app_url + '/ws-add-abonnement/',
                changeRPC: app_url + '/ws-state-understand/',
                getListPub: app_url + '/ws-list-pub/',
            },
            API_KEY: "AIzaSyCvjewVMdygir0YZeny4ZZB91gWLfdD6II",
            STRIPE_PK: 'pk_test_4IEQaqAauDqKxR8sW7l9erHB'
        };
    }
    GlobalsProvider = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [])
    ], GlobalsProvider);
    return GlobalsProvider;
}());

//# sourceMappingURL=globals.js.map

/***/ }),

/***/ 70:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Faqadd2Page; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_http__ = __webpack_require__(6);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the Faqadd2Page page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var Faqadd2Page = /** @class */ (function () {
    function Faqadd2Page(navCtrl, navParams, viewCtrl, globals, http, platform) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.viewCtrl = viewCtrl;
        this.globals = globals;
        this.http = http;
        this.platform = platform;
        this.user = {};
        this.user = navParams.get('user');
        platform.registerBackButtonAction(function () {
            viewCtrl.dismiss();
        });
    }
    Faqadd2Page.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad Faqadd2Page');
    };
    Faqadd2Page.prototype.annuler = function () {
        this.viewCtrl.dismiss(null);
    };
    Faqadd2Page.prototype.dismiss = function () {
        this.changeRPCState();
        var data = {
            user: 1,
            clicked: 'ok'
        };
        this.viewCtrl.dismiss(data);
    };
    Faqadd2Page.prototype.downloadRPC = function () {
        this.viewCtrl.dismiss(null);
    };
    Faqadd2Page.prototype.changeRPCState = function () {
        var _this = this;
        var id_user = this.user.id_User != null ? this.user.id_User : this.user.id;
        this.http.get(this.globals.variables.urls.changeRPC + "?id_user=" + id_user + "&status=1", {}, {})
            .then(function (data) {
            _this.user.understand = '1';
            console.log(JSON.stringify(data.data));
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    Faqadd2Page = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-faqadd2',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/faqadd2/faqadd2.html"*/'<ion-content class="container">\n\n  <ion-grid class="ctn-rec" fixed>\n    <ion-row class="flex-row">\n      <ion-col>\n        <ion-row>\n          <ion-col>\n            <ion-label class="ws-norm title-rec"><span>Recommandations pour</span><span><br>la publication de contenu</span></ion-label>\n          </ion-col>\n        </ion-row>\n        <ion-row class="gc-ctn">\n\n          <ion-col>\n            <ion-row>\n              <div class="gc-label">\n                <div class="gcu">\n                  MERCI DE LIRE ATTENTIVEMENT CES CONDITIONS AVANT D’UTILISER L’APPLICATION DENTART<br><br>\n                </div>\n    \n                <div class="article-ttl">\n                  ARTICLE 1 - Objet<br>\n                </div><br>\n    \n                <div class="jsutify-content">\n    \n                  Les présentes conditions d’utilisation ont pour objet de définir les modalités d’utilisation de\n                  l’application mobile gratuite DENTART, qui propose de mettre en relation des personnes dans le domaine\n                  dentaire. L’objectif est de créer un réseau d’échange, de partage ainsi que d’entraide pour les\n                  professionnels de la santé bucco-dentaire, afin d’améliorer leur quotidien à travers les différentes\n                  rubriques proposées et définies à l’article 6 des présentes conditions.<br><br>\n    \n                  Pour accéder à l’application, l’utilisateur doit accepter les présentes conditions générales\n                  d’utilisation.\n                  En cas de non-acceptation des conditions générales d\'utilisation, l\'utilisateur se doit de renoncer à\n                  l\'accès des services proposés par l’application.<br><br>\n    \n                  Les conditions générales d’utilisation de DENTART peuvent être modifiées à tout moment par la société\n                  DENTART. L’utilisateur reconnaît avoir lu dans son intégralité les conditions générales d’utilisation de\n                  DENTART et s’engage à les respecter sans réserve.<br><br>\n    \n                  En cas d’acceptation des présentes conditions, l’utilisateur doit manifester son accord en cliquant sur\n                  la\n                  case libellée « J’accepte » lors de son inscription.<br><br>\n                </div>\n    \n                <div class="article-ttl">\n                  ARTICLE 2 - Utilisateurs<br>\n                </div><br>\n    \n                <div class="jsutify-content">\n                  DENTART propose un réseau de partage dans le domaine dentaire. C’est pourquoi, l’accès à l’application\n                  est\n                  réservé uniquement aux :<br><br>\n    \n                  <div>\n                    <div class="with-tab">-</div> Professionnels de la dentisterie,\n                  </div>\n                  <div>\n                    <div class="with-tab">-</div> étudiants en dentisterie\n                  </div>\n                  <div>\n                    <div class="with-tab">-</div> formateurs en dentisterie\n                  </div>\n                  <div>\n                    <div class="with-tab">-</div> Autres professions médicales\n                  </div>\n                  <div>\n                    <div class="with-tab">-</div> Professionnels du monde de la santé dentaire : praticien(ne)s, équipes de\n                    soins, laboratoires de\n                    prothèse, établissements de santé et entreprises\n                  </div>\n                  <div>\n                    <div class="with-tab">-</div> Assistantes dentaires\n                  </div><br>\n    \n                  Cette application est réservée aux personnes majeures. Nous interdisons également l’accès aux personnes\n                  dont le compte a été précédemment désactivé pour violation des présentes conditions.\n                </div><br>\n    \n    \n                <div class="article-ttl">\n                  ARTICLE 3- Responsabilité<br>\n                </div><br>\n    \n                <div class="article-ttl">\n                  Dentart :\n                </div><br>\n    \n                <div class="jsutify-content">\n    \n                  Nous n\'intervenons pas dans les relations entre les utilisateurs, c’est à dire les échanges, le contenu\n                  des\n                  annonces et la mise en relation des utilisateurs. Ainsi, nous ne sommes pas responsables des agissements\n                  des utilisateurs. Nous ne représentons pas et n’approuvons pas les opinons ainsi que les avis médicaux\n                  exprimés via les différentes rubriques. Toute publication contraire aux bonnes mœurs ou à la loi et à la\n                  règlementation en vigueur relève de l’entière responsabilité de l’utilisateur. Nous ne garantissons pas\n                  la\n                  véracité, l\'exactitude ou la fiabilité de tout contenu ou de toute publication. Nous n\'assurons pas un\n                  nombre minimum de contact à l\'annonceur et nous ne pouvons être contractuellement responsables même si ce\n                  nombre est nul.\n                  Tout événement dû à un cas de force majeure ayant pour conséquence un dysfonctionnement du réseau, une\n                  perturbation de service ou autres pannes, n\'engage pas la responsabilité de DENTART.<br>\n    \n                  <div class="article-ttl">\n                    <br>Utilisateur :\n                  </div><br>\n    \n                  Vous êtes responsable de l’utilisation que vous faites de l’application DENTART et de tout contenu que\n                  vous\n                  fournissez, y compris de la conformité aux lois, règles et réglementations en vigueur. Les publications\n                  des\n                  annonces ainsi que toutes publications et commentaires sont à votre seule initiative, vous en êtes le\n                  seul\n                  responsable. Vous vous engagez également à :\n    \n                  <div>\n                    <div class="with-tab">-</div> Garantir que la publication, le commentaire ou l’annonce ne\n                    contreviennent à aucune réglementation en\n                    vigueur, et ne sont en aucun cas des informations privés ou confidentielles\n                  </div>\n                  <div>\n                    <div class="with-tab">-</div> Détenir tous les droits (notamment des droits de propriété intellectuelle\n                    et des droits à l’image) ou\n                    avoir obtenu toutes les autorisations nécessaires à la publication de votre annonce\n                  </div>\n    \n                  En cas de non-respect de ses règles, DENTART se réserve le droit de suspendre ou/et de supprimer votre\n                  compte. Nous pouvons également supprimer toute publication contraire à ces règles.<br>\n                  L\'utilisateur déclare et reconnaît qu\'il est seul responsable du contenu des publications et annonces\n                  qu\'il\n                  publie et rend accessibles aux utilisateurs, ainsi que de tout document ou information qu\'il transmet aux\n                  utilisateurs.<br>\n    \n                </div><br>\n    \n                <div class="article-ttl">\n                  ARTICLE 4- Règles de vie<br>\n                </div><br>\n    \n    \n                <div class="jsutify-content">\n                  DENTART a pour objectif de créer un environnement d’entraide, d’échange d’informations afin de faciliter\n                  le\n                  quotidien des professionnels de la santé bucco-dentaire. Toutes les personnes qui utilisent les services\n                  de\n                  DENTART doivent se conformer aux règles énoncées dans les présentes conditions.<br><br>\n    \n                  Vous vous engagez à respecter l\'esprit de l’application, en restant bienveillant, courtois et respectueux\n                  avec les autres utilisateurs. Vous vous engagez également à publier des informations justes, non erronées\n                  et qui n’induisent pas en erreur les autres utilisateurs.\n                  Toutes publications, annonces ou commentaires injurieux qui accueillent des contenus illégaux, violents,\n                  menaçants, abusifs, diffamatoires, vulgaires, obscènes, éthiquement répréhensibles ou qui violeraient les\n                  lois applicables ne sont pas permis. Aucune conduite illicite contraire à la réglementation en vigueur,\n                  aux\n                  bonnes moeurs, n’est autorisée.<br><br>\n    \n                  L’utilisateur s’engage à ne pas perturber le bon fonctionnement de l’application mobile, par quelque\n                  moyen\n                  et sous quelque prétexte que ce soit.<br>\n                  L\'insertion de texte à caractère principalement publicitaire dans les annonces est strictement interdite\n                  sauf accord ou partenariat avec DENTART. En cas de non-respect de ces règles, DENTART se réserve le droit\n                  de suspendre et/ou supprimer le compte concerné.<br>\n                  Dans cet esprit, toute agression ou propos jugé comme agressif par les utilisateurs pourra entraîner la\n                  suspension immédiate et sans préavis du compte utilisateur du membre mis en cause. De même, les propos,\n                  en\n                  particulier, irrespectueux, racistes, diffamatoires, ou humiliant seront systématiquement supprimés.\n                </div><br><br>\n    \n                <div class="article-ttl">\n                  ARTICLE 5- Création du compte<br>\n                </div><br>\n    \n                <div class="jsutify-content">\n                  L’application nécessite obligatoirement la création d’un compte pour accéder au contenu. Lors de la\n                  création de son compte, l’utilisateur s’engage à fournir des informations exactes. Toute usurpation\n                  d’identité est interdite et entraine la suppression immédiate du compte.<br><br>\n    \n                  Afin de garantir le sérieux et d’assurer le bon fonctionnement des rubriques « annonces », « formations »\n                  et « partages », en évitant tout acte frauduleux, il est nécessaire de créer un environnement de\n                  confiance.\n                  C’est pourquoi, nous certifions les comptes des utilisateurs en leur demandant pendant l’inscription,\n                  l’envoi d’une photo d’une carte étudiante ou d’un document attestant la profession de l’utilisateur. Cet\n                  envoi n’est pas obligatoire à la création du compte mais il est vivement recommandé. La certification du\n                  compte ne se fera qu’après vérification et validation de DENTART. Une fois accepté, un logo inscrit\n                  « certifié » sera affiché sur le profil de l’utilisateur.<br>\n                  L’utilisateur est responsable de la confidentialité du mot de passe et du login, il est également\n                  responsable de toutes les activités qui se produisent sous son mot de passe et son login. L’utilisateur\n                  doit informer immédiatement DENTART d’une utilisation non autorisée de son mot de passe ou de son compte\n                  ou\n                  de n’importe quelle autre infraction de sécurité.<br><br>\n    \n                  Afin de faciliter les échanges, l’utilisateur a également la possibilité d’informer les autres\n                  utilisateurs\n                  de sa situation géographique.<br><br>\n                </div>\n    \n                <div class="article-ttl">\n                  ARTICLE 6 – Utilisation de DENTART<br>\n                </div><br>\n    \n                <div class="jsutify-content">\n                  Une fois son inscription finalisée, l’utilisateur a la possibilité d’accéder gratuitement aux rubriques\n                  suivantes :<br><br>\n    \n                  <div>\n                    <div class="with-tab">-</div> Partages : il s’agit d’un espace d’échange, de communication et de\n                    collaboration. Cette rubrique permet\n                    notamment aux utilisateurs d’échanger sur les cas rencontrés dans la pratique de leur activité, ainsi\n                    que\n                    divers thèmes autour de la dentisterie. Ils pourront alors publier de nouveaux cas, ainsi qu’en\n                    commenter\n                    pour aider leurs collègues. Cet espace est fondé sur un principe de respect mutuel. Cet espace n’est\n                    pas\n                    destiné à établir un dialogue entre patients et praticiens. Ce n’est en aucun cas une consultation\n                    clinique.\n                  </div><br>\n    \n                  <div>\n                    <div class="with-tab">-</div> Annonces : DENTART vous donne la possibilité de publier des annonces\n                    d’emplois de ventes ou de locations.\n                    DENTART est seulement une plateforme qui vous permet de mettre votre annonce en ligne, vous êtes seul\n                    responsable du contenu de votre annonce et de la légalité de celle-ci. Vous certifiez que vous proposez\n                    des\n                    ventes et locations en toute légalité. Nous nous réservons le droit de retirer de l’application toute\n                    annonce qui serait contraire à la loi, à l\'ordre public, aux bonnes mœurs, à l\'image de l’application\n                    ou\n                    aux attentes des utilisateurs. Leur durée de parution est d’un an. Les annonces de demande d\'emploi,\n                    recherche et achat toutes catégories sont gratuites, excepté pour les centres de recrutement et autres\n                    entreprises de vente ou location, une demande devra se faire auprès des services DENTART avant toute\n                    mise\n                    en ligne d’une forme de publicité dissimulée. L’Annonceur est seul auteur et seul responsable du\n                    contenu de\n                    ses annonces et des éléments associés. Le contenu de ces annonces n\'est en aucun cas le reflet des\n                    opinions\n                    de DENTART. Les utilisateurs ont également la possibilité de signaler toute annonce qui ne respecterait\n                    pas\n                    les règles énoncées.\n                  </div><br>\n    \n                  <div>\n                    <div class="with-tab">-</div> Formations : Cette rubrique permet aux utilisateurs de trouver facilement\n                    des formations en dentisterie\n                    près de chez eux. DENTART met en œuvre tous les moyens afin d’éviter toute fraude ou abus. C’est\n                    pourquoi,\n                    la publication de la formation doit passer par notre validation. Toutefois, si une annonce frauduleuse\n                    est\n                    publiée, DENTART n’est en aucun cas en lien ni responsable de cette publication. L’annonce reste publié\n                    jusqu’à la date de la formation.\n                  </div><br>\n    \n                  <div>\n                    <div class="with-tab">-</div> A savoir : les utilisateurs ont un accès gratuit à cette rubrique. Elle\n                    leur permet d’avoir des\n                    informations sur les nouveautés de la profession (produits de laboratoires, lois…). Le contenu est\n                    publié\n                    par DENTART uniquement. Il n’y aucune obligation de fréquence de publication. DENTART se réverse le\n                    droit\n                    de publier ou non à tout moment. DENTART se contente juste de publier des informer sans formuler aucune\n                    opinion ni avis. Il s’agit d’une simple transmission d’information afin que les utilisateurs soient\n                    informés des nouveautés du monde dentaire.\n                  </div>\n    \n                </div><br><br>\n    \n    \n    \n                <div class="article-ttl">\n                  ARTICLE 7 - Politique de Protection des données personnelles<br>\n                </div><br>\n    \n                <div class="jsutify-content">\n                  Des données à caractère personnel peuvent être communiquées volontairement par l’Utilisateur pour la\n                  création de compte ou la publication d’annonces.\n                  Conformément à la réglementation européenne et française en matière de données à caractère personnel, en\n                  ce\n                  compris le Règlement Général sur la Protection des Données n°2016/679 du 27 avril 2016 (dit « RGPD ») et\n                  la\n                  loi n° 78-17 du 6 janvier 1978 relative à l\'informatique, aux fichiers et aux libertés modifiée (dite «\n                  loi\n                  Informatique et Libertés »), l’utilisateur reconnaît avoir été informé par DENTART, en sa qualité de\n                  responsable de traitement des données à caractère personnel collectées, que :<br><br>\n    \n                  Les données à caractère personnel de l’utilisateur telles que le nom, l’adresse mail, situation\n                  professionnelle ou localisation professionnelle peuvent être collectées et traitées au titre de :<br><br>\n    \n                  <div>\n                    <div class="with-tab">-</div> La création du compte de l’utilisateur. DENTART étant un réseau social\n                    réservé exclusivement aux\n                    professionnels dentaires et toute personne mentionnée à l’article 2, certaines données sont demandées\n                    afin\n                    de garantir l’accès à ces professionnels de santé et ainsi poursuivre l’objectif de l’application.\n                  </div><br>\n    \n                  <div>\n                    <div class="with-tab">-</div> La gestion des publications de l’utilisateur sur le partage ainsi que sur\n                    l’espace annonce et formation\n                  </div><br>\n    \n                  <div>\n                    <div class="with-tab">-</div> L’exécution des dispositions légales, règlementaires et administratives\n                    en vigueur, y compris celles\n                    relatives à la lutte contre la fraude, pouvant conduire à son inscription sur une liste de personnes\n                    présentant un risque de fraude\n                  </div><br>\n    \n                  DENTART s’engage à ne pas exploiter les données personnelles de l’utilisateur pour d’autres finalités que\n                  celles précitées.<br><br>\n    \n                  L’utilisateur reconnaît que la collecte et le traitement de ses données à caractère personnel (y compris\n                  des données d’identification, des données relatives à sa situation professionnelle …) sont nécessaires à\n                  la\n                  gestion, au bon fonctionnement et l’utilisation de l’application.<br><br>\n    \n                  Les destinataires des données à caractère personnel de l’utilisateur sont, dans la limite de leurs\n                  attributions respectives, DENTART, dont le personnel en charge des traitements relatifs à ces données.\n                  Les informations personnelles sont conservées dans des réseaux sécurisés et ne sont accessibles que pour\n                  un\n                  nombre limité de personnes qui ont des droits d’accès spéciaux à ces systèmes, et sont soumises à un\n                  devoir\n                  de confidentialité concernant ces informations.<br><br>\n    \n                  DENTART s’engage à ce que les données à caractère personnel de l’utilisateur ne soient en aucun cas\n                  transmises à des tiers non autorisés.<br><br>\n    \n                  Les durées de conservation des données à caractère personnel traitées dans le cadre de la gestion de\n                  l’application varient en fonction des finalités susvisées et sont conformes aux recommandations de la\n                  CNIL\n                  en tout état de cause, le calcul de ces durées est réalisé en fonction des finalités pour lesquelles les\n                  données sont collectées, des obligations légales de DENTART et des prescriptions légales applicables.<br><br>\n    \n                  DENTART s’engage à prendre les mesures techniques et organisationnelles appropriées pour garantir un\n                  niveau\n                  de sécurité et de confidentialité adapté au risque présenté par le traitement des données de\n                  l’utilisateur\n                  et à notifier à la CNIL et informer l’utilisateur en cas de violation de ses données dans les limites et\n                  conditions des articles 33 et 34 du RGPD.<br><br>\n    \n                  L’utilisateur dispose d’un droit de demander l’accès à ses données à caractère personnel, la\n                  rectification\n                  ou l’effacement de celles-ci, et de décider du sort de ces données, post-mortem. L’utilisateur dispose\n                  également d’un droit de s’opposer au traitement pour motifs légitimes, de limiter le traitement dont il\n                  fait l’objet et d’un droit à la portabilité des données à caractère personnel dans les limites fixées par\n                  la loi. Il dispose enfin de la possibilité de s’opposer, à tout moment et sans frais, à la prospection\n                  commerciale, y compris lorsque celle-ci est réalisée de manière ciblée.<br><br>\n    \n                  Ces droits peuvent être exercés, en justifiant de son identité, par email à support@DentArt.fr ou par\n                  courrier à DENTART, 25 rue de Montmorency 95410. Groslay.<br><br>\n    \n                  L’assuré dispose également du droit de contacter la CNIL directement sur le site internet\n                  <a (click)="openUrl(\'https://www.cnil.fr/fr/agir\')">https://www.cnil.fr/fr/agir</a> ou par courrier\n                  à l’adresse suivante : Commission Nationale de l\'Informatique\n                  et des Libertés, 3 Place de Fontenoy - TSA 80715, 75334 PARIS CEDEX 07.<br><br>\n    \n                  En cas de prospection commerciale par téléphone : L’assuré dispose également du droit de s’inscrire sur\n                  la\n                  liste d’opposition au démarchage téléphonique gérée par la société Opposetel. Pour plus d’informations :\n                  <a (click)="openUrl(\'www.bloctel.gouv.fr\')">www.bloctel.gouv.fr</a>.\n                </div><br><br>\n    \n                <div class="article-ttl">\n                  ARTICLE 8 - Utilisation des cookies<br>\n                </div><br>\n    \n                <div class="jsutify-content">\n                  Pour utiliser l’application DentArt.fr dans les meilleures conditions, il est conseillé d’activer les\n                  cookies sur votre tablette, votre smartphone ou vos autres appareils mobiles. Sinon, nous ne pouvons pas\n                  vous garantir intégralement une application fluide.\n                </div><br><br>\n    \n                <div class="article-ttl">\n                  ARTICLE 9 - Liens vers des sites tiers<br>\n                </div><br>\n    \n                <div class="jsutify-content">\n                  Nous pouvons inclure des liens vers des sites tiers dans les rubriques de DENTART (médiaux sociaux ou\n                  liens\n                  vers d’autres sites). Ces sites tiers ont des politiques de confidentialité séparées et indépendantes.\n                  Nous\n                  n’avons donc aucune responsabilité quant au contenu et à l’activité des sites de ces liens.\n                </div>\n    \n              </div>\n            </ion-row>\n    \n            <ion-row>\n              <div class="gc-label">\n                <div class="gcu"><br><br>\n                  Condition générale de vente\n                </div><br><br>\n    \n    \n    \n                <div class="article-ttl">\n                  ARTICLE 1- Objet<br>\n                </div><br>\n    \n                <div class="jsutify-content">\n                  Les présentes Conditions Générales de Vente ont pour objet de définir les conditions dans lesquelles\n                  DENTART fournit aux clients qui lui en font la demande le service suivant :<br><br>\n    \n                  Option classement des publications: Pour augmenter la visibilité de votre annonce, il est possible de\n                  faire\n                  paraître l’annonce parmi les cinq premières annonces pendant une semaine ou un mois, <b>en aléatoire</b>\n                  en\n                  fonction du nombre d’annonce souscrivant à l’option.<br><br>\n                </div>\n    \n                <div class="article-ttl">\n                  ARTICLE 2 – Modalités<br>\n                </div><br>\n    \n                <div class="jsutify-content">\n                  La souscription d\'une ou plusieurs option(s) payante(s) est exclusivement accessible aux annonceurs\n                  connectés à leur Compte Personnel depuis l’application. Une option payante n\'est souscrite que pour une\n                  seule annonce. En conséquence, il n\'est pas possible de transférer le bénéfice d\'une option payante d\'une\n                  annonce à une autre.<br><br>\n                </div>\n    \n                <div class="article-ttl">\n                  ARTICLE 3 – Tarifs<br>\n                </div><br>\n    \n                <div class="jsutify-content">\n                  L’option classements des publications :\n    \n                  • Pour les post remontés dans les premiers pendant une semaine 5 euros TTC\n                  • Pour les post remontés dans les 5 premiers pendant un mois : 15 euros TTC\n                </div><br><br>\n    \n                <div class="article-ttl">\n                  ARTICLE 4 – Conditions de paiement<br>\n                </div><br>\n    \n                <div class="jsutify-content">\n                  Le paiement des annonces s’effectue en ligne par carte de crédit ou PayPal. Les options payantes ne sont\n                  pas remboursables, même en cas de suppression de l’annonce.\n                  En application des articles L 221-18 et suivants du code de la consommation, l\'annonceur dispose d\'un\n                  délai\n                  de quatorze jours francs pour se rétracter. Toutefois, en validant la commande, l\'annonceur accepte que\n                  DENTART commence à exécuter la prestation et renonce expressément à son droit de rétractation. \n                </div><br><br>\n    \n                <div class="article-ttl">\n                  ARTICLE 5 - Force majeure<br>\n                </div><br>\n    \n                <div class="jsutify-content">\n                  Les parties ne pourront être tenues pour responsables si la non-exécution ou le retard dans l\'exécution\n                  de\n                  l\'une quelconque de leurs obligations, telles que décrites dans les présentes découle d\'un cas de force\n                  majeure, au sens de l\'article 1218 du Code civil.\n                </div><br><br>\n    \n                <div class="article-ttl">\n                  ARTICLE 6 – Litiges<br>\n                </div><br>\n    \n                <div class="jsutify-content">\n                  Tous les litiges auxquels le présent contrat pourrait donner lieu, concernant tant sa validité, son\n                  interprétation, son exécution, sa résiliation, leurs conséquences et leurs suites seront soumis aux\n                  tribunaux compétents dans les conditions de droit commun.\n                </div><br><br>\n    \n                <div class="article-ttl">\n                  ARTICLE 7 - Acceptation du Client<br>\n                </div><br>\n    \n                <div class="jsutify-content">\n                  Les présentes Conditions Générales de Vente sont expressément agréés et acceptés par le Client, qui\n                  déclare\n                  et reconnaît en avoir une parfaite connaissance.\n                </div><br><br>\n              </div>\n    \n              <!-- <ion-row *ngIf="source != \'menu\'" class="btn-ctn">\n                <button ion-button round class="btn-blue-gradient" (click)="signUp();">Accepter</button>\n              </ion-row> -->\n    \n            </ion-row>\n    \n          </ion-col>\n    \n    \n        </ion-row>\n        <ion-row>\n          <ion-col >\n            <button ion-button round class="btn-download" (click)="downloadRPC();">T&#233;l&#233;charger</button>\n          </ion-col>\n          <ion-col >\n            <button ion-button round class="btn-blue-gradient" (click)="dismiss();">J\'ai compris</button>\n          </ion-col>\n        </ion-row>\n      </ion-col>\n    </ion-row>\n\n  </ion-grid>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/faqadd2/faqadd2.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_2__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */]])
    ], Faqadd2Page);
    return Faqadd2Page;
}());

//# sourceMappingURL=faqadd2.js.map

/***/ }),

/***/ 86:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ASavoirDetailsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_browser_tab__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_toast__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__imageviewer_imageviewer__ = __webpack_require__(67);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the ASavoirDetailsPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ASavoirDetailsPage = /** @class */ (function () {
    function ASavoirDetailsPage(navCtrl, navParams, browserTab, toast, platform, modalCtrl, viewCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.browserTab = browserTab;
        this.toast = toast;
        this.platform = platform;
        this.modalCtrl = modalCtrl;
        this.viewCtrl = viewCtrl;
        this.user = {};
        this.asv = {};
        this.nb_img_asv = [];
        this.active_image = 1;
        this.user = navParams.get('user');
        this.asv = navParams.get('asv');
        // faq_image_1
        if (this.asv.image_1 != null && this.asv.image_1 != '')
            this.nb_img_asv.push('1');
        if (this.asv.image_2 != null && this.asv.image_2 != '')
            this.nb_img_asv.push('2');
        if (this.asv.image_3 != null && this.asv.image_3 != '')
            this.nb_img_asv.push('3');
        if (this.asv.image_4 != null && this.asv.image_4 != '')
            this.nb_img_asv.push('4');
        //
        if (this.asv.faq_image_1 != null && this.asv.faq_image_1 != '')
            this.nb_img_asv.push('1');
        if (this.asv.faq_image_2 != null && this.asv.faq_image_2 != '')
            this.nb_img_asv.push('2');
        if (this.asv.faq_image_3 != null && this.asv.faq_image_3 != '')
            this.nb_img_asv.push('3');
        if (this.asv.faq_image_4 != null && this.asv.faq_image_4 != '')
            this.nb_img_asv.push('4');
        this.active_image = parseInt(this.nb_img_asv[0]);
        platform.registerBackButtonAction(function () {
            navCtrl.pop();
        });
    }
    ASavoirDetailsPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ASavoirDetailsPage');
    };
    ASavoirDetailsPage.prototype.slideChanged = function () {
        console.log(this.mySlider.getActiveIndex());
        if (this.mySlider.getActiveIndex() < this.nb_img_asv.length) {
            this.active_image = parseInt(this.nb_img_asv[this.mySlider.getActiveIndex()]);
        }
    };
    ASavoirDetailsPage.prototype.retour = function () {
        this.navCtrl.pop();
    };
    ASavoirDetailsPage.prototype.showURL = function () {
        var _this = this;
        if (this.asv.partner_url != '') {
            this.browserTab.isAvailable()
                .then(function (isAvailable) {
                if (isAvailable) {
                    _this.browserTab.openUrl(_this.asv.partner_url);
                }
                else {
                    _this.toast.show("Navigateur non disponible", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
            });
        }
        else {
            this.toast.show("Pas d'URL pour cette News", "2000", "bottom").subscribe(function (toast) {
                console.log(toast);
            });
        }
        //partner_url
    };
    ASavoirDetailsPage.prototype.viewImage = function (img) {
        var _this = this;
        var iv = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_4__imageviewer_imageviewer__["a" /* ImageviewerPage */], {
            img: img
        });
        iv.onDidDismiss(function () {
            _this.platform.registerBackButtonAction(function () {
                _this.navCtrl.pop();
            });
        });
        iv.present();
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('mySlider'),
        __metadata("design:type", Object)
    ], ASavoirDetailsPage.prototype, "mySlider", void 0);
    ASavoirDetailsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-a-savoir-details',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/a-savoir-details/a-savoir-details.html"*/'<ion-content class="pr">\n\n  <ion-row ion-fixed class="top-gc">\n    <div (click)="retour();" class="back-ctn-1">\n      <img class="back-icon" src="../../assets/icon/back-117bcf.svg">\n      <div class="gc">\n        Retour\n      </div>\n    </div>\n    <div>\n    </div>\n  </ion-row>\n\n  <div class="container">\n\n    <ion-grid>\n\n      <ion-row class="faq-det-grid">\n\n        <ion-col>\n\n          <ion-row *ngIf="asv.images_count > 0 && asv.image_1 != null" class="img-bg">\n\n            <ion-col>\n              <ion-slides #mySlider (ionSlideDidChange)="slideChanged()">\n\n                <!-- <ion-slide >\n                  <span>No image for this FaQ</span>\n                </ion-slide> -->\n\n                <!-- faq_image_1 -->\n                <ion-slide class="like-slide" *ngIf="asv.image_1 != null && asv.image_1 != \'\'">\n                  <img class="like-bg" src="{{asv.image_1}}" (click)="viewImage(asv.image_1)">\n                </ion-slide>\n\n                <ion-slide class="like-slide" *ngIf="asv.image_2 != null && asv.image_2 != \'\'">\n                  <img class="like-bg" src="{{asv.image_2}}" (click)="viewImage(asv.image_2)">\n                </ion-slide>\n\n                <ion-slide class="like-slide" *ngIf="asv.image_3 != null && asv.image_3 != \'\'">\n                  <img class="like-bg" src="{{asv.image_3}}" (click)="viewImage(asv.image_3)">\n                </ion-slide>\n\n                <ion-slide class="like-slide" *ngIf="asv.image_4 != null && asv.image_4 != \'\'">\n                  <img class="like-bg" src="{{asv.image_4}}" (click)="viewImage(asv.image_4)">\n                </ion-slide>\n                <!--  -->\n                <ion-slide class="like-slide" *ngIf="asv.faq_image_1 != null && asv.faq_image_1 != \'\'">\n                  <img class="like-bg" src="{{asv.faq_image_1}}" (click)="viewImage(asv.faq_image_1)">\n                </ion-slide>\n\n                <ion-slide class="like-slide" *ngIf="asv.faq_image_2 != null && asv.faq_image_2 != \'\'">\n                  <img class="like-bg" src="{{asv.faq_image_2}}" (click)="viewImage(asv.faq_image_2)">\n                </ion-slide>\n\n                <ion-slide class="like-slide" *ngIf="asv.faq_image_3 != null && asv.faq_image_3 != \'\'">\n                  <img class="like-bg" src="{{asv.faq_image_3}}" (click)="viewImage(asv.faq_image_3)">\n                </ion-slide>\n\n                <ion-slide class="like-slide" *ngIf="asv.faq_image_4 != null && asv.faq_image_4 != \'\'">\n                  <img class="like-bg" src="{{asv.faq_image_4}}" (click)="viewImage(asv.faq_image_4)">\n                </ion-slide>\n\n                <!--  -->\n\n                \n\n              </ion-slides>\n              <div class="img-slide">\n                <ion-label class="margin-a">\n                  <div *ngIf="asv.image_1 != null && asv.image_1 != \'\'" class="{{active_image == 1 ? \'vertdc\' : \'greydc\'}}"></div>\n                  <div *ngIf="asv.image_2 != null && asv.image_2 != \'\'" class="{{active_image == 2 ? \'vertdc\' : \'greydc\'}}"></div>\n                  <div *ngIf="asv.image_3 != null && asv.image_3 != \'\'" class="{{active_image == 3 ? \'vertdc\' : \'greydc\'}}"></div>\n                  <div *ngIf="asv.image_4 != null && asv.image_4 != \'\'" class="{{active_image == 4 ? \'vertdc\' : \'greydc\'}}"></div>\n\n                  <!--  -->\n                  <div *ngIf="asv.faq_image_1 != null && asv.faq_image_1 != \'\'" class="{{active_image == 1 ? \'vertdc\' : \'greydc\'}}"></div>\n                  <div *ngIf="asv.faq_image_2 != null && asv.faq_image_2 != \'\'" class="{{active_image == 2 ? \'vertdc\' : \'greydc\'}}"></div>\n                  <div *ngIf="asv.faq_image_3 != null && asv.faq_image_3 != \'\'" class="{{active_image == 3 ? \'vertdc\' : \'greydc\'}}"></div>\n                  <div *ngIf="asv.faq_image_4 != null && asv.faq_image_4 != \'\'" class="{{active_image == 4 ? \'vertdc\' : \'greydc\'}}"></div>\n                </ion-label>\n              </div>\n            </ion-col>\n\n          </ion-row>\n\n          <ion-row *ngIf="asv.images_count > 0 && asv.faq_image_1 != null" class="img-bg">\n\n              <ion-col>\n                <ion-slides #mySlider (ionSlideDidChange)="slideChanged()">\n  \n                  <!-- <ion-slide >\n                    <span>No image for this FaQ</span>\n                  </ion-slide> -->\n  \n                  <ion-slide class="like-slide" *ngIf="asv.faq_image_1 != null && asv.faq_image_1 != \'\'">\n                    <img class="like-bg" src="{{asv.faq_image_1}}" (click)="viewImage(asv.faq_image_1)">\n                  </ion-slide>\n  \n                  <ion-slide class="like-slide" *ngIf="asv.faq_image_2 != null && asv.faq_image_2 != \'\'">\n                    <img class="like-bg" src="{{asv.faq_image_2}}" (click)="viewImage(asv.faq_image_2)">\n                  </ion-slide>\n  \n                  <ion-slide class="like-slide" *ngIf="asv.faq_image_3 != null && asv.faq_image_3 != \'\'">\n                    <img class="like-bg" src="{{asv.faq_image_3}}" (click)="viewImage(asv.faq_image_3)">\n                  </ion-slide>\n  \n                  <ion-slide class="like-slide" *ngIf="asv.faq_image_4 != null && asv.faq_image_4 != \'\'">\n                    <img class="like-bg" src="{{asv.faq_image_4}}" (click)="viewImage(asv.faq_image_4)">\n                  </ion-slide>\n  \n                </ion-slides>\n                <div class="img-slide">\n                  <ion-label class="margin-a">\n                    <div *ngIf="asv.faq_image_1 != null && asv.faq_image_1 != \'\'" class="{{active_image == 1 ? \'vertdc\' : \'greydc\'}}"></div>\n                    <div *ngIf="asv.faq_image_2 != null && asv.faq_image_2 != \'\'" class="{{active_image == 2 ? \'vertdc\' : \'greydc\'}}"></div>\n                    <div *ngIf="asv.faq_image_3 != null && asv.faq_image_3 != \'\'" class="{{active_image == 3 ? \'vertdc\' : \'greydc\'}}"></div>\n                    <div *ngIf="asv.faq_image_4 != null && asv.faq_image_4 != \'\'" class="{{active_image == 4 ? \'vertdc\' : \'greydc\'}}"></div>\n                  </ion-label>\n                </div>\n              </ion-col>\n  \n            </ion-row>\n\n          <ion-row class="gc-ctn">\n            <ion-col>\n              <ion-row>\n                <ion-label class="gc-label">\n\n                  <!-- <span class="titre-faq">{{asv.title}}<br></span>\n                  <div class="sep-title"></div>\n                  <span class="cat">{{asv.categorie_ou_theme}}<br></span> -->\n                  <span class="titre-faq">{{asv.title}}<br></span>\n                  <span class="address">Description du produit<br></span>\n                  <div class="sep"></div>\n                  <span class="descrit" [innerHtml]="asv.description"></span>\n                </ion-label>\n              </ion-row>\n              <ion-row class="btn-ctn" (click)="showURL();">\n                <ion-col>\n                  <button ion-button round class="btn-blue-gradient">\n                    <img class="icon-20" src="../../assets/icon/unlink.svg">\n                    <span> Visiter le site partenaire</span>\n                  </button>\n                </ion-col>\n              </ion-row>\n            </ion-col>\n          </ion-row>\n\n        </ion-col>\n      </ion-row>\n\n    </ion-grid>\n\n  </div>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/a-savoir-details/a-savoir-details.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_browser_tab__["a" /* BrowserTab */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_toast__["a" /* Toast */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */]])
    ], ASavoirDetailsPage);
    return ASavoirDetailsPage;
}());

//# sourceMappingURL=a-savoir-details.js.map

/***/ }),

/***/ 87:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MailtoPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_toast__ = __webpack_require__(14);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the MailtoPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var MailtoPage = /** @class */ (function () {
    function MailtoPage(navCtrl, navParams, viewCtrl, http, globals, toast, platform) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.viewCtrl = viewCtrl;
        this.http = http;
        this.globals = globals;
        this.toast = toast;
        this.platform = platform;
        this.user = {};
        this.ad = {};
        this.mail_object = '';
        this.ad_description = '';
        this.mail = "";
        this.post_id = "";
        this.object = "";
        this.content = "";
        this.isDisabled = true;
        this.load = 0;
        this.user = navParams.get('user');
        this.ad = navParams.get('ad');
        this.mail = navParams.get('mail');
        this.post_id = navParams.get('post_id');
        this.object = navParams.get('object');
        platform.registerBackButtonAction(function () {
            viewCtrl.dismiss();
        });
    }
    MailtoPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad MailtoPage');
    };
    MailtoPage.prototype.hideMailTo = function () {
        this.viewCtrl.dismiss();
    };
    MailtoPage.prototype.sendToMail = function () {
        var _this = this;
        this.load = 1;
        //contactAsMail
        this.http.post(this.globals.variables.urls.contactAsMail, {
            "post_id": "" + this.post_id,
            "mail": this.mail,
            "object": this.object,
            "content": this.content
        }, {})
            .then(function (data) {
            _this.load = 0;
            var res = JSON.parse(data.data);
            if (res.status == "sent") {
                _this.toast.show('Votre mail a été envoyé', '3000', 'bottom').subscribe(function (toas) {
                    console.log(toas);
                });
            }
            else {
                _this.toast.show('Mail non envoyé', '3000', 'bottom').subscribe(function (toas) {
                    console.log(toas);
                });
            }
            console.log("Resultat d'envoi mail");
            console.log(JSON.stringify(data));
            _this.viewCtrl.dismiss();
        }, function (error) {
            _this.load = 0;
            _this.toast.show('Erreur lors de l\'envoi du mail', '3000', 'bottom').subscribe(function (toas) {
                console.log(toas);
            });
            console.log("Erreur d'envoi mail");
            console.log(JSON.stringify(error));
            _this.viewCtrl.dismiss();
        });
    };
    MailtoPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-mailto',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/mailto/mailto.html"*/'<ion-content class="container">\n\n  <div ion-fixed class="load-ctn" id="load" *ngIf="load == 1">\n    <img class="load-img" src="../../assets/icon/Spinner-load.svg" />\n  </div>\n\n  <div class="mail-to-ctn">\n    <div class="to-middle">\n      <div class="mail-object-ctn">\n        <ion-input class="mail-object" type="text" [(ngModel)]="mail" placeholder="Objet" [disabled]="isDisabled"></ion-input>\n      </div>\n      <div class="mail-object-ctn">\n        <ion-input class="mail-object" type="text" [(ngModel)]="object" placeholder="Objet" [disabled]="isDisabled"></ion-input>\n      </div>\n      <div class="mail-desc-ctn">\n        <ion-textarea class="desc-faq" placeholder="Contenu" [(ngModel)]="content" name="content"></ion-textarea>\n      </div>\n      <ion-row>\n        <ion-col (click)="hideMailTo();">\n          <button ion-button round class="btn-round-gradient">\n            Annuler\n          </button>\n        </ion-col>\n        <ion-col (click)="sendToMail();">\n          <button ion-button round class="btn-round-gradient">\n            Envoyer\n          </button>\n        </ion-col>\n      </ion-row>\n    </div>\n  </div>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/mailto/mailto.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_3__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_toast__["a" /* Toast */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */]])
    ], MailtoPage);
    return MailtoPage;
}());

//# sourceMappingURL=mailto.js.map

/***/ }),

/***/ 88:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NonetworkPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_network__ = __webpack_require__(80);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__dentart_dentart__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the NonetworkPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var NonetworkPage = /** @class */ (function () {
    function NonetworkPage(navCtrl, navParams, network) {
        //this.testConnectivity();
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.network = network;
        this.verified = 0;
    }
    NonetworkPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad NonetworkPage');
    };
    NonetworkPage.prototype.testConnectivity = function () {
        var _this = this;
        console.log("Testing network");
        if (this.network.type == 'none' || this.network.type == 'unknown') {
            /* this.rootPage = NonetworkPage;
            console.log("You are not connected"); */
        }
        else if (this.network.type != 'none' && this.network.type != 'unknown' && this.verified == 0) {
            this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_3__dentart_dentart__["a" /* DentartPage */]);
            this.verified = 1;
        }
        setTimeout(function () {
            _this.testConnectivity();
        }, 5000);
    };
    NonetworkPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-nonetwork',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/nonetwork/nonetwork.html"*/'<ion-content class="container">\n\n  <ion-row class="msg-ctn">\n    <ion-label class="lab-msg">\n      Pour utiliser l’application, vous devez être connecté en Wifi ou réseau mobile\n    </ion-label>\n  </ion-row>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/nonetwork/nonetwork.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_network__["a" /* Network */]])
    ], NonetworkPage);
    return NonetworkPage;
}());

//# sourceMappingURL=nonetwork.js.map

/***/ }),

/***/ 89:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Faqadd1Page; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_file__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_file_transfer__ = __webpack_require__(122);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__faqadd3_faqadd3__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_diagnostic__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ionic_native_photo_library__ = __webpack_require__(124);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









// import { Camera, CameraOptions } from '@ionic-native/camera';
// import { ImageResizer } from '@ionic-native/image-resizer';

// import { ImagePicker } from '@ionic-native/image-picker';
/**
 * Generated class for the Faqadd1Page page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var Faqadd1Page = /** @class */ (function () {
    //https://ampersandacademy.com/tutorials/ionic-framework-3/upload-image-to-the-php-server-using-ionic-3-file-transfer-and-camera-plugin
    function Faqadd1Page(navCtrl, navParams, file, ptf, transfer, alertCtrl, viewCtrl, http, globals, toastCtrl, diagnostic, 
        // private camera: Camera,
        // private imageResizer: ImageResizer,
        photoLibrary, platform, modalCtrl) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.file = file;
        this.ptf = ptf;
        this.transfer = transfer;
        this.alertCtrl = alertCtrl;
        this.viewCtrl = viewCtrl;
        this.http = http;
        this.globals = globals;
        this.toastCtrl = toastCtrl;
        this.diagnostic = diagnostic;
        this.photoLibrary = photoLibrary;
        this.platform = platform;
        this.modalCtrl = modalCtrl;
        this.source = 1;
        this.load = 0;
        this.listImage = [];
        this.selectedImg = null;
        this.title = "Continuer";
        this.activeToPhoto = 0;
        this.phoneLibPhotos = [];
        this.range = 0;
        if (window.indexedDB) {
            console.log('I have WKWebview installed!');
        }
        else {
            console.log('I have UIWebView installed!');
        }
        console.log(ptf.is('ios'));
        console.log(ptf.is('android'));
        console.log(ptf.is('core'));
        console.log(ptf.is('mobileweb'));
        this.user = navParams.get('user');
        this.theme = navParams.get('theme');
        this.source = navParams.get('source') != null ? navParams.get('source') : 1;
        if (this.source == "profil")
            this.title = "Continuer";
        this.checkPermissions();
        platform.registerBackButtonAction(function () {
            if (_this.source == 'profil') {
                viewCtrl.dismiss();
            }
            else if (_this.source == 'newpub') {
                viewCtrl.dismiss();
            }
        });
    }
    Faqadd1Page.prototype.ionViewDidLoad = function () {
        this.showGalery();
        console.log('ionViewDidLoad Faqadd1Page');
    };
    Faqadd1Page.prototype.checkPermissions = function () {
        var _this = this;
        // More code goes here
        this.diagnostic.isCameraAuthorized().then(function (authorized) {
            if (authorized)
                _this.initializePreview();
            else {
                _this.diagnostic.requestCameraAuthorization().then(function (status) {
                    if (status == _this.diagnostic.permissionStatus.GRANTED)
                        _this.initializePreview();
                    else {
                        // Permissions not granted
                        // Therefore, create and present toast
                        _this.toastCtrl.create({
                            message: "Pas d'acces au camera",
                            position: "bottom",
                            duration: 2000
                        }).present();
                    }
                });
            }
        });
    };
    Faqadd1Page.prototype.initializePreview = function () {
        //
    };
    Faqadd1Page.prototype.selectImage = function (img) {
        this.selectedImg = img;
    };
    Faqadd1Page.prototype.getImagesGalerie = function (baseURL, dirToList) {
        var _this = this;
        this.file.listDir(baseURL, dirToList)
            .then(function (listing) {
            var idImg = 0;
            listing.forEach(function (value) {
                //console.log(JSON.stringify(value));
                var fileExt = value.name.substring(value.name.lastIndexOf('.') + 1, value.name.length) || value.name;
                //console.log("Extension :::::::::::::::: " + fileExt);
                if (value.isFile && (fileExt == "png" || fileExt == "jpg" || fileExt == "jpeg" || fileExt == "gif")) {
                    //console.log("Getting image data base64");
                    _this.file.readAsDataURL(baseURL + dirToList, value.name)
                        .then(function (url) {
                        var img = {
                            id: idImg,
                            url: url,
                            data: value
                        };
                        _this.listImage.push(img);
                        idImg++;
                        if (_this.selectedImg == null)
                            _this.selectedImg = _this.listImage[0];
                        //console.log(url);
                    })
                        .catch(function (error) {
                        console.log(JSON.stringify(error));
                    });
                }
                else if (value.isDirectory && value.name != 'cache') {
                    _this.getImagesGalerie(baseURL + dirToList + '/', value.name);
                }
            });
        })
            .catch(function (ex) {
            console.log('error');
            console.log(JSON.stringify(ex));
        });
    };
    Faqadd1Page.prototype.fermer = function () {
        // this.navCtrl.pop();
        this.viewCtrl.dismiss(null);
    };
    Faqadd1Page.prototype.fermerDismiss = function () {
        this.viewCtrl.dismiss(null);
    };
    Faqadd1Page.prototype.nextStep = function () {
        var _this = this;
        if (this.source == 'profil') {
            //editProfilURL
            this.load = 1;
            this.viewCtrl.dismiss(this.selectedImg);
        }
        else if (this.source == 2) {
            this.viewCtrl.dismiss(this.selectedImg);
        }
        else if (this.source == 'newpub') {
            var rpc = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_4__faqadd3_faqadd3__["a" /* Faqadd3Page */], {
                img: this.selectedImg,
                user: this.user,
                theme: this.theme
            });
            rpc.onDidDismiss(function (data) {
                console.log(JSON.stringify(data));
                _this.viewCtrl.dismiss(data);
            });
            rpc.present();
        }
    };
    Faqadd1Page.prototype.dismiss = function () {
        this.viewCtrl.dismiss(this.selectedImg);
    };
    Faqadd1Page.prototype.setActiveToPhoto = function (arg) {
        this.activeToPhoto = arg;
        if (this.activeToPhoto == 1) {
            this.checkPermissions();
        }
    };
    // public takePicture() {
    //   let baseURL = this.file.externalRootDirectory;
    //   const options: CameraOptions = {
    //     quality: 100,
    //     destinationType: this.camera.DestinationType.FILE_URI,
    //     encodingType: this.camera.EncodingType.PNG,
    //     mediaType: this.camera.MediaType.PICTURE,
    //     targetWidth: 900,
    //     targetHeight: 600,
    //     allowEdit: false
    //   }
    //   this.camera.getPicture(options).then((imageData) => {
    //     // imageData is either a base64 encoded string or a file URI
    //     // If it's base64 (DATA_URL):
    //     console.log("Base64 image data tacked as picture");
    //     console.log(imageData);
    //     console.log('FilePath', imageData);
    //     let fileName = imageData.substr(imageData.lastIndexOf('/') + 1);
    //     let fileExtension = fileName.substr(fileName.lastIndexOf('.') + 1);
    //     let filePath = imageData.substr(0, imageData.lastIndexOf('/') + 1);
    //     console.log(fileName);
    //     console.log(fileExtension);
    //     console.log(filePath);
    //     //this.takedPic = 'data:image/jpeg;base64,' + filePathResized;
    //     this.file.copyFile(filePath, fileName, baseURL + "Pictures", fileName)
    //       .then(data => {
    //         console.log("Copy finished");
    //         console.log(JSON.stringify(data));
    //         this.file.readAsDataURL(baseURL + 'Pictures', data.name)
    //           .then(url => {
    //             let img = {
    //               id: (this.listImage.length + 1),
    //               url: url,
    //               data: data
    //             };
    //             // this.listImage.push(img);
    //             this.selectedImg = img;
    //             //console.log(url);
    //           })
    //           .catch(error => {
    //             console.log(JSON.stringify(error));
    //           });
    //       },
    //         error => {
    //           console.log("Error when copying file");
    //           console.log(JSON.stringify(error));
    //         });
    //   },
    //     (err) => {
    //       console.log("Error on camera");
    //       console.log(JSON.stringify(err));
    //     });
    // }
    Faqadd1Page.prototype.showGalery = function () {
        var _this = this;
        this.photoLibrary.requestAuthorization().then(function () {
            _this.photoLibrary.getLibrary().subscribe({
                next: function (library) {
                    _this.phoneLibPhotos = library;
                    var _loop_1 = function (i) {
                        var url = 'file://' + _this.phoneLibPhotos[i].id.substring(_this.phoneLibPhotos[i].id.lastIndexOf(';') + 1, _this.phoneLibPhotos[i].id.length);
                        var dirEntry = url.substring(0, url.lastIndexOf('/'));
                        var fileName = url.substring(url.lastIndexOf('/') + 1, url.length);
                        _this.file.readAsDataURL(dirEntry, fileName)
                            .then(function (urlBase64) {
                            var img = {
                                id: _this.phoneLibPhotos[i].id,
                                url: urlBase64,
                                nativeURL: url,
                                data: {
                                    nativeURL: url
                                }
                            };
                            _this.listImage.push(img);
                            if (_this.selectedImg == null)
                                _this.selectedImg = _this.listImage[0];
                            if (i == 11) {
                                _this.range += 1;
                                _this.load = 0;
                            }
                            //console.log(url);
                        })
                            .catch(function (error) {
                            _this.load = 0;
                            console.log("Can not read file");
                            console.log(JSON.stringify(error));
                        });
                    };
                    //this.listImage = library;
                    for (var i = 0; i < 12; i++) {
                        _loop_1(i);
                    }
                },
                error: function (err) { console.log('could not get photos'); },
                complete: function () { console.log('done getting photos'); }
            });
        })
            .catch(function (err) { return console.log('permissions weren\'t granted'); });
    };
    // public getFromCamera(){
    //   this.load = 1;
    //   let baseURL = this.file.externalRootDirectory;
    //   const options: CameraOptions = {
    //     quality: 100,
    //     destinationType: this.camera.DestinationType.FILE_URI,
    //     encodingType: this.camera.EncodingType.PNG,
    //     mediaType: this.camera.MediaType.PICTURE,
    //     // targetWidth: 900,
    //     // targetHeight: 600,
    //     sourceType: this.camera.PictureSourceType.PHOTOLIBRARY,
    //     allowEdit: false
    //   }
    //   this.camera.getPicture(options).then((imageData) => {
    //     // imageData is either a base64 encoded string or a file URI
    //     // If it's base64 (DATA_URL):
    //     console.log("Base64 image data tacked as picture");
    //     console.log(imageData.substr(0, imageData.lastIndexOf('?')));
    //     let fullPath = imageData.substr(0, imageData.lastIndexOf('?'))
    //     console.log('FilePath', fullPath);
    //     let fileName = fullPath.substr(fullPath.lastIndexOf('/') + 1);
    //     let fileExtension = fileName.substr(fileName.lastIndexOf('.') + 1);
    //     let filePath = fullPath.substr(0, fullPath.lastIndexOf('/') + 1);
    //     console.log(fileName);
    //     console.log(fileExtension);
    //     console.log(filePath);
    //     this.file.readAsDataURL(filePath, fileName)
    //       .then(url => {
    //         this.load = 0;
    //         let img = {
    //           id: (this.listImage.length + 1),
    //           url: url,
    //           data: { nativeURL: fullPath }
    //         };
    //         // this.listImage.push(img);
    //         this.selectedImg = img;
    //         //console.log(url);
    //       })
    //       .catch(error => {
    //         this.load = 0;
    //         console.log(JSON.stringify(error));
    //       });
    //   },
    //     (err) => {
    //       this.load = 0;
    //       console.log("Error on camera");
    //       console.log(JSON.stringify(err));
    //     });
    // }
    // public getFromGalery() {
    //   this.imagePicker.getPictures({}).then((results) => {
    //     for (var i = 0; i < results.length; i++) {
    //         console.log('Image URI: ');
    //         console.log(JSON.stringify(results[i]));
    //     }
    //   }, (err) => { 
    //     console.log(JSON.stringify(err))
    //    });
    // }
    Faqadd1Page.prototype.doInfinite = function (infiniteScroll) {
        var _this = this;
        if (this.range * 12 >= this.phoneLibPhotos.length) {
            infiniteScroll.complete();
            return;
        }
        var limit = this.range * 24 < this.phoneLibPhotos.length ? this.range * 24 : this.phoneLibPhotos.length;
        var _loop_2 = function (i) {
            var url = 'file://' + this_1.phoneLibPhotos[i].id.substring(this_1.phoneLibPhotos[i].id.lastIndexOf(';') + 1, this_1.phoneLibPhotos[i].id.length);
            var dirEntry = url.substring(0, url.lastIndexOf('/'));
            var fileName = url.substring(url.lastIndexOf('/') + 1, url.length);
            console.log("=========================================");
            console.log(dirEntry);
            console.log(fileName);
            this_1.file.readAsDataURL(dirEntry, fileName)
                .then(function (urlBase64) {
                var img = {
                    id: _this.phoneLibPhotos[i].id,
                    url: urlBase64,
                    nativeURL: url,
                    data: {
                        nativeURL: url
                    }
                };
                _this.listImage.push(img);
                if (_this.selectedImg == null)
                    _this.selectedImg = _this.listImage[0];
                if (i == limit - 1) {
                    _this.range += 1;
                    infiniteScroll.complete();
                }
            })
                .catch(function (error) {
                console.log(JSON.stringify(error));
            });
        };
        var this_1 = this;
        for (var i = this.range * 12; i < limit; i++) {
            _loop_2(i);
        }
    };
    Faqadd1Page = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-faqadd1',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/faqadd1/faqadd1.html"*/'<ion-content>\n\n  <div ion-fixed class="load-ctn" id="load" *ngIf="load == 1">\n    <img class="load-img" src="../../assets/icon/Spinner-load.svg" />\n  </div>\n\n  <ion-grid *ngIf="activeToPhoto == 1" class="camera-ctn">\n    <ion-row>\n      <img class="taked-pic" *ngIf="takedPic != null" src="{{takedPic}}" alt="">\n    </ion-row>\n    <ion-row>\n      <ion-fab right top>\n        <button ion-fab color="secondary" (click)="changeEffect()">\n          <img src="../../assets/icon/enhance-effect.svg">\n        </button>\n      </ion-fab>\n\n      <ion-fab right bottom>\n        <button ion-fab color="primary" (click)="takePicture()">\n          <img src="../../assets/icon/take-pic.svg">\n        </button>\n      </ion-fab>\n    </ion-row>\n  </ion-grid>\n\n  <ion-grid *ngIf="activeToPhoto == 0" class="container">\n\n    <ion-row class="header">\n      <ion-col>\n        <img class="back-icon" src="../../assets/icon/cancel.svg" (click)="fermer()" />\n      </ion-col>\n\n\n      <ion-col class="gc" (click)="nextStep();">\n        <span class="fw-faq">{{title}}</span>\n        <img class="fw-icon" src="../../assets/icon/right-arrow-blue.svg" />\n      </ion-col>\n\n    </ion-row>\n\n    <ion-row *ngIf="selectedImg != null" class="ctn-selected-img">\n      <img src="{{selectedImg.url}}" class="img-sd" />\n    </ion-row>\n\n    <ion-row class="img-ctn">\n      <img *ngFor="let img of listImage" [src]="img.url" class="img-to" (click)="selectImage(img);">\n    </ion-row>\n\n  </ion-grid>\n\n  <ion-infinite-scroll (ionInfinite)="doInfinite($event)">\n    <ion-infinite-scroll-content></ion-infinite-scroll-content>\n  </ion-infinite-scroll>\n\n  <ion-row *ngIf="selectedImg == null" ion-fixed class="instrPhoto">\n    <ion-label class="textToWrap">\n      <span class="textToWrap">Utilisez votre caméra ou galerie si vous voullez ajouter une image,\n        en cliquant sur l\'un des deux boutons en dessous.<br></span>\n      <span class="textToWrap"><br><br>Si non vous pouvez cliquer sur continuer immediatement.</span>\n    </ion-label>\n  </ion-row>\n\n  <ion-row ion-fixed class="tab-faq">\n    <ion-col class="to-right" (click)="getFromCamera();">\n      <ion-label>Galerie</ion-label>\n    </ion-col>\n    <ion-col class="to-left" (click)="takePicture();">\n      <ion-label>Photo</ion-label>\n    </ion-col>\n  </ion-row>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/faqadd1/faqadd1.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_file__["a" /* File */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_file_transfer__["a" /* FileTransfer */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_6__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["s" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_native_diagnostic__["a" /* Diagnostic */],
            __WEBPACK_IMPORTED_MODULE_8__ionic_native_photo_library__["a" /* PhotoLibrary */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */]])
    ], Faqadd1Page);
    return Faqadd1Page;
}());

//# sourceMappingURL=faqadd1.js.map

/***/ }),

/***/ 90:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AnnonceCatPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dentart_dentart__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mesannonces_mesannonces__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__notifications_notifications__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__a_savoir_a_savoir__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__formations_formations__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__annonces_annonces__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__uprofil_uprofil__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__menu_menu__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ionic_storage__ = __webpack_require__(15);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











/**
 * Generated class for the AnnonceCatPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AnnonceCatPage = /** @class */ (function () {
    function AnnonceCatPage(navCtrl, navParams, viewCtrl, platform, modalCtrl, events, storage) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.viewCtrl = viewCtrl;
        this.platform = platform;
        this.modalCtrl = modalCtrl;
        this.events = events;
        this.storage = storage;
        this.cat = { id: "retour", slug: "", name: "" };
        this.listCat = [];
        this.user = {};
        this.title = "";
        this.load = 0;
        this.listCat = navParams.get('listCat');
        this.user = navParams.get('user');
        this.title = navParams.get('title');
        this.selectBefore = navParams.get('selectBefore');
        console.log(JSON.stringify(this.selectBefore));
        console.log("List des categories");
        console.log(JSON.stringify(this.listCat));
        platform.registerBackButtonAction(function () {
            _this.viewCtrl.dismiss(null);
        });
    }
    AnnonceCatPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AnnonceCatPage');
        if (this.selectBefore != null) {
            if (this.selectBefore.id == 'all') {
                this.cat = this.selectBefore;
                this.selectFilter('btn_all', 'icon_btn_all', { id: "all", slug: "", name: "" });
            }
            else if (this.selectBefore.id == 'retour') {
                //
            }
            else if (this.selectBefore.id != null && this.selectBefore.id != '') {
                this.selectFilter('btn' + this.selectBefore.id, 'icon_btn_' + this.selectBefore.id, this.selectBefore);
            }
        }
    };
    AnnonceCatPage.prototype.openMenu = function () {
        var _this = this;
        var menu = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_9__menu_menu__["a" /* MenuPage */], {
            user: this.user
        });
        //let menu = MenuPage;
        menu.onDidDismiss(function (page) {
            _this.platform.registerBackButtonAction(function () {
                _this.viewCtrl.dismiss(null);
            });
            if (page.title == "Partages") {
                //
            }
            else if (page.title == "profil") {
                var adPage = __WEBPACK_IMPORTED_MODULE_8__uprofil_uprofil__["a" /* UprofilPage */];
                _this.navCtrl.push(adPage, {
                    user: _this.user
                }, {
                    animate: true
                });
            }
            else if (page.title == "Annonces") {
                var adPage = __WEBPACK_IMPORTED_MODULE_7__annonces_annonces__["a" /* AnnoncesPage */];
                _this.navCtrl.push(adPage, {
                    user: _this.user
                }, {
                    animate: true
                });
            }
            else if (page.title == "Formations") {
                var formPage = __WEBPACK_IMPORTED_MODULE_6__formations_formations__["a" /* FormationsPage */];
                _this.navCtrl.push(formPage, {
                    user: _this.user
                }, {
                    animate: true
                });
            }
            else if (page.title == "News") {
                var actuPage = __WEBPACK_IMPORTED_MODULE_5__a_savoir_a_savoir__["a" /* ASavoirPage */];
                _this.navCtrl.push(actuPage, {
                    user: _this.user
                }, {
                    animate: true
                });
            }
            else if (page.title == "Mes alertes") {
                var notif = __WEBPACK_IMPORTED_MODULE_4__notifications_notifications__["a" /* NotificationsPage */];
                _this.navCtrl.push(notif, {
                    user: _this.user
                }, {
                    animate: true
                });
            }
            else if (page.title == 'mesannonces') {
                var notif = __WEBPACK_IMPORTED_MODULE_3__mesannonces_mesannonces__["a" /* MesannoncesPage */];
                _this.navCtrl.push(notif, {
                    user: _this.user
                }, {
                    animate: true
                });
            }
            else if (page.title == "deconnexion") {
                _this.events.publish('user:logedOut', _this.user);
                _this.load = 1;
                _this.storage.set('user', null)
                    .then(function (data) {
                    console.log(JSON.stringify(data));
                    setTimeout(function () {
                        _this.load = 0;
                        _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_2__dentart_dentart__["a" /* DentartPage */], {}, {
                            animate: true
                        });
                    }, 500);
                }, function (error) {
                    console.log(JSON.stringify(error));
                });
            }
            else if (page.title == "") {
                //
            }
        });
        menu.present();
    };
    AnnonceCatPage.prototype.selectFilter = function (idBtn, idIcon, selectedCat) {
        for (var i = 0; i < this.listCat.length; i++) {
            document.getElementById('btn' + this.listCat[i].id).style.fontWeight = '100';
            document.getElementById('icon_btn_' + this.listCat[i].id).style.display = 'none';
            document.getElementById('btn' + this.listCat[i].id).style.color = '#a5a5a5';
        }
        if (this.cat.id == selectedCat.id && this.cat.id != "") {
            this.cat = { id: "", slug: "", name: "" };
        }
        else {
            document.getElementById(idIcon).style.display = 'inline';
            document.getElementById(idBtn).style.fontWeight = 'bold';
            document.getElementById(idBtn).style.color = '#4ce4b1';
            this.cat = selectedCat;
        }
    };
    AnnonceCatPage.prototype.dismiss = function () {
        this.viewCtrl.dismiss(this.cat);
    };
    AnnonceCatPage.prototype.noFilter = function () {
        this.viewCtrl.dismiss({ id: "", slug: "", name: "" });
    };
    AnnonceCatPage.prototype.retour = function () {
        this.viewCtrl.dismiss(this.selectBefore);
    };
    AnnonceCatPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-annonce-cat',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/annonce-cat/annonce-cat.html"*/'<ion-content class="pr">\n\n    <ion-row ion-fixed class="header">\n        \n        <ion-col></ion-col>\n        <ion-col>\n          <ion-label class="da">\n            <img class="logo" src="assets/imgs/da_image/logo-dentart.png">\n            <span class="bold">Dent</span><span class="fine">Art</span>\n          </ion-label>\n        </ion-col>\n        <ion-col></ion-col>\n    \n      </ion-row>\n\n  <div class="container">\n\n    <div class="to-100">\n\n      <ion-row *ngFor="let cat of listCat" class="btn-ctn-left">\n        <button id="btn{{cat.id}}" ion-button class="btn-blue-gradient" (click)="selectFilter(\'btn\'+cat.id,\'icon_btn_\'+cat.id,cat);">\n          {{cat.name}}\n          <ion-icon id="icon_btn_{{cat.id}}" class="icon-checked" color="gris">\n            <img class="check-icon" src="../../assets/imgs/da_image/Group.png" />\n          </ion-icon>\n        </button>\n      </ion-row>\n\n    </div>\n\n\n\n  </div>\n\n  <ion-row class="bottom-annuler">\n\n    <button ion-button round class="btn-blue-gradient-round anl" (click)="noFilter();">Annuler</button>\n    <button ion-button round class="btn-blue-gradient-round vld" (click)="dismiss();">Valider</button>\n\n\n  </ion-row>\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/annonce-cat/annonce-cat.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["t" /* ViewController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["f" /* Events */],
            __WEBPACK_IMPORTED_MODULE_10__ionic_storage__["b" /* Storage */]])
    ], AnnonceCatPage);
    return AnnonceCatPage;
}());

//# sourceMappingURL=annonce-cat.js.map

/***/ }),

/***/ 91:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FormationDetailsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_toast__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_globals_globals__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_http__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mailto_mailto__ = __webpack_require__(87);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_call_number__ = __webpack_require__(76);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_browser_tab__ = __webpack_require__(64);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








/**
 * Generated class for the FormationDetailsPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var FormationDetailsPage = /** @class */ (function () {
    function FormationDetailsPage(navCtrl, navParams, toast, globals, http, modalCtrl, platform, callNumber, browserTab) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.toast = toast;
        this.globals = globals;
        this.http = http;
        this.modalCtrl = modalCtrl;
        this.platform = platform;
        this.callNumber = callNumber;
        this.browserTab = browserTab;
        this.formation = {};
        this.user = {};
        this.user = navParams.get('user');
        this.formation = navParams.get('formation');
        console.log("Phone for the formation : " + this.formation.telephone);
        var phoneOwner = this.formation.telephone != "" && this.formation.telephone != null ? this.formation.telephone : (this.formation.user_infos ? this.formation.user_infos.phone : this.formation.author_infos.phone);
        this.formation.phoneOwner = phoneOwner;
        console.log("Phone for the formation : " + this.formation.phoneOwner);
        platform.registerBackButtonAction(function () {
            navCtrl.pop();
        });
    }
    FormationDetailsPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad FormationDetailsPage');
    };
    FormationDetailsPage.prototype.retour = function () {
        this.navCtrl.pop();
    };
    FormationDetailsPage.prototype.report = function () {
        var _this = this;
        //
        //repportFaQ
        this.http.post(this.globals.variables.urls.repportFaQ, {
            "user_id": this.user.id_User != null ? this.user.id_User : this.user.id,
            "post_id": this.formation.id
        }, {})
            .then(function (data) {
            var res = JSON.parse(data.data);
            console.log(JSON.stringify(res));
            if (res.status == "ok") {
                if (_this.formation.user_report == 0) {
                    _this.formation.user_report = 1;
                    _this.toast.show("Vous avez signalé cette formation", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
                else {
                    _this.formation.user_report = 0;
                    _this.toast.show("Votre signalisation a été annulée", "2000", "bottom").subscribe(function (toast) {
                        console.log(toast);
                    });
                }
            }
            else {
                console.log(JSON.stringify(res));
            }
            //console.log(JSON.stringify(data.data));
        }, function (error) {
            console.log(JSON.stringify(error));
        });
    };
    FormationDetailsPage.prototype.showMailTo = function () {
        var _this = this;
        var mailto = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_5__mailto_mailto__["a" /* MailtoPage */], {
            user: this.user,
            ad: this.formation,
            mail: this.formation.user_infos.user_email,
            post_id: this.formation.id,
            object: this.formation.title
        });
        mailto.onDidDismiss(function (data) {
            _this.platform.registerBackButtonAction(function () {
                _this.navCtrl.pop();
            });
            console.log(JSON.stringify(data));
        });
        mailto.present();
    };
    FormationDetailsPage.prototype.callAuthor = function (phone) {
        console.log(phone);
        this.callNumber.isCallSupported()
            .then(function (data) {
            alert("Call suport : " + data);
        })
            .catch(function (error) {
            console.log(JSON.stringify(error));
        });
        this.callNumber.callNumber(phone, true)
            .then(function (res) { return console.log('Launched dialer!', res); })
            .catch(function (err) { return console.log('Error launching dialer', err); });
    };
    FormationDetailsPage.prototype.openLink = function (url) {
        var _this = this;
        this.browserTab.isAvailable()
            .then(function (isAvailable) {
            if (isAvailable) {
                _this.browserTab.openUrl(url);
            }
            else {
                _this.toast.show("Navigateur non disponible", "2000", "bottom").subscribe(function (toast) {
                    console.log(toast);
                });
            }
        });
    };
    FormationDetailsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-formation-details',template:/*ion-inline-start:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/formation-details/formation-details.html"*/'<ion-content class="pr">\n\n  <ion-row ion-fixed class="top-gc">\n    <div (click)="retour();" class="back-ctn-1">\n      <img class="back-icon" src="../../assets/icon/back-117bcf.svg">\n      <div class="gc">\n        Retour\n      </div>\n    </div>\n    <div class="back-ctn-2" (click)="report();" *ngIf="(formation.user_infos.id != null && formation.user_infos.id != user.id_User) || (formation.user_infos.id_User != null && formation.user_infos.id_User != user.id_User)">\n\n      <div class="alert-faq">Signaler </div>\n      <img class="icon-report" src="{{formation.user_report == 1 ? \'../../assets/icon/exclamation-red.svg\' : \'../../assets/icon/exclamation-blue.svg\'}}" />\n\n    </div>\n  </ion-row>\n\n  <div class="container">\n\n    <div class="to-100">\n\n      <ion-row class="faq-det-grid">\n\n        <ion-col>\n\n          <ion-row class="gc-ctn">\n            <ion-col>\n\n              <!-- <ion-row class="gc-ctn-author">\n\n                <div class="avatar-ctn">\n                  <img class="img-profil" src="{{formation.user_infos.avatar}}" alt="Photo de profil">\n                  <img *ngIf="formation.user_infos.validate == 1" class="cert" src="../../assets/icon/certifie.png">\n                </div>\n\n                <div class="text-align-left">\n                  <span class="bold-name">\n                    {{formation.user_infos.pseudo}}<br>\n                  </span>\n                  <span class="fine-lieu">\n                    {{formation.user_infos.job}} - {{formation.user_infos.address}}\n                  </span>\n                </div>\n\n              </ion-row> -->\n\n              <ion-row>\n                <ion-label class="gc-label">\n\n                  <span class="titre-faq">{{formation.title}}<br></span>\n                  <div class="sep-title"></div>\n                  <span class="cat">{{formation.categorie.name}}<br></span>\n                  <span class="address">{{formation.lieu}}<br></span>\n                  <span class="price" *ngIf="formation.prix > 0">{{formation.prix}} €<br></span>\n                  <div class="sep"></div>\n                  <span class="titre-faq-p">Programme<br></span>\n                  <span [innerHtml]="formation.programme_de_la_formation"></span>\n                  <!-- {{formation.programme_de_la_formation}} -->\n\n                  <span class="sep2"></span>\n\n                  <span class="contact-ttl">Lien :\n                    <span class="contact-value" *ngIf="formation.lien != false && formation.lien != null && formation.lien != \'\' && formation.lien != \'#\'"\n                      (click)="openLink(formation.lien)">{{formation.lien}}</span>\n                    <span class="no-contact" *ngIf="formation.lien == false || formation.lien == null || formation.lien == \'\' || formation.lien == \'#\'">Pas\n                      de lien pour cette formation</span>\n                  </span>\n\n                  <span class="contact-ttl">E-mail de l\'auteur :\n                    <span class="contact-value" *ngIf="formation.user_infos.user_email != null && formation.user_infos.user_email != \'\'"\n                      (click)="showMailTo();">{{formation.user_infos.user_email}}</span>\n                    <span class="no-contact" *ngIf="formation.user_infos.user_email == null || formation.user_infos.user_email == \'\'">Pas\n                      d\'adresse e-mail d\'auteur</span>\n                  </span>\n\n                  <span class="contact-ttl">Téléphone :\n                    <span class="contact-value" *ngIf="formation.phoneOwner != null && formation.phoneOwner != \'\'"\n                      (click)="callAuthor(formation.phoneOwner);">{{formation.phoneOwner}}</span>\n                    <span class="no-contact" *ngIf="formation.phoneOwner == null || formation.phoneOwner == \'\'">Pas\n                      de téléphone d\'auteur</span>\n                  </span>\n\n                  <span class="contact-ttl">Intervenant(s) :\n                    <span class="contact-value" *ngIf="formation.nom_de_l_intervenant != null && formation.nom_de_l_intervenant != \'\'"\n                      >{{formation.nom_de_l_intervenant}}</span>\n                    <span class="no-contact" *ngIf="formation.nom_de_l_intervenant == null || formation.nom_de_l_intervenant == \'\'">Pas\n                      d\'intervenant </span>\n                  </span>\n\n                  <!-- nom_de_l_intervenant -->\n\n                  <!-- <span class="contact-ttl">Autre téléphone :\n                    <span class="contact-value" *ngIf="formation.telephone != null && formation.telephone != \'\'"\n                      (click)="callAuthor(formation.telephone);">{{formation.user_infos.phone}}</span>\n                    <span class="no-contact" *ngIf="formation.telephone == null || formation.telephone == \'\'">Pas\n                      d\'autre téléphone</span>\n                  </span> -->\n\n                </ion-label>\n              </ion-row>\n\n              <ion-row class="btn-ctn">\n                <ion-col (click)="showMailTo();">\n                  <button ion-button round class="btn-blue-gradient">\n                    <img class="ad-icon" src="../../assets/icon/email-4ce4b1.svg">\n                    <span> Contacter</span>\n                  </button>\n                </ion-col>\n                <ion-col (click)="callAuthor(formation.phoneOwner);">\n                  <button ion-button round class="btn-blue-gradient">\n                    <img class="ad-icon" src="../../assets/icon/call-4ce4b1.svg">\n                    <span> Appeler</span>\n                  </button>\n                </ion-col>\n              </ion-row>\n\n            </ion-col>\n          </ion-row>\n\n        </ion-col>\n      </ion-row>\n\n    </div>\n\n\n\n  </div>\n\n\n\n</ion-content>\n'/*ion-inline-end:"/home/cathy/Téléchargements/Projet/dentArt/ionic.dentart/src/pages/formation-details/formation-details.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_toast__["a" /* Toast */],
            __WEBPACK_IMPORTED_MODULE_3__providers_globals_globals__["a" /* GlobalsProvider */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_native_call_number__["a" /* CallNumber */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_native_browser_tab__["a" /* BrowserTab */]])
    ], FormationDetailsPage);
    return FormationDetailsPage;
}());

//# sourceMappingURL=formation-details.js.map

/***/ })

},[271]);
//# sourceMappingURL=main.js.map